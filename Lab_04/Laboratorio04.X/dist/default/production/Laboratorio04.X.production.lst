

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 10 01:51:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  0009                     _PORTE	set	9
   393  0007                     _PORTC	set	7
   394  0005                     _PORTA	set	5
   395  0008                     _PORTD	set	8
   396  0006                     _PORTB	set	6
   397  0013                     _SSPBUF	set	19
   398  0014                     _SSPCON	set	20
   399  0049                     _RE1	set	73
   400  0048                     _RE0	set	72
   401  003D                     _RC5	set	61
   402  0038                     _RC0	set	56
   403  0039                     _RC1	set	57
   404  003A                     _RC2	set	58
   405  0063                     _SSPIF	set	99
   406  005E                     _PEIE	set	94
   407  005F                     _GIE	set	95
   408  008F                     _OSCCONbits	set	143
   409  0089                     _TRISEbits	set	137
   410  0087                     _TRISC	set	135
   411  0088                     _TRISD	set	136
   412  0086                     _TRISB	set	134
   413  0085                     _TRISAbits	set	133
   414  0091                     _SSPCON2bits	set	145
   415  0087                     _TRISCbits	set	135
   416  0094                     _SSPSTAT	set	148
   417  0093                     _SSPADD	set	147
   418  0091                     _SSPCON2	set	145
   419  0463                     _SSPIE	set	1123
   420  043C                     _TRISC4	set	1084
   421  043B                     _TRISC3	set	1083
   422  0189                     _ANSELH	set	393
   423  0188                     _ANSEL	set	392
   424                           
   425                           	psect	strings
   426  07E1                     __pstrings:
   427  07E1                     stringtab:
   428  07E1                     __stringtab:
   429                           
   430                           ;	String table - string pointers are 1 byte each
   431  07E1  1BFF               	btfsc	btemp+1,7
   432  07E2  2FEB               	ljmp	stringcode
   433  07E3  1383               	bcf	3,7
   434  07E4  187F               	btfsc	btemp+1,0
   435  07E5  1783               	bsf	3,7
   436  07E6  0800               	movf	0,w
   437  07E7  0A84               	incf	4,f
   438  07E8  1903               	skipnz
   439  07E9  0AFF               	incf	btemp+1,f
   440  07EA  0008               	return
   441  07EB                     stringcode:
   442  07EB                     stringdir:
   443  07EB  3007               	movlw	high stringdir
   444  07EC  008A               	movwf	10
   445  07ED  0804               	movf	4,w
   446  07EE  0A84               	incf	4,f
   447  07EF  0782               	addwf	2,f
   448  07F0                     __stringbase:
   449  07F0  3400               	retlw	0
   450  07F1                     __end_of__stringtab:
   451  07F1                     STR_1:
   452  07F1  3453               	retlw	83	;'S'
   453  07F2  3431               	retlw	49	;'1'
   454  07F3  3400               	retlw	0
   455  07F4                     STR_2:
   456  07F4  3453               	retlw	83	;'S'
   457  07F5  3432               	retlw	50	;'2'
   458  07F6  3400               	retlw	0
   459  07F7                     STR_3:
   460  07F7  3453               	retlw	83	;'S'
   461  07F8  3433               	retlw	51	;'3'
   462  07F9  3400               	retlw	0
   463  07FA                     STR_5:
   464  07FA  3427               	retlw	39	;'''
   465  07FB  3400               	retlw	0
   466  07FC                     STR_4:
   467  07FC  3456               	retlw	86	;'V'
   468  07FD  3400               	retlw	0
   469                           
   470                           	psect	cinit
   471  000F                     start_initialization:	
   472                           ; #config settings
   473                           
   474  000F                     __initialization:
   475                           
   476                           ; Clear objects allocated to COMMON
   477  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   478  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   479                           
   480                           ; Clear objects allocated to BANK1
   481  0011  1383               	bcf	3,7	;select IRP bank0
   482  0012  30A0               	movlw	low __pbssBANK1
   483  0013  0084               	movwf	4
   484  0014  30D3               	movlw	low (__pbssBANK1+51)
   485  0015  160A  118A  225C  120A  118A  	fcall	clear_ram0
   486  001A                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489  001A                     __end_of__initialization:
   490  001A  0183               	clrf	3
   491  001B  120A  158A  2CE8   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssCOMMON
   494  007A                     __pbssCOMMON:
   495  007A                     _residuo:
   496  007A                     	ds	1
   497  007B                     _valor:
   498  007B                     	ds	1
   499                           
   500                           	psect	bssBANK1
   501  00A0                     __pbssBANK1:
   502  00A0                     _conv1:
   503  00A0                     	ds	4
   504  00A4                     _conv0:
   505  00A4                     	ds	4
   506  00A8                     _count:
   507  00A8                     	ds	4
   508  00AC                     _full:
   509  00AC                     	ds	2
   510  00AE                     _units:
   511  00AE                     	ds	1
   512  00AF                     _tens:
   513  00AF                     	ds	1
   514  00B0                     _hundreds:
   515  00B0                     	ds	1
   516  00B1                     _converted02:
   517  00B1                     	ds	1
   518  00B2                     _converted:
   519  00B2                     	ds	1
   520  00B3                     _pot:
   521  00B3                     	ds	1
   522  00B4                     _temperature:
   523  00B4                     	ds	1
   524  00B5                     _cont:
   525  00B5                     	ds	10
   526  00BF                     _adc1:
   527  00BF                     	ds	10
   528  00C9                     _adc0:
   529  00C9                     	ds	10
   530                           
   531                           	psect	clrtext
   532  125C                     clear_ram0:	
   533                           ;	Called with FSR containing the base address, and
   534                           ;	W with the last address+1
   535                           
   536  125C  0064               	clrwdt	;clear the watchdog before getting into this loop
   537  125D                     clrloop0:
   538  125D  0180               	clrf	0	;clear RAM location pointed to by FSR
   539  125E  0A84               	incf	4,f	;increment pointer
   540  125F  0604               	xorwf	4,w	;XOR with final address
   541  1260  1903               	btfsc	3,2	;have we reached the end yet?
   542  1261  3400               	retlw	0	;all done for this memory range, return
   543  1262  0604               	xorwf	4,w	;XOR again to restore value
   544  1263  2A5D               	goto	clrloop0	;do the next byte
   545                           
   546                           	psect	cstackBANK1
   547  00D3                     __pcstackBANK1:
   548  00D3                     ?_ADC_convert:
   549  00D3                     ADC_convert@a:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 4 bytes @ 0x0
   554  00D3                     	ds	4
   555  00D7                     ADC_convert@place:
   556                           
   557                           ; 2 bytes @ 0x4
   558  00D7                     	ds	2
   559  00D9                     ADC_convert@temp:
   560                           
   561                           ; 2 bytes @ 0x6
   562  00D9                     	ds	2
   563  00DB                     ADC_convert@j:
   564                           
   565                           ; 2 bytes @ 0x8
   566  00DB                     	ds	2
   567  00DD                     ADC_convert@data:
   568                           
   569                           ; 1 bytes @ 0xA
   570  00DD                     	ds	1
   571  00DE                     ADC_convert@x:
   572                           
   573                           ; 4 bytes @ 0xB
   574  00DE                     	ds	4
   575  00E2                     ADC_convert@i:
   576                           
   577                           ; 2 bytes @ 0xF
   578  00E2                     	ds	2
   579  00E4                     ADC_convert@digits:
   580                           
   581                           ; 2 bytes @ 0x11
   582  00E4                     	ds	2
   583  00E6                     ADC_convert@mu:
   584                           
   585                           ; 2 bytes @ 0x13
   586  00E6                     	ds	2
   587  00E8                     ??_main:
   588                           
   589                           ; 1 bytes @ 0x15
   590  00E8                     	ds	4
   591  00EC                     _main$956:
   592                           
   593                           ; 4 bytes @ 0x19
   594  00EC                     	ds	4
   595                           
   596                           	psect	cstackCOMMON
   597  0070                     __pcstackCOMMON:
   598  0070                     ?_setup:
   599  0070                     ?_Lcd_Init:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Lcd_Clear:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_division:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_I2C_Master_Wait:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_I2C_Master_Start:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_I2C_Master_Stop:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_isr:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ??_isr:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_main:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_Lcd_Port:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_Lcd_Cmd:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_Lcd_Write_Char:	
   633                           ; 1 bytes @ 0x0
   634                           
   635                           
   636                           ; 1 bytes @ 0x0
   637  0070                     	ds	2
   638  0072                     ?___flge:
   639  0072                     ??_I2C_Master_Wait:	
   640                           ; 1 bit 
   641                           
   642  0072                     ??_I2C_Master_Start:	
   643                           ; 1 bytes @ 0x2
   644                           
   645  0072                     ??_I2C_Master_Stop:	
   646                           ; 1 bytes @ 0x2
   647                           
   648  0072                     ?_I2C_Master_Write:	
   649                           ; 1 bytes @ 0x2
   650                           
   651  0072                     ??_Lcd_Port:	
   652                           ; 1 bytes @ 0x2
   653                           
   654  0072                     ?__Umul8_16:	
   655                           ; 1 bytes @ 0x2
   656                           
   657  0072                     ?_I2C_Master_Read:	
   658                           ; 2 bytes @ 0x2
   659                           
   660  0072                     ?___awdiv:	
   661                           ; 2 bytes @ 0x2
   662                           
   663  0072                     ?___awmod:	
   664                           ; 2 bytes @ 0x2
   665                           
   666  0072                     ?___lldiv:	
   667                           ; 2 bytes @ 0x2
   668                           
   669  0072                     ?___fltol:	
   670                           ; 4 bytes @ 0x2
   671                           
   672  0072                     ?___fladd:	
   673                           ; 4 bytes @ 0x2
   674                           
   675  0072                     Lcd_Port@a:	
   676                           ; 4 bytes @ 0x2
   677                           
   678  0072                     __Umul8_16@multiplicand:	
   679                           ; 1 bytes @ 0x2
   680                           
   681  0072                     I2C_Master_Write@d:	
   682                           ; 1 bytes @ 0x2
   683                           
   684  0072                     I2C_Master_Read@a:	
   685                           ; 2 bytes @ 0x2
   686                           
   687  0072                     ___awdiv@divisor:	
   688                           ; 2 bytes @ 0x2
   689                           
   690  0072                     ___awmod@divisor:	
   691                           ; 2 bytes @ 0x2
   692                           
   693  0072                     ___lldiv@divisor:	
   694                           ; 2 bytes @ 0x2
   695                           
   696  0072                     ___flge@ff1:	
   697                           ; 4 bytes @ 0x2
   698                           
   699  0072                     ___fltol@f1:	
   700                           ; 4 bytes @ 0x2
   701                           
   702  0072                     ___fladd@b:	
   703                           ; 4 bytes @ 0x2
   704                           
   705                           
   706                           ; 4 bytes @ 0x2
   707  0072                     	ds	1
   708  0073                     ??_Lcd_Cmd:
   709  0073                     ??_Lcd_Write_Char:	
   710                           ; 1 bytes @ 0x3
   711                           
   712                           
   713                           ; 1 bytes @ 0x3
   714  0073                     	ds	1
   715  0074                     ??__Umul8_16:
   716  0074                     ??_I2C_Master_Write:	
   717                           ; 1 bytes @ 0x4
   718                           
   719  0074                     ??_I2C_Master_Read:	
   720                           ; 1 bytes @ 0x4
   721                           
   722  0074                     Lcd_Write_Char@temp:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0074                     ___awdiv@dividend:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0074                     ___awmod@dividend:	
   729                           ; 2 bytes @ 0x4
   730                           
   731                           
   732                           ; 2 bytes @ 0x4
   733  0074                     	ds	1
   734  0075                     Lcd_Cmd@a:
   735  0075                     Lcd_Write_Char@y:	
   736                           ; 1 bytes @ 0x5
   737                           
   738                           
   739                           ; 1 bytes @ 0x5
   740  0075                     	ds	1
   741  0076                     ??_Lcd_Init:
   742  0076                     ??_Lcd_Clear:	
   743                           ; 1 bytes @ 0x6
   744                           
   745  0076                     ?_Lcd_Set_Cursor:	
   746                           ; 1 bytes @ 0x6
   747                           
   748  0076                     ??___awdiv:	
   749                           ; 1 bytes @ 0x6
   750                           
   751  0076                     ??___awmod:	
   752                           ; 1 bytes @ 0x6
   753                           
   754  0076                     Lcd_Set_Cursor@b:	
   755                           ; 1 bytes @ 0x6
   756                           
   757  0076                     Lcd_Write_Char@a:	
   758                           ; 1 bytes @ 0x6
   759                           
   760  0076                     ___fltol@sign1:	
   761                           ; 1 bytes @ 0x6
   762                           
   763  0076                     I2C_Master_Read@temp:	
   764                           ; 1 bytes @ 0x6
   765                           
   766  0076                     ___lldiv@dividend:	
   767                           ; 2 bytes @ 0x6
   768                           
   769  0076                     ___flge@ff2:	
   770                           ; 4 bytes @ 0x6
   771                           
   772  0076                     ___fladd@a:	
   773                           ; 4 bytes @ 0x6
   774                           
   775                           
   776                           ; 4 bytes @ 0x6
   777  0076                     	ds	1
   778  0077                     ??_Lcd_Set_Cursor:
   779  0077                     ?_Lcd_Write_String:	
   780                           ; 1 bytes @ 0x7
   781                           
   782  0077                     ___awmod@counter:	
   783                           ; 1 bytes @ 0x7
   784                           
   785  0077                     ___fltol@exp1:	
   786                           ; 1 bytes @ 0x7
   787                           
   788  0077                     Lcd_Write_String@a:	
   789                           ; 1 bytes @ 0x7
   790                           
   791                           
   792                           ; 2 bytes @ 0x7
   793  0077                     	ds	1
   794  0078                     ??___wmul:
   795  0078                     ___awmod@sign:	
   796                           ; 1 bytes @ 0x8
   797                           
   798  0078                     ___wmul@product:	
   799                           ; 1 bytes @ 0x8
   800                           
   801                           
   802                           ; 2 bytes @ 0x8
   803  0078                     	ds	1
   804  0079                     division@valor:
   805                           
   806                           ; 1 bytes @ 0x9
   807  0079                     	ds	1
   808  007A                     ??_setup:
   809  007A                     ??___flsub:	
   810                           ; 1 bytes @ 0xA
   811                           
   812                           
   813                           	psect	cstackBANK0
   814  0020                     __pcstackBANK0:	
   815                           ; 1 bytes @ 0xA
   816                           
   817  0020                     ??_Lcd_Write_String:
   818  0020                     ??___lldiv:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0020                     ??___flge:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0020                     ??___fltol:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0020                     ??___fladd:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0020                     Lcd_Set_Cursor@a:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0020                     ___awdiv@counter:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0020                     __Umul8_16@product:	
   837                           ; 1 bytes @ 0x0
   838                           
   839                           
   840                           ; 2 bytes @ 0x0
   841  0020                     	ds	1
   842  0021                     Lcd_Set_Cursor@z:
   843  0021                     ___awdiv@sign:	
   844                           ; 1 bytes @ 0x1
   845                           
   846  0021                     ___lldiv@quotient:	
   847                           ; 1 bytes @ 0x1
   848                           
   849                           
   850                           ; 4 bytes @ 0x1
   851  0021                     	ds	1
   852  0022                     Lcd_Set_Cursor@y:
   853  0022                     ___awdiv@quotient:	
   854                           ; 1 bytes @ 0x2
   855                           
   856  0022                     __Umul8_16@word_mpld:	
   857                           ; 2 bytes @ 0x2
   858                           
   859                           
   860                           ; 2 bytes @ 0x2
   861  0022                     	ds	1
   862  0023                     Lcd_Set_Cursor@temp:
   863  0023                     Lcd_Write_String@i:	
   864                           ; 1 bytes @ 0x3
   865                           
   866                           
   867                           ; 2 bytes @ 0x3
   868  0023                     	ds	1
   869  0024                     ??_division:
   870  0024                     __Umul8_16@multiplier:	
   871                           ; 1 bytes @ 0x4
   872                           
   873                           
   874                           ; 1 bytes @ 0x4
   875  0024                     	ds	1
   876  0025                     ?___wmul:
   877  0025                     ___lldiv@counter:	
   878                           ; 2 bytes @ 0x5
   879                           
   880  0025                     ___wmul@multiplier:	
   881                           ; 1 bytes @ 0x5
   882                           
   883                           
   884                           ; 2 bytes @ 0x5
   885  0025                     	ds	1
   886  0026                     ?_I2C_Master_Init:
   887  0026                     I2C_Master_Init@c:	
   888                           ; 1 bytes @ 0x6
   889                           
   890                           
   891                           ; 4 bytes @ 0x6
   892  0026                     	ds	1
   893  0027                     ___wmul@multiplicand:
   894                           
   895                           ; 2 bytes @ 0x7
   896  0027                     	ds	1
   897  0028                     ___fladd@signs:
   898                           
   899                           ; 1 bytes @ 0x8
   900  0028                     	ds	1
   901  0029                     ?___xxtofl:
   902  0029                     ___fladd@aexp:	
   903                           ; 4 bytes @ 0x9
   904                           
   905  0029                     ___xxtofl@val:	
   906                           ; 1 bytes @ 0x9
   907                           
   908                           
   909                           ; 4 bytes @ 0x9
   910  0029                     	ds	1
   911  002A                     ??_I2C_Master_Init:
   912  002A                     ___fladd@bexp:	
   913                           ; 1 bytes @ 0xA
   914                           
   915                           
   916                           ; 1 bytes @ 0xA
   917  002A                     	ds	1
   918  002B                     ___fladd@grs:
   919                           
   920                           ; 1 bytes @ 0xB
   921  002B                     	ds	2
   922  002D                     ??___xxtofl:
   923                           
   924                           ; 1 bytes @ 0xD
   925  002D                     	ds	4
   926  0031                     ___xxtofl@sign:
   927                           
   928                           ; 1 bytes @ 0x11
   929  0031                     	ds	1
   930  0032                     ___xxtofl@exp:
   931                           
   932                           ; 1 bytes @ 0x12
   933  0032                     	ds	1
   934  0033                     ___xxtofl@arg:
   935                           
   936                           ; 4 bytes @ 0x13
   937  0033                     	ds	4
   938  0037                     ?___flsub:
   939  0037                     ?___fldiv:	
   940                           ; 4 bytes @ 0x17
   941                           
   942  0037                     ___flsub@a:	
   943                           ; 4 bytes @ 0x17
   944                           
   945  0037                     ___fldiv@a:	
   946                           ; 4 bytes @ 0x17
   947                           
   948                           
   949                           ; 4 bytes @ 0x17
   950  0037                     	ds	4
   951  003B                     ___flsub@b:
   952  003B                     ___fldiv@b:	
   953                           ; 4 bytes @ 0x1B
   954                           
   955                           
   956                           ; 4 bytes @ 0x1B
   957  003B                     	ds	4
   958  003F                     ??___fldiv:
   959                           
   960                           ; 1 bytes @ 0x1F
   961  003F                     	ds	5
   962  0044                     ___fldiv@rem:
   963                           
   964                           ; 4 bytes @ 0x24
   965  0044                     	ds	4
   966  0048                     ___fldiv@sign:
   967                           
   968                           ; 1 bytes @ 0x28
   969  0048                     	ds	1
   970  0049                     ___fldiv@new_exp:
   971                           
   972                           ; 2 bytes @ 0x29
   973  0049                     	ds	2
   974  004B                     ___fldiv@grs:
   975                           
   976                           ; 4 bytes @ 0x2B
   977  004B                     	ds	4
   978  004F                     ___fldiv@bexp:
   979                           
   980                           ; 1 bytes @ 0x2F
   981  004F                     	ds	1
   982  0050                     ___fldiv@aexp:
   983                           
   984                           ; 1 bytes @ 0x30
   985  0050                     	ds	1
   986  0051                     ?___flmul:
   987  0051                     ___flmul@b:	
   988                           ; 4 bytes @ 0x31
   989                           
   990                           
   991                           ; 4 bytes @ 0x31
   992  0051                     	ds	4
   993  0055                     ___flmul@a:
   994                           
   995                           ; 4 bytes @ 0x35
   996  0055                     	ds	4
   997  0059                     ??___flmul:
   998                           
   999                           ; 1 bytes @ 0x39
  1000  0059                     	ds	5
  1001  005E                     ___flmul@sign:
  1002                           
  1003                           ; 1 bytes @ 0x3E
  1004  005E                     	ds	1
  1005  005F                     ___flmul@aexp:
  1006                           
  1007                           ; 1 bytes @ 0x3F
  1008  005F                     	ds	1
  1009  0060                     ___flmul@grs:
  1010                           
  1011                           ; 4 bytes @ 0x40
  1012  0060                     	ds	4
  1013  0064                     ___flmul@bexp:
  1014                           
  1015                           ; 1 bytes @ 0x44
  1016  0064                     	ds	1
  1017  0065                     ___flmul@prod:
  1018                           
  1019                           ; 4 bytes @ 0x45
  1020  0065                     	ds	4
  1021  0069                     ___flmul@temp:
  1022                           
  1023                           ; 2 bytes @ 0x49
  1024  0069                     	ds	2
  1025  006B                     ??_ADC_convert:
  1026                           
  1027                           ; 1 bytes @ 0x4B
  1028  006B                     	ds	2
  1029                           
  1030                           	psect	maintext
  1031  0CE8                     __pmaintext:	
  1032 ;;
  1033 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1034 ;;
  1035 ;; *************** function _main *****************
  1036 ;; Defined at:
  1037 ;;		line 92 in file "Lab04.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : B00/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       4       0       0
  1053 ;;      Temps:          0       0       4       0       0
  1054 ;;      Totals:         0       0       8       0       0
  1055 ;;Total ram usage:        8 bytes
  1056 ;; Hardware stack levels required when called:    4
  1057 ;; This function calls:
  1058 ;;		_ADC_convert
  1059 ;;		_I2C_Master_Read
  1060 ;;		_I2C_Master_Start
  1061 ;;		_I2C_Master_Stop
  1062 ;;		_I2C_Master_Write
  1063 ;;		_Lcd_Clear
  1064 ;;		_Lcd_Init
  1065 ;;		_Lcd_Set_Cursor
  1066 ;;		_Lcd_Write_String
  1067 ;;		___fldiv
  1068 ;;		___flmul
  1069 ;;		___fltol
  1070 ;;		___xxtofl
  1071 ;;		_division
  1072 ;;		_setup
  1073 ;; This function is called by:
  1074 ;;		Startup code after reset
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _main
  1080  0CE8                     _main:
  1081  0CE8                     l3393:	
  1082                           ;incstack = 0
  1083                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1084                           
  1085                           
  1086                           ;Lab04.c: 94:     setup();
  1087  0CE8  160A  118A  234A  120A  158A  	fcall	_setup
  1088                           
  1089                           ;Lab04.c: 95:     Lcd_Init();
  1090  0CED  160A  118A  250C  120A  158A  	fcall	_Lcd_Init
  1091                           
  1092                           ;Lab04.c: 96:     Lcd_Clear();
  1093  0CF2  160A  118A  228D  120A  158A  	fcall	_Lcd_Clear
  1094  0CF7                     l149:	
  1095                           ;Lab04.c: 98:     while(1)
  1096                           
  1097                           
  1098                           ;Lab04.c: 99:     {;Lab04.c: 103:         I2C_Master_Start();
  1099  0CF7  160A  118A  2264  120A  158A  	fcall	_I2C_Master_Start
  1100                           
  1101                           ;Lab04.c: 104:         I2C_Master_Write(0x51);
  1102  0CFC  3051               	movlw	81
  1103  0CFD  00F2               	movwf	I2C_Master_Write@d
  1104  0CFE  3000               	movlw	0
  1105  0CFF  00F3               	movwf	I2C_Master_Write@d+1
  1106  0D00  160A  118A  2276  120A  158A  	fcall	_I2C_Master_Write
  1107                           
  1108                           ;Lab04.c: 105:         PORTB = I2C_Master_Read(0);
  1109  0D05  3000               	movlw	0
  1110  0D06  00F2               	movwf	I2C_Master_Read@a
  1111  0D07  00F3               	movwf	I2C_Master_Read@a+1
  1112  0D08  160A  118A  2376  120A  158A  	fcall	_I2C_Master_Read
  1113  0D0D  0872               	movf	?_I2C_Master_Read,w
  1114  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0D10  0086               	movwf	6	;volatile
  1117                           
  1118                           ;Lab04.c: 106:         I2C_Master_Stop();
  1119  0D11  160A  118A  226D  120A  158A  	fcall	_I2C_Master_Stop
  1120  0D16                     l3395:
  1121                           
  1122                           ;Lab04.c: 107:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1123  0D16  3002               	movlw	2
  1124  0D17  1683               	bsf	3,5	;RP0=1, select bank1
  1125  0D18  1303               	bcf	3,6	;RP1=0, select bank1
  1126  0D19  00EA               	movwf	(??_main^(0+128)+2)
  1127  0D1A  3004               	movlw	4
  1128  0D1B  00E9               	movwf	(??_main^(0+128)+1)
  1129  0D1C  30B9               	movlw	185
  1130  0D1D  00E8               	movwf	??_main^(0+128)
  1131  0D1E                     u4877:
  1132  0D1E  0BE8               	decfsz	??_main^(0+128),f
  1133  0D1F  2D1E               	goto	u4877
  1134  0D20  0BE9               	decfsz	(??_main^(0+128)+1),f
  1135  0D21  2D1E               	goto	u4877
  1136  0D22  0BEA               	decfsz	(??_main^(0+128)+2),f
  1137  0D23  2D1E               	goto	u4877
  1138  0D24  2D25               	nop2
  1139  0D25                     l3397:
  1140                           
  1141                           ;Lab04.c: 110:         I2C_Master_Start();
  1142  0D25  160A  118A  2264  120A  158A  	fcall	_I2C_Master_Start
  1143  0D2A                     l3399:
  1144                           
  1145                           ;Lab04.c: 111:         I2C_Master_Write(0x80);
  1146  0D2A  3080               	movlw	128
  1147  0D2B  00F2               	movwf	I2C_Master_Write@d
  1148  0D2C  3000               	movlw	0
  1149  0D2D  00F3               	movwf	I2C_Master_Write@d+1
  1150  0D2E  160A  118A  2276  120A  158A  	fcall	_I2C_Master_Write
  1151  0D33                     l3401:
  1152                           
  1153                           ;Lab04.c: 112:         I2C_Master_Write(0xF3);
  1154  0D33  30F3               	movlw	243
  1155  0D34  00F2               	movwf	I2C_Master_Write@d
  1156  0D35  3000               	movlw	0
  1157  0D36  00F3               	movwf	I2C_Master_Write@d+1
  1158  0D37  160A  118A  2276  120A  158A  	fcall	_I2C_Master_Write
  1159  0D3C                     l3403:
  1160                           
  1161                           ;Lab04.c: 113:         I2C_Master_Stop();
  1162  0D3C  160A  118A  226D  120A  158A  	fcall	_I2C_Master_Stop
  1163  0D41                     l3405:
  1164                           
  1165                           ;Lab04.c: 114:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1166  0D41  3002               	movlw	2
  1167  0D42  1683               	bsf	3,5	;RP0=1, select bank1
  1168  0D43  1303               	bcf	3,6	;RP1=0, select bank1
  1169  0D44  00EA               	movwf	(??_main^(0+128)+2)
  1170  0D45  3004               	movlw	4
  1171  0D46  00E9               	movwf	(??_main^(0+128)+1)
  1172  0D47  30B9               	movlw	185
  1173  0D48  00E8               	movwf	??_main^(0+128)
  1174  0D49                     u4887:
  1175  0D49  0BE8               	decfsz	??_main^(0+128),f
  1176  0D4A  2D49               	goto	u4887
  1177  0D4B  0BE9               	decfsz	(??_main^(0+128)+1),f
  1178  0D4C  2D49               	goto	u4887
  1179  0D4D  0BEA               	decfsz	(??_main^(0+128)+2),f
  1180  0D4E  2D49               	goto	u4887
  1181  0D4F  2D50               	nop2
  1182                           
  1183                           ;Lab04.c: 116:         I2C_Master_Start();
  1184  0D50  160A  118A  2264  120A  158A  	fcall	_I2C_Master_Start
  1185                           
  1186                           ;Lab04.c: 117:         I2C_Master_Write(0x81);
  1187  0D55  3081               	movlw	129
  1188  0D56  00F2               	movwf	I2C_Master_Write@d
  1189  0D57  3000               	movlw	0
  1190  0D58  00F3               	movwf	I2C_Master_Write@d+1
  1191  0D59  160A  118A  2276  120A  158A  	fcall	_I2C_Master_Write
  1192                           
  1193                           ;Lab04.c: 118:         PORTD = I2C_Master_Read(0);
  1194  0D5E  3000               	movlw	0
  1195  0D5F  00F2               	movwf	I2C_Master_Read@a
  1196  0D60  00F3               	movwf	I2C_Master_Read@a+1
  1197  0D61  160A  118A  2376  120A  158A  	fcall	_I2C_Master_Read
  1198  0D66  0872               	movf	?_I2C_Master_Read,w
  1199  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0D69  0088               	movwf	8	;volatile
  1202                           
  1203                           ;Lab04.c: 119:         I2C_Master_Stop();
  1204  0D6A  160A  118A  226D  120A  158A  	fcall	_I2C_Master_Stop
  1205  0D6F                     l3407:
  1206                           
  1207                           ;Lab04.c: 120:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1208  0D6F  3002               	movlw	2
  1209  0D70  1683               	bsf	3,5	;RP0=1, select bank1
  1210  0D71  1303               	bcf	3,6	;RP1=0, select bank1
  1211  0D72  00EA               	movwf	(??_main^(0+128)+2)
  1212  0D73  3004               	movlw	4
  1213  0D74  00E9               	movwf	(??_main^(0+128)+1)
  1214  0D75  30B9               	movlw	185
  1215  0D76  00E8               	movwf	??_main^(0+128)
  1216  0D77                     u4897:
  1217  0D77  0BE8               	decfsz	??_main^(0+128),f
  1218  0D78  2D77               	goto	u4897
  1219  0D79  0BE9               	decfsz	(??_main^(0+128)+1),f
  1220  0D7A  2D77               	goto	u4897
  1221  0D7B  0BEA               	decfsz	(??_main^(0+128)+2),f
  1222  0D7C  2D77               	goto	u4897
  1223  0D7D  2D7E               	nop2
  1224  0D7E                     l3409:
  1225                           
  1226                           ;Lab04.c: 122:         I2C_Master_Start();
  1227  0D7E  160A  118A  2264  120A  158A  	fcall	_I2C_Master_Start
  1228  0D83                     l3411:
  1229                           
  1230                           ;Lab04.c: 123:         I2C_Master_Write(0x91);
  1231  0D83  3091               	movlw	145
  1232  0D84  00F2               	movwf	I2C_Master_Write@d
  1233  0D85  3000               	movlw	0
  1234  0D86  00F3               	movwf	I2C_Master_Write@d+1
  1235  0D87  160A  118A  2276  120A  158A  	fcall	_I2C_Master_Write
  1236  0D8C                     l3413:
  1237                           
  1238                           ;Lab04.c: 124:         PORTA = I2C_Master_Read(0);
  1239  0D8C  3000               	movlw	0
  1240  0D8D  00F2               	movwf	I2C_Master_Read@a
  1241  0D8E  00F3               	movwf	I2C_Master_Read@a+1
  1242  0D8F  160A  118A  2376  120A  158A  	fcall	_I2C_Master_Read
  1243  0D94  0872               	movf	?_I2C_Master_Read,w
  1244  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0D97  0085               	movwf	5	;volatile
  1247  0D98                     l3415:
  1248                           
  1249                           ;Lab04.c: 125:         I2C_Master_Stop();
  1250  0D98  160A  118A  226D  120A  158A  	fcall	_I2C_Master_Stop
  1251  0D9D                     l3417:
  1252                           
  1253                           ;Lab04.c: 126:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1254  0D9D  3002               	movlw	2
  1255  0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0DA0  00EA               	movwf	(??_main^(0+128)+2)
  1258  0DA1  3004               	movlw	4
  1259  0DA2  00E9               	movwf	(??_main^(0+128)+1)
  1260  0DA3  30B9               	movlw	185
  1261  0DA4  00E8               	movwf	??_main^(0+128)
  1262  0DA5                     u4907:
  1263  0DA5  0BE8               	decfsz	??_main^(0+128),f
  1264  0DA6  2DA5               	goto	u4907
  1265  0DA7  0BE9               	decfsz	(??_main^(0+128)+1),f
  1266  0DA8  2DA5               	goto	u4907
  1267  0DA9  0BEA               	decfsz	(??_main^(0+128)+2),f
  1268  0DAA  2DA5               	goto	u4907
  1269  0DAB  2DAC               	nop2
  1270                           
  1271                           ;Lab04.c: 128:         count = PORTA;
  1272  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0DAE  0805               	movf	5,w	;volatile
  1275  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0DB0  1303               	bcf	3,6	;RP1=0, select bank1
  1277  0DB1  00E8               	movwf	??_main^(0+128)
  1278  0DB2  01E9               	clrf	(??_main^(0+128)+1)
  1279  0DB3  01EA               	clrf	(??_main^(0+128)+2)
  1280  0DB4  01EB               	clrf	(??_main^(0+128)+3)
  1281  0DB5  086B               	movf	(??_main+3)^(0+128),w
  1282  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0DB8  00AC               	movwf	___xxtofl@val+3
  1285  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0DBB  086A               	movf	(??_main+2)^(0+128),w
  1288  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0DBE  00AB               	movwf	___xxtofl@val+2
  1291  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  1293  0DC1  0869               	movf	(??_main+1)^(0+128),w
  1294  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0DC4  00AA               	movwf	___xxtofl@val+1
  1297  0DC5  1683               	bsf	3,5	;RP0=1, select bank1
  1298  0DC6  1303               	bcf	3,6	;RP1=0, select bank1
  1299  0DC7  0868               	movf	??_main^(0+128),w
  1300  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0DCA  00A9               	movwf	___xxtofl@val
  1303  0DCB  3000               	movlw	0
  1304  0DCC  160A  118A  2744  120A  158A  	fcall	___xxtofl
  1305  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0DD3  082C               	movf	?___xxtofl+3,w
  1308  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  1309  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  1310  0DD6  00AB               	movwf	(_count+3)^(0+128)
  1311  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0DD9  082B               	movf	?___xxtofl+2,w
  1314  0DDA  1683               	bsf	3,5	;RP0=1, select bank1
  1315  0DDB  1303               	bcf	3,6	;RP1=0, select bank1
  1316  0DDC  00AA               	movwf	(_count+2)^(0+128)
  1317  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0DDF  082A               	movf	?___xxtofl+1,w
  1320  0DE0  1683               	bsf	3,5	;RP0=1, select bank1
  1321  0DE1  1303               	bcf	3,6	;RP1=0, select bank1
  1322  0DE2  00A9               	movwf	(_count+1)^(0+128)
  1323  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0DE5  0829               	movf	?___xxtofl,w
  1326  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  1327  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  1328  0DE8  00A8               	movwf	_count^(0+128)
  1329  0DE9                     l3419:
  1330                           
  1331                           ;Lab04.c: 129:         pot = PORTB;
  1332  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0DEB  0806               	movf	6,w	;volatile
  1335  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  1336  0DED  1303               	bcf	3,6	;RP1=0, select bank1
  1337  0DEE  00E8               	movwf	??_main^(0+128)
  1338  0DEF  0868               	movf	??_main^(0+128),w
  1339  0DF0  00B3               	movwf	_pot^(0+128)	;volatile
  1340  0DF1                     l3421:
  1341                           
  1342                           ;Lab04.c: 130:         temperature = PORTD;
  1343  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0DF3  0808               	movf	8,w	;volatile
  1346  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  1347  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0DF6  00E8               	movwf	??_main^(0+128)
  1349  0DF7  0868               	movf	??_main^(0+128),w
  1350  0DF8  00B4               	movwf	_temperature^(0+128)	;volatile
  1351                           
  1352                           ;Lab04.c: 133:     Lcd_Clear();
  1353  0DF9  160A  118A  228D  120A  158A  	fcall	_Lcd_Clear
  1354                           
  1355                           ;Lab04.c: 134:     Lcd_Set_Cursor(1,2);
  1356  0DFE  3002               	movlw	2
  1357  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  1358  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  1359  0E01  00E8               	movwf	??_main^(0+128)
  1360  0E02  0868               	movf	??_main^(0+128),w
  1361  0E03  00F6               	movwf	Lcd_Set_Cursor@b
  1362  0E04  3001               	movlw	1
  1363  0E05  160A  118A  245B  120A  158A  	fcall	_Lcd_Set_Cursor
  1364  0E0A                     l3423:
  1365                           
  1366                           ;Lab04.c: 135:     Lcd_Write_String("S1");
  1367  0E0A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1368  0E0B  00F7               	movwf	Lcd_Write_String@a
  1369  0E0C  3080               	movlw	128
  1370  0E0D  00F8               	movwf	Lcd_Write_String@a+1
  1371  0E0E  160A  118A  2415  120A  158A  	fcall	_Lcd_Write_String
  1372  0E13                     l3425:
  1373                           
  1374                           ;Lab04.c: 136:     Lcd_Set_Cursor(1,8);
  1375  0E13  3008               	movlw	8
  1376  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  1377  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  1378  0E16  00E8               	movwf	??_main^(0+128)
  1379  0E17  0868               	movf	??_main^(0+128),w
  1380  0E18  00F6               	movwf	Lcd_Set_Cursor@b
  1381  0E19  3001               	movlw	1
  1382  0E1A  160A  118A  245B  120A  158A  	fcall	_Lcd_Set_Cursor
  1383                           
  1384                           ;Lab04.c: 137:     Lcd_Write_String("S2");
  1385  0E1F  3004               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1386  0E20  00F7               	movwf	Lcd_Write_String@a
  1387  0E21  3080               	movlw	128
  1388  0E22  00F8               	movwf	Lcd_Write_String@a+1
  1389  0E23  160A  118A  2415  120A  158A  	fcall	_Lcd_Write_String
  1390  0E28                     l3427:
  1391                           
  1392                           ;Lab04.c: 138:     Lcd_Set_Cursor(1,14);
  1393  0E28  300E               	movlw	14
  1394  0E29  1683               	bsf	3,5	;RP0=1, select bank1
  1395  0E2A  1303               	bcf	3,6	;RP1=0, select bank1
  1396  0E2B  00E8               	movwf	??_main^(0+128)
  1397  0E2C  0868               	movf	??_main^(0+128),w
  1398  0E2D  00F6               	movwf	Lcd_Set_Cursor@b
  1399  0E2E  3001               	movlw	1
  1400  0E2F  160A  118A  245B  120A  158A  	fcall	_Lcd_Set_Cursor
  1401  0E34                     l3429:
  1402                           
  1403                           ;Lab04.c: 139:     Lcd_Write_String("S3");
  1404  0E34  3007               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1405  0E35  00F7               	movwf	Lcd_Write_String@a
  1406  0E36  3080               	movlw	128
  1407  0E37  00F8               	movwf	Lcd_Write_String@a+1
  1408  0E38  160A  118A  2415  120A  158A  	fcall	_Lcd_Write_String
  1409  0E3D                     l3431:
  1410                           
  1411                           ;Lab04.c: 140:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1412  0E3D  3006               	movlw	6
  1413  0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  1415  0E40  00EA               	movwf	(??_main^(0+128)+2)
  1416  0E41  3013               	movlw	19
  1417  0E42  00E9               	movwf	(??_main^(0+128)+1)
  1418  0E43  30AD               	movlw	173
  1419  0E44  00E8               	movwf	??_main^(0+128)
  1420  0E45                     u4917:
  1421  0E45  0BE8               	decfsz	??_main^(0+128),f
  1422  0E46  2E45               	goto	u4917
  1423  0E47  0BE9               	decfsz	(??_main^(0+128)+1),f
  1424  0E48  2E45               	goto	u4917
  1425  0E49  0BEA               	decfsz	(??_main^(0+128)+2),f
  1426  0E4A  2E45               	goto	u4917
  1427  0E4B                     l3433:
  1428                           
  1429                           ;Lab04.c: 141:     Lcd_Set_Cursor(2,1);
  1430  0E4B  01F6               	clrf	Lcd_Set_Cursor@b
  1431  0E4C  0AF6               	incf	Lcd_Set_Cursor@b,f
  1432  0E4D  3002               	movlw	2
  1433  0E4E  160A  118A  245B  120A  158A  	fcall	_Lcd_Set_Cursor
  1434  0E53                     l3435:
  1435                           
  1436                           ;Lab04.c: 142:     Lcd_Write_String(adc0);
  1437  0E53  30C9               	movlw	(low (_adc0| 0))& (0+255)
  1438  0E54  00F7               	movwf	Lcd_Write_String@a
  1439  0E55  3000               	movlw	0
  1440  0E56  00F8               	movwf	Lcd_Write_String@a+1
  1441  0E57  160A  118A  2415  120A  158A  	fcall	_Lcd_Write_String
  1442  0E5C                     l3437:
  1443                           
  1444                           ;Lab04.c: 143:     Lcd_Set_Cursor(2,4);
  1445  0E5C  3004               	movlw	4
  1446  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0E5F  00E8               	movwf	??_main^(0+128)
  1449  0E60  0868               	movf	??_main^(0+128),w
  1450  0E61  00F6               	movwf	Lcd_Set_Cursor@b
  1451  0E62  3002               	movlw	2
  1452  0E63  160A  118A  245B  120A  158A  	fcall	_Lcd_Set_Cursor
  1453  0E68                     l3439:
  1454                           
  1455                           ;Lab04.c: 144:     Lcd_Write_String("V");
  1456  0E68  300C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1457  0E69  00F7               	movwf	Lcd_Write_String@a
  1458  0E6A  3080               	movlw	128
  1459  0E6B  00F8               	movwf	Lcd_Write_String@a+1
  1460  0E6C  160A  118A  2415  120A  158A  	fcall	_Lcd_Write_String
  1461  0E71                     l3441:
  1462                           
  1463                           ;Lab04.c: 145:     Lcd_Set_Cursor(2,7);
  1464  0E71  3007               	movlw	7
  1465  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  1466  0E73  1303               	bcf	3,6	;RP1=0, select bank1
  1467  0E74  00E8               	movwf	??_main^(0+128)
  1468  0E75  0868               	movf	??_main^(0+128),w
  1469  0E76  00F6               	movwf	Lcd_Set_Cursor@b
  1470  0E77  3002               	movlw	2
  1471  0E78  160A  118A  245B  120A  158A  	fcall	_Lcd_Set_Cursor
  1472  0E7D                     l3443:
  1473                           
  1474                           ;Lab04.c: 146:     Lcd_Write_String(adc1);
  1475  0E7D  30BF               	movlw	(low (_adc1| 0))& (0+255)
  1476  0E7E  00F7               	movwf	Lcd_Write_String@a
  1477  0E7F  3000               	movlw	0
  1478  0E80  00F8               	movwf	Lcd_Write_String@a+1
  1479  0E81  160A  118A  2415  120A  158A  	fcall	_Lcd_Write_String
  1480  0E86                     l3445:
  1481                           
  1482                           ;Lab04.c: 147:     Lcd_Set_Cursor(2,11);
  1483  0E86  300B               	movlw	11
  1484  0E87  1683               	bsf	3,5	;RP0=1, select bank1
  1485  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  1486  0E89  00E8               	movwf	??_main^(0+128)
  1487  0E8A  0868               	movf	??_main^(0+128),w
  1488  0E8B  00F6               	movwf	Lcd_Set_Cursor@b
  1489  0E8C  3002               	movlw	2
  1490  0E8D  160A  118A  245B  120A  158A  	fcall	_Lcd_Set_Cursor
  1491  0E92                     l3447:
  1492                           
  1493                           ;Lab04.c: 148:     Lcd_Write_String("'");
  1494  0E92  300A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1495  0E93  00F7               	movwf	Lcd_Write_String@a
  1496  0E94  3080               	movlw	128
  1497  0E95  00F8               	movwf	Lcd_Write_String@a+1
  1498  0E96  160A  118A  2415  120A  158A  	fcall	_Lcd_Write_String
  1499  0E9B                     l3449:
  1500                           
  1501                           ;Lab04.c: 149:     Lcd_Set_Cursor(2,14);
  1502  0E9B  300E               	movlw	14
  1503  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0E9D  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0E9E  00E8               	movwf	??_main^(0+128)
  1506  0E9F  0868               	movf	??_main^(0+128),w
  1507  0EA0  00F6               	movwf	Lcd_Set_Cursor@b
  1508  0EA1  3002               	movlw	2
  1509  0EA2  160A  118A  245B  120A  158A  	fcall	_Lcd_Set_Cursor
  1510  0EA7                     l3451:
  1511                           
  1512                           ;Lab04.c: 150:     Lcd_Write_String(cont);
  1513  0EA7  30B5               	movlw	(low (_cont| 0))& (0+255)
  1514  0EA8  00F7               	movwf	Lcd_Write_String@a
  1515  0EA9  3000               	movlw	0
  1516  0EAA  00F8               	movwf	Lcd_Write_String@a+1
  1517  0EAB  160A  118A  2415  120A  158A  	fcall	_Lcd_Write_String
  1518  0EB0                     l3453:
  1519                           
  1520                           ;Lab04.c: 151:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1521  0EB0  300B               	movlw	11
  1522  0EB1  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0EB2  1303               	bcf	3,6	;RP1=0, select bank1
  1524  0EB3  00EA               	movwf	(??_main^(0+128)+2)
  1525  0EB4  3026               	movlw	38
  1526  0EB5  00E9               	movwf	(??_main^(0+128)+1)
  1527  0EB6  305D               	movlw	93
  1528  0EB7  00E8               	movwf	??_main^(0+128)
  1529  0EB8                     u4927:
  1530  0EB8  0BE8               	decfsz	??_main^(0+128),f
  1531  0EB9  2EB8               	goto	u4927
  1532  0EBA  0BE9               	decfsz	(??_main^(0+128)+1),f
  1533  0EBB  2EB8               	goto	u4927
  1534  0EBC  0BEA               	decfsz	(??_main^(0+128)+2),f
  1535  0EBD  2EB8               	goto	u4927
  1536  0EBE                     l3455:
  1537                           
  1538                           ;Lab04.c: 154:     converted = temperature - 77 ;
  1539  0EBE  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0EBF  1303               	bcf	3,6	;RP1=0, select bank1
  1541  0EC0  0834               	movf	_temperature^(0+128),w	;volatile
  1542  0EC1  3EB3               	addlw	179
  1543  0EC2  00E8               	movwf	??_main^(0+128)
  1544  0EC3  0868               	movf	??_main^(0+128),w
  1545  0EC4  00B2               	movwf	_converted^(0+128)
  1546  0EC5                     l3457:
  1547                           
  1548                           ;Lab04.c: 156:     conv0 = 0;
  1549  0EC5  3000               	movlw	0
  1550  0EC6  00A7               	movwf	(_conv0+3)^(0+128)
  1551  0EC7  3000               	movlw	0
  1552  0EC8  00A6               	movwf	(_conv0+2)^(0+128)
  1553  0EC9  3000               	movlw	0
  1554  0ECA  00A5               	movwf	(_conv0+1)^(0+128)
  1555  0ECB  3000               	movlw	0
  1556  0ECC  00A4               	movwf	_conv0^(0+128)
  1557  0ECD                     l3459:
  1558                           
  1559                           ;Lab04.c: 159:     conv0 = (pot / (float) 255)*5;
  1560  0ECD  3040               	movlw	64
  1561  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0ED0  00D4               	movwf	___flmul@b+3
  1564  0ED1  30A0               	movlw	160
  1565  0ED2  00D3               	movwf	___flmul@b+2
  1566  0ED3  3000               	movlw	0
  1567  0ED4  00D2               	movwf	___flmul@b+1
  1568  0ED5  3000               	movlw	0
  1569  0ED6  00D1               	movwf	___flmul@b
  1570  0ED7  3043               	movlw	67
  1571  0ED8  00BA               	movwf	___fldiv@a+3
  1572  0ED9  307F               	movlw	127
  1573  0EDA  00B9               	movwf	___fldiv@a+2
  1574  0EDB  3000               	movlw	0
  1575  0EDC  00B8               	movwf	___fldiv@a+1
  1576  0EDD  3000               	movlw	0
  1577  0EDE  00B7               	movwf	___fldiv@a
  1578  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0EE0  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0EE1  0833               	movf	_pot^(0+128),w	;volatile
  1581  0EE2  00E8               	movwf	??_main^(0+128)
  1582  0EE3  01E9               	clrf	(??_main^(0+128)+1)
  1583  0EE4  01EA               	clrf	(??_main^(0+128)+2)
  1584  0EE5  01EB               	clrf	(??_main^(0+128)+3)
  1585  0EE6  086B               	movf	(??_main+3)^(0+128),w
  1586  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0EE9  00AC               	movwf	___xxtofl@val+3
  1589  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  1590  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  1591  0EEC  086A               	movf	(??_main+2)^(0+128),w
  1592  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0EEF  00AB               	movwf	___xxtofl@val+2
  1595  0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0EF2  0869               	movf	(??_main+1)^(0+128),w
  1598  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0EF5  00AA               	movwf	___xxtofl@val+1
  1601  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0EF7  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0EF8  0868               	movf	??_main^(0+128),w
  1604  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0EFB  00A9               	movwf	___xxtofl@val
  1607  0EFC  3001               	movlw	1
  1608  0EFD  160A  118A  2744  120A  158A  	fcall	___xxtofl
  1609  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0F04  082C               	movf	?___xxtofl+3,w
  1612  0F05  00BE               	movwf	___fldiv@b+3
  1613  0F06  082B               	movf	?___xxtofl+2,w
  1614  0F07  00BD               	movwf	___fldiv@b+2
  1615  0F08  082A               	movf	?___xxtofl+1,w
  1616  0F09  00BC               	movwf	___fldiv@b+1
  1617  0F0A  0829               	movf	?___xxtofl,w
  1618  0F0B  00BB               	movwf	___fldiv@b
  1619  0F0C  120A  158A  2083  120A  158A  	fcall	___fldiv
  1620  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0F13  083A               	movf	?___fldiv+3,w
  1623  0F14  00D8               	movwf	___flmul@a+3
  1624  0F15  0839               	movf	?___fldiv+2,w
  1625  0F16  00D7               	movwf	___flmul@a+2
  1626  0F17  0838               	movf	?___fldiv+1,w
  1627  0F18  00D6               	movwf	___flmul@a+1
  1628  0F19  0837               	movf	?___fldiv,w
  1629  0F1A  00D5               	movwf	___flmul@a
  1630  0F1B  120A  118A  2480  120A  158A  	fcall	___flmul
  1631  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0F22  0854               	movf	?___flmul+3,w
  1634  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0F25  00A7               	movwf	(_conv0+3)^(0+128)
  1637  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0F28  0853               	movf	?___flmul+2,w
  1640  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  1641  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  1642  0F2B  00A6               	movwf	(_conv0+2)^(0+128)
  1643  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0F2E  0852               	movf	?___flmul+1,w
  1646  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  1648  0F31  00A5               	movwf	(_conv0+1)^(0+128)
  1649  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0F34  0851               	movf	?___flmul,w
  1652  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0F36  1303               	bcf	3,6	;RP1=0, select bank1
  1654  0F37  00A4               	movwf	_conv0^(0+128)
  1655  0F38                     l3461:
  1656                           
  1657                           ;Lab04.c: 161:     ADC_convert(adc0, conv0, 2);
  1658  0F38  0827               	movf	(_conv0+3)^(0+128),w
  1659  0F39  00D6               	movwf	(ADC_convert@a+3)^(0+128)
  1660  0F3A  0826               	movf	(_conv0+2)^(0+128),w
  1661  0F3B  00D5               	movwf	(ADC_convert@a+2)^(0+128)
  1662  0F3C  0825               	movf	(_conv0+1)^(0+128),w
  1663  0F3D  00D4               	movwf	(ADC_convert@a+1)^(0+128)
  1664  0F3E  0824               	movf	_conv0^(0+128),w
  1665  0F3F  00D3               	movwf	ADC_convert@a^(0+128)
  1666  0F40  3002               	movlw	2
  1667  0F41  00D7               	movwf	ADC_convert@place^(0+128)
  1668  0F42  3000               	movlw	0
  1669  0F43  00D8               	movwf	(ADC_convert@place^(0+128)+1)
  1670  0F44  30C9               	movlw	(low (_adc0| 0))& (0+255)
  1671  0F45  120A  118A  201E  120A  158A  	fcall	_ADC_convert
  1672  0F4A                     l3463:
  1673                           
  1674                           ;Lab04.c: 164:     ADC_convert(adc1, converted, 2);
  1675  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  1676  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  1677  0F4C  0832               	movf	_converted^(0+128),w
  1678  0F4D  00E8               	movwf	??_main^(0+128)
  1679  0F4E  01E9               	clrf	(??_main^(0+128)+1)
  1680  0F4F  01EA               	clrf	(??_main^(0+128)+2)
  1681  0F50  01EB               	clrf	(??_main^(0+128)+3)
  1682  0F51  086B               	movf	(??_main+3)^(0+128),w
  1683  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0F54  00AC               	movwf	___xxtofl@val+3
  1686  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  1687  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  1688  0F57  086A               	movf	(??_main+2)^(0+128),w
  1689  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0F5A  00AB               	movwf	___xxtofl@val+2
  1692  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  1693  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  1694  0F5D  0869               	movf	(??_main+1)^(0+128),w
  1695  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0F60  00AA               	movwf	___xxtofl@val+1
  1698  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0F63  0868               	movf	??_main^(0+128),w
  1701  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0F66  00A9               	movwf	___xxtofl@val
  1704  0F67  3000               	movlw	0
  1705  0F68  160A  118A  2744  120A  158A  	fcall	___xxtofl
  1706  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0F6F  082C               	movf	?___xxtofl+3,w
  1709  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  1710  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  1711  0F72  00EF               	movwf	(_main$956+3)^(0+128)
  1712  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0F75  082B               	movf	?___xxtofl+2,w
  1715  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0F78  00EE               	movwf	(_main$956+2)^(0+128)
  1718  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0F7B  082A               	movf	?___xxtofl+1,w
  1721  0F7C  1683               	bsf	3,5	;RP0=1, select bank1
  1722  0F7D  1303               	bcf	3,6	;RP1=0, select bank1
  1723  0F7E  00ED               	movwf	(_main$956+1)^(0+128)
  1724  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0F81  0829               	movf	?___xxtofl,w
  1727  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  1729  0F84  00EC               	movwf	_main$956^(0+128)
  1730  0F85                     l3465:
  1731                           
  1732                           ;Lab04.c: 164:     ADC_convert(adc1, converted, 2);
  1733  0F85  086F               	movf	(_main$956+3)^(0+128),w
  1734  0F86  00D6               	movwf	(ADC_convert@a+3)^(0+128)
  1735  0F87  086E               	movf	(_main$956+2)^(0+128),w
  1736  0F88  00D5               	movwf	(ADC_convert@a+2)^(0+128)
  1737  0F89  086D               	movf	(_main$956+1)^(0+128),w
  1738  0F8A  00D4               	movwf	(ADC_convert@a+1)^(0+128)
  1739  0F8B  086C               	movf	_main$956^(0+128),w
  1740  0F8C  00D3               	movwf	ADC_convert@a^(0+128)
  1741  0F8D  3002               	movlw	2
  1742  0F8E  00D7               	movwf	ADC_convert@place^(0+128)
  1743  0F8F  3000               	movlw	0
  1744  0F90  00D8               	movwf	(ADC_convert@place^(0+128)+1)
  1745  0F91  30BF               	movlw	(low (_adc1| 0))& (0+255)
  1746  0F92  120A  118A  201E  120A  158A  	fcall	_ADC_convert
  1747  0F97                     l3467:
  1748                           
  1749                           ;Lab04.c: 166:     converted02 = division(count);
  1750  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  1751  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  1752  0F99  082B               	movf	(_count+3)^(0+128),w
  1753  0F9A  00F5               	movwf	___fltol@f1+3
  1754  0F9B  082A               	movf	(_count+2)^(0+128),w
  1755  0F9C  00F4               	movwf	___fltol@f1+2
  1756  0F9D  0829               	movf	(_count+1)^(0+128),w
  1757  0F9E  00F3               	movwf	___fltol@f1+1
  1758  0F9F  0828               	movf	_count^(0+128),w
  1759  0FA0  00F2               	movwf	___fltol@f1
  1760  0FA1  120A  158A  2007  120A  158A  	fcall	___fltol
  1761  0FA6  0872               	movf	?___fltol,w
  1762  0FA7  160A  118A  2569  120A  158A  	fcall	_division
  1763  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  1764  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  1765  0FAE  00E8               	movwf	??_main^(0+128)
  1766  0FAF  0868               	movf	??_main^(0+128),w
  1767  0FB0  00B1               	movwf	_converted02^(0+128)
  1768  0FB1                     l3469:
  1769                           
  1770                           ;Lab04.c: 167:     ADC_convert(cont, converted02, 2);
  1771  0FB1  0831               	movf	_converted02^(0+128),w
  1772  0FB2  00E8               	movwf	??_main^(0+128)
  1773  0FB3  01E9               	clrf	(??_main^(0+128)+1)
  1774  0FB4  01EA               	clrf	(??_main^(0+128)+2)
  1775  0FB5  01EB               	clrf	(??_main^(0+128)+3)
  1776  0FB6  086B               	movf	(??_main+3)^(0+128),w
  1777  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0FB9  00AC               	movwf	___xxtofl@val+3
  1780  0FBA  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0FBB  1303               	bcf	3,6	;RP1=0, select bank1
  1782  0FBC  086A               	movf	(??_main+2)^(0+128),w
  1783  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0FBF  00AB               	movwf	___xxtofl@val+2
  1786  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0FC1  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0FC2  0869               	movf	(??_main+1)^(0+128),w
  1789  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0FC5  00AA               	movwf	___xxtofl@val+1
  1792  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  1794  0FC8  0868               	movf	??_main^(0+128),w
  1795  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0FCB  00A9               	movwf	___xxtofl@val
  1798  0FCC  3000               	movlw	0
  1799  0FCD  160A  118A  2744  120A  158A  	fcall	___xxtofl
  1800  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0FD4  082C               	movf	?___xxtofl+3,w
  1803  0FD5  1683               	bsf	3,5	;RP0=1, select bank1
  1804  0FD6  1303               	bcf	3,6	;RP1=0, select bank1
  1805  0FD7  00EF               	movwf	(_main$956+3)^(0+128)
  1806  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0FDA  082B               	movf	?___xxtofl+2,w
  1809  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  1810  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  1811  0FDD  00EE               	movwf	(_main$956+2)^(0+128)
  1812  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0FE0  082A               	movf	?___xxtofl+1,w
  1815  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  1816  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  1817  0FE3  00ED               	movwf	(_main$956+1)^(0+128)
  1818  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0FE6  0829               	movf	?___xxtofl,w
  1821  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0FE9  00EC               	movwf	_main$956^(0+128)
  1824  0FEA                     l3471:
  1825                           
  1826                           ;Lab04.c: 167:     ADC_convert(cont, converted02, 2);
  1827  0FEA  086F               	movf	(_main$956+3)^(0+128),w
  1828  0FEB  00D6               	movwf	(ADC_convert@a+3)^(0+128)
  1829  0FEC  086E               	movf	(_main$956+2)^(0+128),w
  1830  0FED  00D5               	movwf	(ADC_convert@a+2)^(0+128)
  1831  0FEE  086D               	movf	(_main$956+1)^(0+128),w
  1832  0FEF  00D4               	movwf	(ADC_convert@a+1)^(0+128)
  1833  0FF0  086C               	movf	_main$956^(0+128),w
  1834  0FF1  00D3               	movwf	ADC_convert@a^(0+128)
  1835  0FF2  3002               	movlw	2
  1836  0FF3  00D7               	movwf	ADC_convert@place^(0+128)
  1837  0FF4  3000               	movlw	0
  1838  0FF5  00D8               	movwf	(ADC_convert@place^(0+128)+1)
  1839  0FF6  30B5               	movlw	(low (_cont| 0))& (0+255)
  1840  0FF7  120A  118A  201E  120A  158A  	fcall	_ADC_convert
  1841  0FFC  2CF7               	goto	l149
  1842  0FFD  120A  118A  280C   	ljmp	start
  1843  1000                     __end_of_main:
  1844                           
  1845                           	psect	text1
  1846  134A                     __ptext1:	
  1847 ;; *************** function _setup *****************
  1848 ;; Defined at:
  1849 ;;		line 177 in file "Lab04.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    3
  1870 ;; This function calls:
  1871 ;;		_I2C_Master_Init
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _setup
  1879  134A                     _setup:
  1880  134A                     l3257:	
  1881                           ;incstack = 0
  1882                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1883                           
  1884                           
  1885                           ;Lab04.c: 179:     ANSEL = 0;
  1886  134A  1683               	bsf	3,5	;RP0=1, select bank3
  1887  134B  1703               	bsf	3,6	;RP1=1, select bank3
  1888  134C  0188               	clrf	8	;volatile
  1889                           
  1890                           ;Lab04.c: 180:     ANSELH = 0;
  1891  134D  0189               	clrf	9	;volatile
  1892  134E                     l3259:
  1893                           
  1894                           ;Lab04.c: 182:     TRISAbits.TRISA0 = 0;
  1895  134E  1683               	bsf	3,5	;RP0=1, select bank1
  1896  134F  1303               	bcf	3,6	;RP1=0, select bank1
  1897  1350  1005               	bcf	5,0	;volatile
  1898  1351                     l3261:
  1899                           
  1900                           ;Lab04.c: 183:     TRISAbits.TRISA1 = 0;
  1901  1351  1085               	bcf	5,1	;volatile
  1902  1352                     l3263:
  1903                           
  1904                           ;Lab04.c: 184:     TRISAbits.TRISA2 = 0;
  1905  1352  1105               	bcf	5,2	;volatile
  1906  1353                     l3265:
  1907                           
  1908                           ;Lab04.c: 185:     TRISAbits.TRISA3 = 0;
  1909  1353  1185               	bcf	5,3	;volatile
  1910                           
  1911                           ;Lab04.c: 187:     TRISB = 0;
  1912  1354  0186               	clrf	6	;volatile
  1913                           
  1914                           ;Lab04.c: 188:     TRISD = 0;
  1915  1355  0188               	clrf	8	;volatile
  1916                           
  1917                           ;Lab04.c: 189:     TRISC = 0;
  1918  1356  0187               	clrf	7	;volatile
  1919  1357                     l3267:
  1920                           
  1921                           ;Lab04.c: 190:     TRISEbits.TRISE0 = 0;
  1922  1357  1009               	bcf	9,0	;volatile
  1923  1358                     l3269:
  1924                           
  1925                           ;Lab04.c: 191:     TRISEbits.TRISE1 = 0;
  1926  1358  1089               	bcf	9,1	;volatile
  1927                           
  1928                           ;Lab04.c: 196:     PORTA = 0x00;
  1929  1359  1283               	bcf	3,5	;RP0=0, select bank0
  1930  135A  1303               	bcf	3,6	;RP1=0, select bank0
  1931  135B  0185               	clrf	5	;volatile
  1932                           
  1933                           ;Lab04.c: 197:     PORTB = 0x00;
  1934  135C  0186               	clrf	6	;volatile
  1935                           
  1936                           ;Lab04.c: 198:     PORTC = 0x00;
  1937  135D  0187               	clrf	7	;volatile
  1938                           
  1939                           ;Lab04.c: 199:     PORTD = 0x00;
  1940  135E  0188               	clrf	8	;volatile
  1941                           
  1942                           ;Lab04.c: 200:     PORTE = 0x00;
  1943  135F  0189               	clrf	9	;volatile
  1944  1360                     l3271:
  1945                           
  1946                           ;Lab04.c: 203:     OSCCONbits.IRCF0 = 0;
  1947  1360  1683               	bsf	3,5	;RP0=1, select bank1
  1948  1361  1303               	bcf	3,6	;RP1=0, select bank1
  1949  1362  120F               	bcf	15,4	;volatile
  1950  1363                     l3273:
  1951                           
  1952                           ;Lab04.c: 204:     OSCCONbits.IRCF1 = 1;
  1953  1363  168F               	bsf	15,5	;volatile
  1954  1364                     l3275:
  1955                           
  1956                           ;Lab04.c: 205:     OSCCONbits.IRCF2 = 1;
  1957  1364  170F               	bsf	15,6	;volatile
  1958  1365                     l3277:
  1959                           
  1960                           ;Lab04.c: 206:     OSCCONbits.SCS = 1;
  1961  1365  140F               	bsf	15,0	;volatile
  1962  1366                     l3279:
  1963                           
  1964                           ;Lab04.c: 210:     I2C_Master_Init(100000);
  1965  1366  3000               	movlw	0
  1966  1367  1283               	bcf	3,5	;RP0=0, select bank0
  1967  1368  1303               	bcf	3,6	;RP1=0, select bank0
  1968  1369  00A9               	movwf	I2C_Master_Init@c+3
  1969  136A  3001               	movlw	1
  1970  136B  00A8               	movwf	I2C_Master_Init@c+2
  1971  136C  3086               	movlw	134
  1972  136D  00A7               	movwf	I2C_Master_Init@c+1
  1973  136E  30A0               	movlw	160
  1974  136F  00A6               	movwf	I2C_Master_Init@c
  1975  1370  160A  118A  23A4  160A  118A  	fcall	_I2C_Master_Init
  1976  1375                     l155:
  1977  1375  0008               	return
  1978  1376                     __end_of_setup:
  1979                           
  1980                           	psect	text2
  1981  13A4                     __ptext2:	
  1982 ;; *************** function _I2C_Master_Init *****************
  1983 ;; Defined at:
  1984 ;;		line 16 in file "I2C.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  c               4    6[BANK0 ] const unsigned long 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       4       0       0       0
  1999 ;;      Locals:         0       0       0       0       0
  2000 ;;      Temps:          0       4       0       0       0
  2001 ;;      Totals:         0       8       0       0       0
  2002 ;;Total ram usage:        8 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    2
  2005 ;; This function calls:
  2006 ;;		___lldiv
  2007 ;; This function is called by:
  2008 ;;		_setup
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _I2C_Master_Init
  2014  13A4                     _I2C_Master_Init:
  2015  13A4                     l3011:	
  2016                           ;incstack = 0
  2017                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2018                           
  2019                           
  2020                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2021  13A4  3028               	movlw	40
  2022  13A5  1283               	bcf	3,5	;RP0=0, select bank0
  2023  13A6  1303               	bcf	3,6	;RP1=0, select bank0
  2024  13A7  0094               	movwf	20	;volatile
  2025  13A8                     l3013:
  2026                           
  2027                           ;I2C.c: 19:     SSPCON2 = 0;
  2028  13A8  1683               	bsf	3,5	;RP0=1, select bank1
  2029  13A9  1303               	bcf	3,6	;RP1=0, select bank1
  2030  13AA  0191               	clrf	17	;volatile
  2031  13AB                     l3015:
  2032                           
  2033                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2034  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  2035  13AC  1303               	bcf	3,6	;RP1=0, select bank0
  2036  13AD  0826               	movf	I2C_Master_Init@c,w
  2037  13AE  00AA               	movwf	??_I2C_Master_Init
  2038  13AF  0827               	movf	I2C_Master_Init@c+1,w
  2039  13B0  00AB               	movwf	??_I2C_Master_Init+1
  2040  13B1  0828               	movf	I2C_Master_Init@c+2,w
  2041  13B2  00AC               	movwf	??_I2C_Master_Init+2
  2042  13B3  0829               	movf	I2C_Master_Init@c+3,w
  2043  13B4  00AD               	movwf	??_I2C_Master_Init+3
  2044  13B5  3002               	movlw	2
  2045  13B6                     u4135:
  2046  13B6  1003               	clrc
  2047  13B7  0DAA               	rlf	??_I2C_Master_Init,f
  2048  13B8  0DAB               	rlf	??_I2C_Master_Init+1,f
  2049  13B9  0DAC               	rlf	??_I2C_Master_Init+2,f
  2050  13BA  0DAD               	rlf	??_I2C_Master_Init+3,f
  2051  13BB                     u4130:
  2052  13BB  3EFF               	addlw	-1
  2053  13BC  1D03               	skipz
  2054  13BD  2BB6               	goto	u4135
  2055  13BE  082D               	movf	??_I2C_Master_Init+3,w
  2056  13BF  00F5               	movwf	___lldiv@divisor+3
  2057  13C0  082C               	movf	??_I2C_Master_Init+2,w
  2058  13C1  00F4               	movwf	___lldiv@divisor+2
  2059  13C2  082B               	movf	??_I2C_Master_Init+1,w
  2060  13C3  00F3               	movwf	___lldiv@divisor+1
  2061  13C4  082A               	movf	??_I2C_Master_Init,w
  2062  13C5  00F2               	movwf	___lldiv@divisor
  2063  13C6  3000               	movlw	0
  2064  13C7  00F9               	movwf	___lldiv@dividend+3
  2065  13C8  307A               	movlw	122
  2066  13C9  00F8               	movwf	___lldiv@dividend+2
  2067  13CA  3012               	movlw	18
  2068  13CB  00F7               	movwf	___lldiv@dividend+1
  2069  13CC  3000               	movlw	0
  2070  13CD  00F6               	movwf	___lldiv@dividend
  2071  13CE  160A  118A  25CF  160A  118A  	fcall	___lldiv
  2072  13D3  0872               	movf	?___lldiv,w
  2073  13D4  3EFF               	addlw	255
  2074  13D5  1683               	bsf	3,5	;RP0=1, select bank1
  2075  13D6  1303               	bcf	3,6	;RP1=0, select bank1
  2076  13D7  0093               	movwf	19	;volatile
  2077  13D8                     l3017:
  2078                           
  2079                           ;I2C.c: 21:     SSPSTAT = 0;
  2080  13D8  0194               	clrf	20	;volatile
  2081  13D9                     l3019:
  2082                           
  2083                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2084  13D9  1587               	bsf	7,3	;volatile
  2085  13DA                     l3021:
  2086                           
  2087                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2088  13DA  1607               	bsf	7,4	;volatile
  2089  13DB                     l29:
  2090  13DB  0008               	return
  2091  13DC                     __end_of_I2C_Master_Init:
  2092                           
  2093                           	psect	text3
  2094  15CF                     __ptext3:	
  2095 ;; *************** function ___lldiv *****************
  2096 ;; Defined at:
  2097 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  divisor         4    2[COMMON] unsigned long 
  2100 ;;  dividend        4    6[COMMON] unsigned long 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  quotient        4    1[BANK0 ] unsigned long 
  2103 ;;  counter         1    5[BANK0 ] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  4    2[COMMON] unsigned long 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2113 ;;      Params:         8       0       0       0       0
  2114 ;;      Locals:         0       5       0       0       0
  2115 ;;      Temps:          0       1       0       0       0
  2116 ;;      Totals:         8       6       0       0       0
  2117 ;;Total ram usage:       14 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_I2C_Master_Init
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function ___lldiv
  2129  15CF                     ___lldiv:
  2130  15CF                     l2973:	
  2131                           ;incstack = 0
  2132                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2133                           
  2134  15CF  3000               	movlw	0
  2135  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  2136  15D1  1303               	bcf	3,6	;RP1=0, select bank0
  2137  15D2  00A4               	movwf	___lldiv@quotient+3
  2138  15D3  3000               	movlw	0
  2139  15D4  00A3               	movwf	___lldiv@quotient+2
  2140  15D5  3000               	movlw	0
  2141  15D6  00A2               	movwf	___lldiv@quotient+1
  2142  15D7  3000               	movlw	0
  2143  15D8  00A1               	movwf	___lldiv@quotient
  2144  15D9  0875               	movf	___lldiv@divisor+3,w
  2145  15DA  0474               	iorwf	___lldiv@divisor+2,w
  2146  15DB  0473               	iorwf	___lldiv@divisor+1,w
  2147  15DC  0472               	iorwf	___lldiv@divisor,w
  2148  15DD  1903               	skipnz
  2149  15DE  2DE0               	goto	u4031
  2150  15DF  2DE1               	goto	u4030
  2151  15E0                     u4031:
  2152  15E0  2E2E               	goto	l2993
  2153  15E1                     u4030:
  2154  15E1                     l2975:
  2155  15E1  01A5               	clrf	___lldiv@counter
  2156  15E2  0AA5               	incf	___lldiv@counter,f
  2157  15E3  2DF1               	goto	l2979
  2158  15E4                     l2977:
  2159  15E4  3001               	movlw	1
  2160  15E5  00A0               	movwf	??___lldiv
  2161  15E6                     u4045:
  2162  15E6  1003               	clrc
  2163  15E7  0DF2               	rlf	___lldiv@divisor,f
  2164  15E8  0DF3               	rlf	___lldiv@divisor+1,f
  2165  15E9  0DF4               	rlf	___lldiv@divisor+2,f
  2166  15EA  0DF5               	rlf	___lldiv@divisor+3,f
  2167  15EB  0BA0               	decfsz	??___lldiv,f
  2168  15EC  2DE6               	goto	u4045
  2169  15ED  3001               	movlw	1
  2170  15EE  00A0               	movwf	??___lldiv
  2171  15EF  0820               	movf	??___lldiv,w
  2172  15F0  07A5               	addwf	___lldiv@counter,f
  2173  15F1                     l2979:
  2174  15F1  1FF5               	btfss	___lldiv@divisor+3,7
  2175  15F2  2DF4               	goto	u4051
  2176  15F3  2DF5               	goto	u4050
  2177  15F4                     u4051:
  2178  15F4  2DE4               	goto	l2977
  2179  15F5                     u4050:
  2180  15F5                     l2981:
  2181  15F5  3001               	movlw	1
  2182  15F6  00A0               	movwf	??___lldiv
  2183  15F7                     u4065:
  2184  15F7  1003               	clrc
  2185  15F8  0DA1               	rlf	___lldiv@quotient,f
  2186  15F9  0DA2               	rlf	___lldiv@quotient+1,f
  2187  15FA  0DA3               	rlf	___lldiv@quotient+2,f
  2188  15FB  0DA4               	rlf	___lldiv@quotient+3,f
  2189  15FC  0BA0               	decfsz	??___lldiv,f
  2190  15FD  2DF7               	goto	u4065
  2191  15FE                     l2983:
  2192  15FE  0875               	movf	___lldiv@divisor+3,w
  2193  15FF  0279               	subwf	___lldiv@dividend+3,w
  2194  1600  1D03               	skipz
  2195  1601  2E0C               	goto	u4075
  2196  1602  0874               	movf	___lldiv@divisor+2,w
  2197  1603  0278               	subwf	___lldiv@dividend+2,w
  2198  1604  1D03               	skipz
  2199  1605  2E0C               	goto	u4075
  2200  1606  0873               	movf	___lldiv@divisor+1,w
  2201  1607  0277               	subwf	___lldiv@dividend+1,w
  2202  1608  1D03               	skipz
  2203  1609  2E0C               	goto	u4075
  2204  160A  0872               	movf	___lldiv@divisor,w
  2205  160B  0276               	subwf	___lldiv@dividend,w
  2206  160C                     u4075:
  2207  160C  1C03               	skipc
  2208  160D  2E0F               	goto	u4071
  2209  160E  2E10               	goto	u4070
  2210  160F                     u4071:
  2211  160F  2E1F               	goto	l2989
  2212  1610                     u4070:
  2213  1610                     l2985:
  2214  1610  0872               	movf	___lldiv@divisor,w
  2215  1611  02F6               	subwf	___lldiv@dividend,f
  2216  1612  0873               	movf	___lldiv@divisor+1,w
  2217  1613  1C03               	skipc
  2218  1614  0F73               	incfsz	___lldiv@divisor+1,w
  2219  1615  02F7               	subwf	___lldiv@dividend+1,f
  2220  1616  0874               	movf	___lldiv@divisor+2,w
  2221  1617  1C03               	skipc
  2222  1618  0F74               	incfsz	___lldiv@divisor+2,w
  2223  1619  02F8               	subwf	___lldiv@dividend+2,f
  2224  161A  0875               	movf	___lldiv@divisor+3,w
  2225  161B  1C03               	skipc
  2226  161C  0F75               	incfsz	___lldiv@divisor+3,w
  2227  161D  02F9               	subwf	___lldiv@dividend+3,f
  2228  161E                     l2987:
  2229  161E  1421               	bsf	___lldiv@quotient,0
  2230  161F                     l2989:
  2231  161F  3001               	movlw	1
  2232  1620                     u4085:
  2233  1620  1003               	clrc
  2234  1621  0CF5               	rrf	___lldiv@divisor+3,f
  2235  1622  0CF4               	rrf	___lldiv@divisor+2,f
  2236  1623  0CF3               	rrf	___lldiv@divisor+1,f
  2237  1624  0CF2               	rrf	___lldiv@divisor,f
  2238  1625  3EFF               	addlw	-1
  2239  1626  1D03               	skipz
  2240  1627  2E20               	goto	u4085
  2241  1628                     l2991:
  2242  1628  3001               	movlw	1
  2243  1629  02A5               	subwf	___lldiv@counter,f
  2244  162A  1D03               	btfss	3,2
  2245  162B  2E2D               	goto	u4091
  2246  162C  2E2E               	goto	u4090
  2247  162D                     u4091:
  2248  162D  2DF5               	goto	l2981
  2249  162E                     u4090:
  2250  162E                     l2993:
  2251  162E  0824               	movf	___lldiv@quotient+3,w
  2252  162F  00F5               	movwf	?___lldiv+3
  2253  1630  0823               	movf	___lldiv@quotient+2,w
  2254  1631  00F4               	movwf	?___lldiv+2
  2255  1632  0822               	movf	___lldiv@quotient+1,w
  2256  1633  00F3               	movwf	?___lldiv+1
  2257  1634  0821               	movf	___lldiv@quotient,w
  2258  1635  00F2               	movwf	?___lldiv
  2259  1636                     l361:
  2260  1636  0008               	return
  2261  1637                     __end_of___lldiv:
  2262                           
  2263                           	psect	text4
  2264  1569                     __ptext4:	
  2265 ;; *************** function _division *****************
  2266 ;; Defined at:
  2267 ;;		line 274 in file "Lab04.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  valor           1    wreg     unsigned char 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  valor           1    9[COMMON] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      unsigned char 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0, pclath, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       0       0       0       0
  2282 ;;      Locals:         1       0       0       0       0
  2283 ;;      Temps:          0       3       0       0       0
  2284 ;;      Totals:         1       3       0       0       0
  2285 ;;Total ram usage:        4 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    2
  2288 ;; This function calls:
  2289 ;;		___awdiv
  2290 ;;		___awmod
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _division
  2298  1569                     _division:
  2299                           
  2300                           ;incstack = 0
  2301                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2302                           ;division@valor stored from wreg
  2303  1569  00F9               	movwf	division@valor
  2304  156A                     l3391:
  2305                           
  2306                           ;Lab04.c: 275:     hundreds = valor/100;
  2307  156A  3064               	movlw	100
  2308  156B  00F2               	movwf	___awdiv@divisor
  2309  156C  3000               	movlw	0
  2310  156D  00F3               	movwf	___awdiv@divisor+1
  2311  156E  0879               	movf	division@valor,w
  2312  156F  1283               	bcf	3,5	;RP0=0, select bank0
  2313  1570  1303               	bcf	3,6	;RP1=0, select bank0
  2314  1571  00A4               	movwf	??_division
  2315  1572  01A5               	clrf	??_division+1
  2316  1573  0824               	movf	??_division,w
  2317  1574  00F4               	movwf	___awdiv@dividend
  2318  1575  0825               	movf	??_division+1,w
  2319  1576  00F5               	movwf	___awdiv@dividend+1
  2320  1577  160A  118A  2637  160A  118A  	fcall	___awdiv
  2321  157C  0872               	movf	?___awdiv,w
  2322  157D  1283               	bcf	3,5	;RP0=0, select bank0
  2323  157E  1303               	bcf	3,6	;RP1=0, select bank0
  2324  157F  00A6               	movwf	??_division+2
  2325  1580  0826               	movf	??_division+2,w
  2326  1581  1683               	bsf	3,5	;RP0=1, select bank1
  2327  1582  1303               	bcf	3,6	;RP1=0, select bank1
  2328  1583  00B0               	movwf	_hundreds^(0+128)
  2329                           
  2330                           ;Lab04.c: 276:     residuo = valor%100;
  2331  1584  3064               	movlw	100
  2332  1585  00F2               	movwf	___awmod@divisor
  2333  1586  3000               	movlw	0
  2334  1587  00F3               	movwf	___awmod@divisor+1
  2335  1588  0879               	movf	division@valor,w
  2336  1589  1283               	bcf	3,5	;RP0=0, select bank0
  2337  158A  1303               	bcf	3,6	;RP1=0, select bank0
  2338  158B  00A4               	movwf	??_division
  2339  158C  01A5               	clrf	??_division+1
  2340  158D  0824               	movf	??_division,w
  2341  158E  00F4               	movwf	___awmod@dividend
  2342  158F  0825               	movf	??_division+1,w
  2343  1590  00F5               	movwf	___awmod@dividend+1
  2344  1591  160A  118A  24B3  160A  118A  	fcall	___awmod
  2345  1596  0872               	movf	?___awmod,w
  2346  1597  1283               	bcf	3,5	;RP0=0, select bank0
  2347  1598  1303               	bcf	3,6	;RP1=0, select bank0
  2348  1599  00A6               	movwf	??_division+2
  2349  159A  0826               	movf	??_division+2,w
  2350  159B  00FA               	movwf	_residuo
  2351                           
  2352                           ;Lab04.c: 277:     tens = residuo/10;
  2353  159C  300A               	movlw	10
  2354  159D  00F2               	movwf	___awdiv@divisor
  2355  159E  3000               	movlw	0
  2356  159F  00F3               	movwf	___awdiv@divisor+1
  2357  15A0  087A               	movf	_residuo,w
  2358  15A1  00A4               	movwf	??_division
  2359  15A2  01A5               	clrf	??_division+1
  2360  15A3  0824               	movf	??_division,w
  2361  15A4  00F4               	movwf	___awdiv@dividend
  2362  15A5  0825               	movf	??_division+1,w
  2363  15A6  00F5               	movwf	___awdiv@dividend+1
  2364  15A7  160A  118A  2637  160A  118A  	fcall	___awdiv
  2365  15AC  0872               	movf	?___awdiv,w
  2366  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  2367  15AE  1303               	bcf	3,6	;RP1=0, select bank0
  2368  15AF  00A6               	movwf	??_division+2
  2369  15B0  0826               	movf	??_division+2,w
  2370  15B1  1683               	bsf	3,5	;RP0=1, select bank1
  2371  15B2  1303               	bcf	3,6	;RP1=0, select bank1
  2372  15B3  00AF               	movwf	_tens^(0+128)
  2373                           
  2374                           ;Lab04.c: 278:     units = residuo%10;
  2375  15B4  300A               	movlw	10
  2376  15B5  00F2               	movwf	___awmod@divisor
  2377  15B6  3000               	movlw	0
  2378  15B7  00F3               	movwf	___awmod@divisor+1
  2379  15B8  087A               	movf	_residuo,w
  2380  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  2381  15BA  1303               	bcf	3,6	;RP1=0, select bank0
  2382  15BB  00A4               	movwf	??_division
  2383  15BC  01A5               	clrf	??_division+1
  2384  15BD  0824               	movf	??_division,w
  2385  15BE  00F4               	movwf	___awmod@dividend
  2386  15BF  0825               	movf	??_division+1,w
  2387  15C0  00F5               	movwf	___awmod@dividend+1
  2388  15C1  160A  118A  24B3  160A  118A  	fcall	___awmod
  2389  15C6  0872               	movf	?___awmod,w
  2390  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  2391  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  2392  15C9  00A6               	movwf	??_division+2
  2393  15CA  0826               	movf	??_division+2,w
  2394  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  2395  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  2396  15CD  00AE               	movwf	_units^(0+128)
  2397  15CE                     l184:
  2398  15CE  0008               	return
  2399  15CF                     __end_of_division:
  2400                           
  2401                           	psect	text5
  2402  14B3                     __ptext5:	
  2403 ;; *************** function ___awmod *****************
  2404 ;; Defined at:
  2405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  divisor         2    2[COMMON] int 
  2408 ;;  dividend        2    4[COMMON] int 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  sign            1    8[COMMON] unsigned char 
  2411 ;;  counter         1    7[COMMON] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    2[COMMON] int 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2421 ;;      Params:         4       0       0       0       0
  2422 ;;      Locals:         2       0       0       0       0
  2423 ;;      Temps:          1       0       0       0       0
  2424 ;;      Totals:         7       0       0       0       0
  2425 ;;Total ram usage:        7 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_division
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function ___awmod
  2437  14B3                     ___awmod:
  2438  14B3                     l2263:	
  2439                           ;incstack = 0
  2440                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2441                           
  2442  14B3  01F8               	clrf	___awmod@sign
  2443  14B4                     l2265:
  2444  14B4  1FF5               	btfss	___awmod@dividend+1,7
  2445  14B5  2CB7               	goto	u2801
  2446  14B6  2CB8               	goto	u2800
  2447  14B7                     u2801:
  2448  14B7  2CBF               	goto	l2271
  2449  14B8                     u2800:
  2450  14B8                     l2267:
  2451  14B8  09F4               	comf	___awmod@dividend,f
  2452  14B9  09F5               	comf	___awmod@dividend+1,f
  2453  14BA  0AF4               	incf	___awmod@dividend,f
  2454  14BB  1903               	skipnz
  2455  14BC  0AF5               	incf	___awmod@dividend+1,f
  2456  14BD                     l2269:
  2457  14BD  01F8               	clrf	___awmod@sign
  2458  14BE  0AF8               	incf	___awmod@sign,f
  2459  14BF                     l2271:
  2460  14BF  1FF3               	btfss	___awmod@divisor+1,7
  2461  14C0  2CC2               	goto	u2811
  2462  14C1  2CC3               	goto	u2810
  2463  14C2                     u2811:
  2464  14C2  2CC8               	goto	l2275
  2465  14C3                     u2810:
  2466  14C3                     l2273:
  2467  14C3  09F2               	comf	___awmod@divisor,f
  2468  14C4  09F3               	comf	___awmod@divisor+1,f
  2469  14C5  0AF2               	incf	___awmod@divisor,f
  2470  14C6  1903               	skipnz
  2471  14C7  0AF3               	incf	___awmod@divisor+1,f
  2472  14C8                     l2275:
  2473  14C8  0872               	movf	___awmod@divisor,w
  2474  14C9  0473               	iorwf	___awmod@divisor+1,w
  2475  14CA  1903               	btfsc	3,2
  2476  14CB  2CCD               	goto	u2821
  2477  14CC  2CCE               	goto	u2820
  2478  14CD                     u2821:
  2479  14CD  2CFD               	goto	l2293
  2480  14CE                     u2820:
  2481  14CE                     l2277:
  2482  14CE  01F7               	clrf	___awmod@counter
  2483  14CF  0AF7               	incf	___awmod@counter,f
  2484  14D0  2CDC               	goto	l2283
  2485  14D1                     l2279:
  2486  14D1  3001               	movlw	1
  2487  14D2                     u2835:
  2488  14D2  1003               	clrc
  2489  14D3  0DF2               	rlf	___awmod@divisor,f
  2490  14D4  0DF3               	rlf	___awmod@divisor+1,f
  2491  14D5  3EFF               	addlw	-1
  2492  14D6  1D03               	skipz
  2493  14D7  2CD2               	goto	u2835
  2494  14D8                     l2281:
  2495  14D8  3001               	movlw	1
  2496  14D9  00F6               	movwf	??___awmod
  2497  14DA  0876               	movf	??___awmod,w
  2498  14DB  07F7               	addwf	___awmod@counter,f
  2499  14DC                     l2283:
  2500  14DC  1FF3               	btfss	___awmod@divisor+1,7
  2501  14DD  2CDF               	goto	u2841
  2502  14DE  2CE0               	goto	u2840
  2503  14DF                     u2841:
  2504  14DF  2CD1               	goto	l2279
  2505  14E0                     u2840:
  2506  14E0                     l2285:
  2507  14E0  0873               	movf	___awmod@divisor+1,w
  2508  14E1  0275               	subwf	___awmod@dividend+1,w
  2509  14E2  1D03               	skipz
  2510  14E3  2CE6               	goto	u2855
  2511  14E4  0872               	movf	___awmod@divisor,w
  2512  14E5  0274               	subwf	___awmod@dividend,w
  2513  14E6                     u2855:
  2514  14E6  1C03               	skipc
  2515  14E7  2CE9               	goto	u2851
  2516  14E8  2CEA               	goto	u2850
  2517  14E9                     u2851:
  2518  14E9  2CF0               	goto	l2289
  2519  14EA                     u2850:
  2520  14EA                     l2287:
  2521  14EA  0872               	movf	___awmod@divisor,w
  2522  14EB  02F4               	subwf	___awmod@dividend,f
  2523  14EC  0873               	movf	___awmod@divisor+1,w
  2524  14ED  1C03               	skipc
  2525  14EE  03F5               	decf	___awmod@dividend+1,f
  2526  14EF  02F5               	subwf	___awmod@dividend+1,f
  2527  14F0                     l2289:
  2528  14F0  3001               	movlw	1
  2529  14F1                     u2865:
  2530  14F1  1003               	clrc
  2531  14F2  0CF3               	rrf	___awmod@divisor+1,f
  2532  14F3  0CF2               	rrf	___awmod@divisor,f
  2533  14F4  3EFF               	addlw	-1
  2534  14F5  1D03               	skipz
  2535  14F6  2CF1               	goto	u2865
  2536  14F7                     l2291:
  2537  14F7  3001               	movlw	1
  2538  14F8  02F7               	subwf	___awmod@counter,f
  2539  14F9  1D03               	btfss	3,2
  2540  14FA  2CFC               	goto	u2871
  2541  14FB  2CFD               	goto	u2870
  2542  14FC                     u2871:
  2543  14FC  2CE0               	goto	l2285
  2544  14FD                     u2870:
  2545  14FD                     l2293:
  2546  14FD  0878               	movf	___awmod@sign,w
  2547  14FE  1903               	btfsc	3,2
  2548  14FF  2D01               	goto	u2881
  2549  1500  2D02               	goto	u2880
  2550  1501                     u2881:
  2551  1501  2D07               	goto	l2297
  2552  1502                     u2880:
  2553  1502                     l2295:
  2554  1502  09F4               	comf	___awmod@dividend,f
  2555  1503  09F5               	comf	___awmod@dividend+1,f
  2556  1504  0AF4               	incf	___awmod@dividend,f
  2557  1505  1903               	skipnz
  2558  1506  0AF5               	incf	___awmod@dividend+1,f
  2559  1507                     l2297:
  2560  1507  0875               	movf	___awmod@dividend+1,w
  2561  1508  00F3               	movwf	?___awmod+1
  2562  1509  0874               	movf	___awmod@dividend,w
  2563  150A  00F2               	movwf	?___awmod
  2564  150B                     l491:
  2565  150B  0008               	return
  2566  150C                     __end_of___awmod:
  2567                           
  2568                           	psect	text6
  2569  1415                     __ptext6:	
  2570 ;; *************** function _Lcd_Write_String *****************
  2571 ;; Defined at:
  2572 ;;		line 98 in file "LCD_4.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  a               2    7[COMMON] PTR unsigned char 
  2575 ;;		 -> cont(10), STR_5(2), adc1(10), STR_4(2), 
  2576 ;;		 -> adc0(10), STR_3(3), STR_2(3), STR_1(3), 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  i               2    3[BANK0 ] int 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         2       0       0       0       0
  2589 ;;      Locals:         0       2       0       0       0
  2590 ;;      Temps:          0       3       0       0       0
  2591 ;;      Totals:         2       5       0       0       0
  2592 ;;Total ram usage:        7 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    3
  2595 ;; This function calls:
  2596 ;;		_Lcd_Write_Char
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _Lcd_Write_String
  2604  1415                     _Lcd_Write_String:
  2605  1415                     l3281:	
  2606                           ;incstack = 0
  2607                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2608                           
  2609                           
  2610                           ;LCD_4.c: 99:     int i;;LCD_4.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2611  1415  1283               	bcf	3,5	;RP0=0, select bank0
  2612  1416  1303               	bcf	3,6	;RP1=0, select bank0
  2613  1417  01A3               	clrf	Lcd_Write_String@i
  2614  1418  01A4               	clrf	Lcd_Write_String@i+1
  2615  1419  2C3E               	goto	l3287
  2616  141A                     l3283:
  2617                           
  2618                           ;LCD_4.c: 101:         Lcd_Write_Char(a[i]);
  2619  141A  0823               	movf	Lcd_Write_String@i,w
  2620  141B  0777               	addwf	Lcd_Write_String@a,w
  2621  141C  00A1               	movwf	??_Lcd_Write_String+1
  2622  141D  0878               	movf	Lcd_Write_String@a+1,w
  2623  141E  00A0               	movwf	??_Lcd_Write_String
  2624  141F  1803               	skipnc
  2625  1420  0AA0               	incf	??_Lcd_Write_String,f
  2626  1421  1FA3               	btfss	Lcd_Write_String@i,7
  2627  1422  2C24               	goto	u4750
  2628  1423  03A0               	decf	??_Lcd_Write_String,f
  2629  1424                     u4750:
  2630  1424  1283               	bcf	3,5	;RP0=0, select bank0
  2631  1425  1303               	bcf	3,6	;RP1=0, select bank0
  2632  1426  0820               	movf	??_Lcd_Write_String,w
  2633  1427  00A2               	movwf	??_Lcd_Write_String+2
  2634  1428  0822               	movf	??_Lcd_Write_String+2,w
  2635  1429  00FF               	movwf	btemp+1
  2636  142A  0821               	movf	??_Lcd_Write_String+1,w
  2637  142B  0084               	movwf	4
  2638  142C  120A  118A  27E1  160A  118A  	fcall	stringtab
  2639  1431  160A  118A  23DC  160A  118A  	fcall	_Lcd_Write_Char
  2640  1436                     l3285:
  2641  1436  3001               	movlw	1
  2642  1437  1283               	bcf	3,5	;RP0=0, select bank0
  2643  1438  1303               	bcf	3,6	;RP1=0, select bank0
  2644  1439  07A3               	addwf	Lcd_Write_String@i,f
  2645  143A  1803               	skipnc
  2646  143B  0AA4               	incf	Lcd_Write_String@i+1,f
  2647  143C  3000               	movlw	0
  2648  143D  07A4               	addwf	Lcd_Write_String@i+1,f
  2649  143E                     l3287:
  2650  143E  0823               	movf	Lcd_Write_String@i,w
  2651  143F  0777               	addwf	Lcd_Write_String@a,w
  2652  1440  00A1               	movwf	??_Lcd_Write_String+1
  2653  1441  0878               	movf	Lcd_Write_String@a+1,w
  2654  1442  00A0               	movwf	??_Lcd_Write_String
  2655  1443  1803               	skipnc
  2656  1444  0AA0               	incf	??_Lcd_Write_String,f
  2657  1445  1FA3               	btfss	Lcd_Write_String@i,7
  2658  1446  2C48               	goto	u4760
  2659  1447  03A0               	decf	??_Lcd_Write_String,f
  2660  1448                     u4760:
  2661  1448  1283               	bcf	3,5	;RP0=0, select bank0
  2662  1449  1303               	bcf	3,6	;RP1=0, select bank0
  2663  144A  0820               	movf	??_Lcd_Write_String,w
  2664  144B  00A2               	movwf	??_Lcd_Write_String+2
  2665  144C  0822               	movf	??_Lcd_Write_String+2,w
  2666  144D  00FF               	movwf	btemp+1
  2667  144E  0821               	movf	??_Lcd_Write_String+1,w
  2668  144F  0084               	movwf	4
  2669  1450  120A  118A  27E1  160A  118A  	fcall	stringtab
  2670  1455  3A00               	xorlw	0
  2671  1456  1D03               	skipz
  2672  1457  2C59               	goto	u4771
  2673  1458  2C5A               	goto	u4770
  2674  1459                     u4771:
  2675  1459  2C1A               	goto	l3283
  2676  145A                     u4770:
  2677  145A                     l233:
  2678  145A  0008               	return
  2679  145B                     __end_of_Lcd_Write_String:
  2680                           
  2681                           	psect	text7
  2682  13DC                     __ptext7:	
  2683 ;; *************** function _Lcd_Write_Char *****************
  2684 ;; Defined at:
  2685 ;;		line 83 in file "LCD_4.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  a               1    wreg     unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  a               1    6[COMMON] unsigned char 
  2690 ;;  y               1    5[COMMON] unsigned char 
  2691 ;;  temp            1    4[COMMON] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0, pclath, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2701 ;;      Params:         0       0       0       0       0
  2702 ;;      Locals:         3       0       0       0       0
  2703 ;;      Temps:          1       0       0       0       0
  2704 ;;      Totals:         4       0       0       0       0
  2705 ;;Total ram usage:        4 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    2
  2708 ;; This function calls:
  2709 ;;		_Lcd_Port
  2710 ;; This function is called by:
  2711 ;;		_Lcd_Write_String
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _Lcd_Write_Char
  2717  13DC                     _Lcd_Write_Char:
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2721                           ;Lcd_Write_Char@a stored from wreg
  2722  13DC  00F6               	movwf	Lcd_Write_Char@a
  2723  13DD                     l2185:
  2724                           
  2725                           ;LCD_4.c: 84:     char temp, y;;LCD_4.c: 85:     temp = a & 0x0F;
  2726  13DD  0876               	movf	Lcd_Write_Char@a,w
  2727  13DE  390F               	andlw	15
  2728  13DF  00F3               	movwf	??_Lcd_Write_Char
  2729  13E0  0873               	movf	??_Lcd_Write_Char,w
  2730  13E1  00F4               	movwf	Lcd_Write_Char@temp
  2731                           
  2732                           ;LCD_4.c: 86:     y = a & 0xF0;
  2733  13E2  0876               	movf	Lcd_Write_Char@a,w
  2734  13E3  39F0               	andlw	240
  2735  13E4  00F3               	movwf	??_Lcd_Write_Char
  2736  13E5  0873               	movf	??_Lcd_Write_Char,w
  2737  13E6  00F5               	movwf	Lcd_Write_Char@y
  2738  13E7                     l2187:
  2739                           
  2740                           ;LCD_4.c: 87:     RE0 = 1;
  2741  13E7  1283               	bcf	3,5	;RP0=0, select bank0
  2742  13E8  1303               	bcf	3,6	;RP1=0, select bank0
  2743  13E9  1409               	bsf	9,0	;volatile
  2744  13EA                     l2189:
  2745                           
  2746                           ;LCD_4.c: 88:     Lcd_Port(y >> 4);
  2747  13EA  0875               	movf	Lcd_Write_Char@y,w
  2748  13EB  00F3               	movwf	??_Lcd_Write_Char
  2749  13EC  3004               	movlw	4
  2750  13ED                     u2655:
  2751  13ED  1003               	clrc
  2752  13EE  0CF3               	rrf	??_Lcd_Write_Char,f
  2753  13EF  3EFF               	addlw	-1
  2754  13F0  1D03               	skipz
  2755  13F1  2BED               	goto	u2655
  2756  13F2  0873               	movf	??_Lcd_Write_Char,w
  2757  13F3  160A  118A  22B4  160A  118A  	fcall	_Lcd_Port
  2758  13F8                     l2191:
  2759                           
  2760                           ;LCD_4.c: 89:     RE1 = 1;
  2761  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  2762  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  2763  13FA  1489               	bsf	9,1	;volatile
  2764  13FB                     l2193:
  2765                           
  2766                           ;LCD_4.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2767  13FB  301A               	movlw	26
  2768  13FC  00F3               	movwf	??_Lcd_Write_Char
  2769  13FD                     u4937:
  2770  13FD  0BF3               	decfsz	??_Lcd_Write_Char,f
  2771  13FE  2BFD               	goto	u4937
  2772  13FF  0000               	nop
  2773  1400                     l2195:
  2774                           
  2775                           ;LCD_4.c: 91:     RE1 = 0;
  2776  1400  1283               	bcf	3,5	;RP0=0, select bank0
  2777  1401  1303               	bcf	3,6	;RP1=0, select bank0
  2778  1402  1089               	bcf	9,1	;volatile
  2779  1403                     l2197:
  2780                           
  2781                           ;LCD_4.c: 92:     Lcd_Port(temp);
  2782  1403  0874               	movf	Lcd_Write_Char@temp,w
  2783  1404  160A  118A  22B4  160A  118A  	fcall	_Lcd_Port
  2784  1409                     l2199:
  2785                           
  2786                           ;LCD_4.c: 93:     RE1 = 1;
  2787  1409  1283               	bcf	3,5	;RP0=0, select bank0
  2788  140A  1303               	bcf	3,6	;RP1=0, select bank0
  2789  140B  1489               	bsf	9,1	;volatile
  2790  140C                     l2201:
  2791                           
  2792                           ;LCD_4.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2793  140C  301A               	movlw	26
  2794  140D  00F3               	movwf	??_Lcd_Write_Char
  2795  140E                     u4947:
  2796  140E  0BF3               	decfsz	??_Lcd_Write_Char,f
  2797  140F  2C0E               	goto	u4947
  2798  1410  0000               	nop
  2799  1411                     l2203:
  2800                           
  2801                           ;LCD_4.c: 95:     RE1 = 0;
  2802  1411  1283               	bcf	3,5	;RP0=0, select bank0
  2803  1412  1303               	bcf	3,6	;RP1=0, select bank0
  2804  1413  1089               	bcf	9,1	;volatile
  2805  1414                     l227:
  2806  1414  0008               	return
  2807  1415                     __end_of_Lcd_Write_Char:
  2808                           
  2809                           	psect	text8
  2810  145B                     __ptext8:	
  2811 ;; *************** function _Lcd_Set_Cursor *****************
  2812 ;; Defined at:
  2813 ;;		line 48 in file "LCD_4.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  a               1    wreg     unsigned char 
  2816 ;;  b               1    6[COMMON] unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  a               1    0[BANK0 ] unsigned char 
  2819 ;;  temp            1    3[BANK0 ] unsigned char 
  2820 ;;  y               1    2[BANK0 ] unsigned char 
  2821 ;;  z               1    1[BANK0 ] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, pclath, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         1       0       0       0       0
  2832 ;;      Locals:         0       4       0       0       0
  2833 ;;      Temps:          2       0       0       0       0
  2834 ;;      Totals:         3       4       0       0       0
  2835 ;;Total ram usage:        7 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    3
  2838 ;; This function calls:
  2839 ;;		_Lcd_Cmd
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _Lcd_Set_Cursor
  2847  145B                     _Lcd_Set_Cursor:
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2851                           ;Lcd_Set_Cursor@a stored from wreg
  2852  145B  1283               	bcf	3,5	;RP0=0, select bank0
  2853  145C  1303               	bcf	3,6	;RP1=0, select bank0
  2854  145D  00A0               	movwf	Lcd_Set_Cursor@a
  2855  145E                     l2753:
  2856                           
  2857                           ;LCD_4.c: 49:     char temp, z, y;;LCD_4.c: 50:     if (a == 1) {
  2858  145E  0320               	decf	Lcd_Set_Cursor@a,w
  2859  145F  1D03               	btfss	3,2
  2860  1460  2C62               	goto	u3871
  2861  1461  2C63               	goto	u3870
  2862  1462                     u3871:
  2863  1462  2C88               	goto	l2763
  2864  1463                     u3870:
  2865  1463                     l2755:
  2866                           
  2867                           ;LCD_4.c: 51:         temp = 0x80 + b - 1;
  2868  1463  0876               	movf	Lcd_Set_Cursor@b,w
  2869  1464  3E7F               	addlw	127
  2870  1465  00F7               	movwf	??_Lcd_Set_Cursor
  2871  1466  0877               	movf	??_Lcd_Set_Cursor,w
  2872  1467  00A3               	movwf	Lcd_Set_Cursor@temp
  2873                           
  2874                           ;LCD_4.c: 52:         z = temp >> 4;
  2875  1468  0823               	movf	Lcd_Set_Cursor@temp,w
  2876  1469  00F7               	movwf	??_Lcd_Set_Cursor
  2877  146A  3004               	movlw	4
  2878  146B                     u3885:
  2879  146B  1003               	clrc
  2880  146C  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2881  146D  3EFF               	addlw	-1
  2882  146E  1D03               	skipz
  2883  146F  2C6B               	goto	u3885
  2884  1470  0877               	movf	??_Lcd_Set_Cursor,w
  2885  1471  00F8               	movwf	??_Lcd_Set_Cursor+1
  2886  1472  0878               	movf	??_Lcd_Set_Cursor+1,w
  2887  1473  00A1               	movwf	Lcd_Set_Cursor@z
  2888  1474                     l2757:
  2889                           
  2890                           ;LCD_4.c: 53:         y = temp & 0x0F;
  2891  1474  0823               	movf	Lcd_Set_Cursor@temp,w
  2892  1475  390F               	andlw	15
  2893  1476  00F7               	movwf	??_Lcd_Set_Cursor
  2894  1477  0877               	movf	??_Lcd_Set_Cursor,w
  2895  1478  00A2               	movwf	Lcd_Set_Cursor@y
  2896  1479                     l2759:
  2897                           
  2898                           ;LCD_4.c: 54:         Lcd_Cmd(z);
  2899  1479  0821               	movf	Lcd_Set_Cursor@z,w
  2900  147A  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  2901  147F                     l2761:
  2902                           
  2903                           ;LCD_4.c: 55:         Lcd_Cmd(y);
  2904  147F  1283               	bcf	3,5	;RP0=0, select bank0
  2905  1480  1303               	bcf	3,6	;RP1=0, select bank0
  2906  1481  0822               	movf	Lcd_Set_Cursor@y,w
  2907  1482  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  2908                           
  2909                           ;LCD_4.c: 56:     } else if (a == 2) {
  2910  1487  2CB2               	goto	l221
  2911  1488                     l2763:
  2912  1488  3002               	movlw	2
  2913  1489  0620               	xorwf	Lcd_Set_Cursor@a,w
  2914  148A  1D03               	btfss	3,2
  2915  148B  2C8D               	goto	u3891
  2916  148C  2C8E               	goto	u3890
  2917  148D                     u3891:
  2918  148D  2CB2               	goto	l221
  2919  148E                     u3890:
  2920  148E                     l2765:
  2921                           
  2922                           ;LCD_4.c: 57:         temp = 0xC0 + b - 1;
  2923  148E  0876               	movf	Lcd_Set_Cursor@b,w
  2924  148F  3EBF               	addlw	191
  2925  1490  00F7               	movwf	??_Lcd_Set_Cursor
  2926  1491  0877               	movf	??_Lcd_Set_Cursor,w
  2927  1492  00A3               	movwf	Lcd_Set_Cursor@temp
  2928                           
  2929                           ;LCD_4.c: 58:         z = temp >> 4;
  2930  1493  0823               	movf	Lcd_Set_Cursor@temp,w
  2931  1494  00F7               	movwf	??_Lcd_Set_Cursor
  2932  1495  3004               	movlw	4
  2933  1496                     u3905:
  2934  1496  1003               	clrc
  2935  1497  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2936  1498  3EFF               	addlw	-1
  2937  1499  1D03               	skipz
  2938  149A  2C96               	goto	u3905
  2939  149B  0877               	movf	??_Lcd_Set_Cursor,w
  2940  149C  00F8               	movwf	??_Lcd_Set_Cursor+1
  2941  149D  0878               	movf	??_Lcd_Set_Cursor+1,w
  2942  149E  00A1               	movwf	Lcd_Set_Cursor@z
  2943  149F                     l2767:
  2944                           
  2945                           ;LCD_4.c: 59:         y = temp & 0x0F;
  2946  149F  0823               	movf	Lcd_Set_Cursor@temp,w
  2947  14A0  390F               	andlw	15
  2948  14A1  00F7               	movwf	??_Lcd_Set_Cursor
  2949  14A2  0877               	movf	??_Lcd_Set_Cursor,w
  2950  14A3  00A2               	movwf	Lcd_Set_Cursor@y
  2951  14A4                     l2769:
  2952                           
  2953                           ;LCD_4.c: 60:         Lcd_Cmd(z);
  2954  14A4  0821               	movf	Lcd_Set_Cursor@z,w
  2955  14A5  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  2956  14AA                     l2771:
  2957                           
  2958                           ;LCD_4.c: 61:         Lcd_Cmd(y);
  2959  14AA  1283               	bcf	3,5	;RP0=0, select bank0
  2960  14AB  1303               	bcf	3,6	;RP1=0, select bank0
  2961  14AC  0822               	movf	Lcd_Set_Cursor@y,w
  2962  14AD  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  2963  14B2                     l221:
  2964  14B2  0008               	return
  2965  14B3                     __end_of_Lcd_Set_Cursor:
  2966                           
  2967                           	psect	text9
  2968  150C                     __ptext9:	
  2969 ;; *************** function _Lcd_Init *****************
  2970 ;; Defined at:
  2971 ;;		line 65 in file "LCD_4.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, pclath, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0
  2987 ;;      Temps:          2       0       0       0       0
  2988 ;;      Totals:         2       0       0       0       0
  2989 ;;Total ram usage:        2 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    3
  2992 ;; This function calls:
  2993 ;;		_Lcd_Cmd
  2994 ;;		_Lcd_Port
  2995 ;; This function is called by:
  2996 ;;		_main
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function _Lcd_Init
  3002  150C                     _Lcd_Init:
  3003  150C                     l2741:	
  3004                           ;incstack = 0
  3005                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3006                           
  3007                           
  3008                           ;LCD_4.c: 66:     Lcd_Port(0x00);
  3009  150C  3000               	movlw	0
  3010  150D  160A  118A  22B4  160A  118A  	fcall	_Lcd_Port
  3011  1512                     l2743:
  3012                           
  3013                           ;LCD_4.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3014  1512  3034               	movlw	52
  3015  1513  00F7               	movwf	??_Lcd_Init+1
  3016  1514  30F1               	movlw	241
  3017  1515  00F6               	movwf	??_Lcd_Init
  3018  1516                     u4957:
  3019  1516  0BF6               	decfsz	??_Lcd_Init,f
  3020  1517  2D16               	goto	u4957
  3021  1518  0BF7               	decfsz	??_Lcd_Init+1,f
  3022  1519  2D16               	goto	u4957
  3023  151A  2D1B               	nop2
  3024  151B                     l2745:
  3025                           
  3026                           ;LCD_4.c: 68:     Lcd_Cmd(0x03);
  3027  151B  3003               	movlw	3
  3028  151C  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3029                           
  3030                           ;LCD_4.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3031  1521  300D               	movlw	13
  3032  1522  00F7               	movwf	??_Lcd_Init+1
  3033  1523  30FB               	movlw	251
  3034  1524  00F6               	movwf	??_Lcd_Init
  3035  1525                     u4967:
  3036  1525  0BF6               	decfsz	??_Lcd_Init,f
  3037  1526  2D25               	goto	u4967
  3038  1527  0BF7               	decfsz	??_Lcd_Init+1,f
  3039  1528  2D25               	goto	u4967
  3040  1529  2D2A               	nop2
  3041  152A                     l2747:
  3042                           
  3043                           ;LCD_4.c: 70:     Lcd_Cmd(0x03);
  3044  152A  3003               	movlw	3
  3045  152B  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3046  1530                     l2749:
  3047                           
  3048                           ;LCD_4.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3049  1530  301D               	movlw	29
  3050  1531  00F7               	movwf	??_Lcd_Init+1
  3051  1532  3091               	movlw	145
  3052  1533  00F6               	movwf	??_Lcd_Init
  3053  1534                     u4977:
  3054  1534  0BF6               	decfsz	??_Lcd_Init,f
  3055  1535  2D34               	goto	u4977
  3056  1536  0BF7               	decfsz	??_Lcd_Init+1,f
  3057  1537  2D34               	goto	u4977
  3058                           
  3059                           ;LCD_4.c: 72:     Lcd_Cmd(0x03);
  3060  1538  3003               	movlw	3
  3061  1539  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3062                           
  3063                           ;LCD_4.c: 74:     Lcd_Cmd(0x02);
  3064  153E  3002               	movlw	2
  3065  153F  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3066                           
  3067                           ;LCD_4.c: 75:     Lcd_Cmd(0x02);
  3068  1544  3002               	movlw	2
  3069  1545  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3070                           
  3071                           ;LCD_4.c: 76:     Lcd_Cmd(0x08);
  3072  154A  3008               	movlw	8
  3073  154B  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3074                           
  3075                           ;LCD_4.c: 77:     Lcd_Cmd(0x00);
  3076  1550  3000               	movlw	0
  3077  1551  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3078                           
  3079                           ;LCD_4.c: 78:     Lcd_Cmd(0x0C);
  3080  1556  300C               	movlw	12
  3081  1557  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3082                           
  3083                           ;LCD_4.c: 79:     Lcd_Cmd(0x00);
  3084  155C  3000               	movlw	0
  3085  155D  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3086                           
  3087                           ;LCD_4.c: 80:     Lcd_Cmd(0x06);
  3088  1562  3006               	movlw	6
  3089  1563  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3090  1568                     l224:
  3091  1568  0008               	return
  3092  1569                     __end_of_Lcd_Init:
  3093                           
  3094                           	psect	text10
  3095  128D                     __ptext10:	
  3096 ;; *************** function _Lcd_Clear *****************
  3097 ;; Defined at:
  3098 ;;		line 43 in file "LCD_4.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0
  3115 ;;      Totals:         0       0       0       0       0
  3116 ;;Total ram usage:        0 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    3
  3119 ;; This function calls:
  3120 ;;		_Lcd_Cmd
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _Lcd_Clear
  3128  128D                     _Lcd_Clear:
  3129  128D                     l2751:	
  3130                           ;incstack = 0
  3131                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3132                           
  3133                           
  3134                           ;LCD_4.c: 44:     Lcd_Cmd(0);
  3135  128D  3000               	movlw	0
  3136  128E  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3137                           
  3138                           ;LCD_4.c: 45:     Lcd_Cmd(1);
  3139  1293  3001               	movlw	1
  3140  1294  160A  118A  229A  160A  118A  	fcall	_Lcd_Cmd
  3141  1299                     l215:
  3142  1299  0008               	return
  3143  129A                     __end_of_Lcd_Clear:
  3144                           
  3145                           	psect	text11
  3146  129A                     __ptext11:	
  3147 ;; *************** function _Lcd_Cmd *****************
  3148 ;; Defined at:
  3149 ;;		line 35 in file "LCD_4.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  a               1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  a               1    5[COMMON] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3163 ;;      Params:         0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0
  3165 ;;      Temps:          2       0       0       0       0
  3166 ;;      Totals:         3       0       0       0       0
  3167 ;;Total ram usage:        3 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    2
  3170 ;; This function calls:
  3171 ;;		_Lcd_Port
  3172 ;; This function is called by:
  3173 ;;		_Lcd_Clear
  3174 ;;		_Lcd_Set_Cursor
  3175 ;;		_Lcd_Init
  3176 ;;		_Lcd_Shift_Right
  3177 ;;		_Lcd_Shift_Left
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function _Lcd_Cmd
  3183  129A                     _Lcd_Cmd:
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3187                           ;Lcd_Cmd@a stored from wreg
  3188  129A  00F5               	movwf	Lcd_Cmd@a
  3189  129B                     l2175:
  3190                           
  3191                           ;LCD_4.c: 36:     RE0 = 0;
  3192  129B  1283               	bcf	3,5	;RP0=0, select bank0
  3193  129C  1303               	bcf	3,6	;RP1=0, select bank0
  3194  129D  1009               	bcf	9,0	;volatile
  3195  129E                     l2177:
  3196                           
  3197                           ;LCD_4.c: 37:     Lcd_Port(a);
  3198  129E  0875               	movf	Lcd_Cmd@a,w
  3199  129F  160A  118A  22B4  160A  118A  	fcall	_Lcd_Port
  3200  12A4                     l2179:
  3201                           
  3202                           ;LCD_4.c: 38:     RE1 = 1;
  3203  12A4  1283               	bcf	3,5	;RP0=0, select bank0
  3204  12A5  1303               	bcf	3,6	;RP1=0, select bank0
  3205  12A6  1489               	bsf	9,1	;volatile
  3206  12A7                     l2181:
  3207                           
  3208                           ;LCD_4.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3209  12A7  300B               	movlw	11
  3210  12A8  00F4               	movwf	??_Lcd_Cmd+1
  3211  12A9  3062               	movlw	98
  3212  12AA  00F3               	movwf	??_Lcd_Cmd
  3213  12AB                     u4987:
  3214  12AB  0BF3               	decfsz	??_Lcd_Cmd,f
  3215  12AC  2AAB               	goto	u4987
  3216  12AD  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3217  12AE  2AAB               	goto	u4987
  3218  12AF  0000               	nop
  3219  12B0                     l2183:
  3220                           
  3221                           ;LCD_4.c: 40:     RE1 = 0;
  3222  12B0  1283               	bcf	3,5	;RP0=0, select bank0
  3223  12B1  1303               	bcf	3,6	;RP1=0, select bank0
  3224  12B2  1089               	bcf	9,1	;volatile
  3225  12B3                     l212:
  3226  12B3  0008               	return
  3227  12B4                     __end_of_Lcd_Cmd:
  3228                           
  3229                           	psect	text12
  3230  12B4                     __ptext12:	
  3231 ;; *************** function _Lcd_Port *****************
  3232 ;; Defined at:
  3233 ;;		line 13 in file "LCD_4.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  a               1    wreg     unsigned char 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  a               1    2[COMMON] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3247 ;;      Params:         0       0       0       0       0
  3248 ;;      Locals:         1       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0
  3250 ;;      Totals:         1       0       0       0       0
  3251 ;;Total ram usage:        1 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    1
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_Lcd_Cmd
  3258 ;;		_Lcd_Init
  3259 ;;		_Lcd_Write_Char
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _Lcd_Port
  3265  12B4                     _Lcd_Port:
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in _Lcd_Port: [wreg]
  3269                           ;Lcd_Port@a stored from wreg
  3270  12B4  00F2               	movwf	Lcd_Port@a
  3271  12B5                     l1917:
  3272                           
  3273                           ;LCD_4.c: 14:     if (a & 1)
  3274  12B5  1C72               	btfss	Lcd_Port@a,0
  3275  12B6  2AB8               	goto	u2021
  3276  12B7  2AB9               	goto	u2020
  3277  12B8                     u2021:
  3278  12B8  2ABD               	goto	l201
  3279  12B9                     u2020:
  3280  12B9                     l1919:
  3281                           
  3282                           ;LCD_4.c: 15:         RC2 = 1;
  3283  12B9  1283               	bcf	3,5	;RP0=0, select bank0
  3284  12BA  1303               	bcf	3,6	;RP1=0, select bank0
  3285  12BB  1507               	bsf	7,2	;volatile
  3286  12BC  2AC0               	goto	l202
  3287  12BD                     l201:	
  3288                           ;LCD_4.c: 16:     else
  3289                           
  3290                           
  3291                           ;LCD_4.c: 17:         RC2 = 0;
  3292  12BD  1283               	bcf	3,5	;RP0=0, select bank0
  3293  12BE  1303               	bcf	3,6	;RP1=0, select bank0
  3294  12BF  1107               	bcf	7,2	;volatile
  3295  12C0                     l202:
  3296                           
  3297                           ;LCD_4.c: 19:     if (a & 2)
  3298  12C0  1CF2               	btfss	Lcd_Port@a,1
  3299  12C1  2AC3               	goto	u2031
  3300  12C2  2AC4               	goto	u2030
  3301  12C3                     u2031:
  3302  12C3  2AC6               	goto	l203
  3303  12C4                     u2030:
  3304  12C4                     l1921:
  3305                           
  3306                           ;LCD_4.c: 20:         RC1 = 1;
  3307  12C4  1487               	bsf	7,1	;volatile
  3308  12C5  2AC7               	goto	l204
  3309  12C6                     l203:	
  3310                           ;LCD_4.c: 21:     else
  3311                           
  3312                           
  3313                           ;LCD_4.c: 22:         RC1 = 0;
  3314  12C6  1087               	bcf	7,1	;volatile
  3315  12C7                     l204:
  3316                           
  3317                           ;LCD_4.c: 24:     if (a & 4)
  3318  12C7  1D72               	btfss	Lcd_Port@a,2
  3319  12C8  2ACA               	goto	u2041
  3320  12C9  2ACB               	goto	u2040
  3321  12CA                     u2041:
  3322  12CA  2ACD               	goto	l205
  3323  12CB                     u2040:
  3324  12CB                     l1923:
  3325                           
  3326                           ;LCD_4.c: 25:         RC0 = 1;
  3327  12CB  1407               	bsf	7,0	;volatile
  3328  12CC  2ACE               	goto	l206
  3329  12CD                     l205:	
  3330                           ;LCD_4.c: 26:     else
  3331                           
  3332                           
  3333                           ;LCD_4.c: 27:         RC0 = 0;
  3334  12CD  1007               	bcf	7,0	;volatile
  3335  12CE                     l206:
  3336                           
  3337                           ;LCD_4.c: 29:     if (a & 8)
  3338  12CE  1DF2               	btfss	Lcd_Port@a,3
  3339  12CF  2AD1               	goto	u2051
  3340  12D0  2AD2               	goto	u2050
  3341  12D1                     u2051:
  3342  12D1  2AD4               	goto	l207
  3343  12D2                     u2050:
  3344  12D2                     l1925:
  3345                           
  3346                           ;LCD_4.c: 30:         RC5 = 1;
  3347  12D2  1687               	bsf	7,5	;volatile
  3348  12D3  2AD5               	goto	l209
  3349  12D4                     l207:	
  3350                           ;LCD_4.c: 31:     else
  3351                           
  3352                           
  3353                           ;LCD_4.c: 32:         RC5 = 0;
  3354  12D4  1287               	bcf	7,5	;volatile
  3355  12D5                     l209:
  3356  12D5  0008               	return
  3357  12D6                     __end_of_Lcd_Port:
  3358                           
  3359                           	psect	text13
  3360  1276                     __ptext13:	
  3361 ;; *************** function _I2C_Master_Write *****************
  3362 ;; Defined at:
  3363 ;;		line 65 in file "I2C.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  d               2    2[COMMON] unsigned int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, pclath, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         2       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0
  3380 ;;      Totals:         2       0       0       0       0
  3381 ;;Total ram usage:        2 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    2
  3384 ;; This function calls:
  3385 ;;		_I2C_Master_Wait
  3386 ;; This function is called by:
  3387 ;;		_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           
  3392                           ;psect for function _I2C_Master_Write
  3393  1276                     _I2C_Master_Write:
  3394  1276                     l2697:	
  3395                           ;incstack = 0
  3396                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3397                           
  3398                           
  3399                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3400  1276  160A  118A  2280  160A  118A  	fcall	_I2C_Master_Wait
  3401  127B                     l2699:
  3402                           
  3403                           ;I2C.c: 68:     SSPBUF = d;
  3404  127B  0872               	movf	I2C_Master_Write@d,w
  3405  127C  1283               	bcf	3,5	;RP0=0, select bank0
  3406  127D  1303               	bcf	3,6	;RP1=0, select bank0
  3407  127E  0093               	movwf	19	;volatile
  3408  127F                     l47:
  3409  127F  0008               	return
  3410  1280                     __end_of_I2C_Master_Write:
  3411                           
  3412                           	psect	text14
  3413  126D                     __ptext14:	
  3414 ;; *************** function _I2C_Master_Stop *****************
  3415 ;; Defined at:
  3416 ;;		line 55 in file "I2C.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         0       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0
  3433 ;;      Totals:         0       0       0       0       0
  3434 ;;Total ram usage:        0 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    2
  3437 ;; This function calls:
  3438 ;;		_I2C_Master_Wait
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           
  3445                           ;psect for function _I2C_Master_Stop
  3446  126D                     _I2C_Master_Stop:
  3447  126D                     l2693:	
  3448                           ;incstack = 0
  3449                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3450                           
  3451                           
  3452                           ;I2C.c: 57:     I2C_Master_Wait();
  3453  126D  160A  118A  2280  160A  118A  	fcall	_I2C_Master_Wait
  3454  1272                     l2695:
  3455                           
  3456                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3457  1272  1683               	bsf	3,5	;RP0=1, select bank1
  3458  1273  1303               	bcf	3,6	;RP1=0, select bank1
  3459  1274  1511               	bsf	17,2	;volatile
  3460  1275                     l44:
  3461  1275  0008               	return
  3462  1276                     __end_of_I2C_Master_Stop:
  3463                           
  3464                           	psect	text15
  3465  1264                     __ptext15:	
  3466 ;; *************** function _I2C_Master_Start *****************
  3467 ;; Defined at:
  3468 ;;		line 39 in file "I2C.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0, pclath, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0
  3485 ;;      Totals:         0       0       0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    2
  3489 ;; This function calls:
  3490 ;;		_I2C_Master_Wait
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _I2C_Master_Start
  3498  1264                     _I2C_Master_Start:
  3499  1264                     l2689:	
  3500                           ;incstack = 0
  3501                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3502                           
  3503                           
  3504                           ;I2C.c: 41:     I2C_Master_Wait();
  3505  1264  160A  118A  2280  160A  118A  	fcall	_I2C_Master_Wait
  3506  1269                     l2691:
  3507                           
  3508                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3509  1269  1683               	bsf	3,5	;RP0=1, select bank1
  3510  126A  1303               	bcf	3,6	;RP1=0, select bank1
  3511  126B  1411               	bsf	17,0	;volatile
  3512  126C                     l38:
  3513  126C  0008               	return
  3514  126D                     __end_of_I2C_Master_Start:
  3515                           
  3516                           	psect	text16
  3517  1376                     __ptext16:	
  3518 ;; *************** function _I2C_Master_Read *****************
  3519 ;; Defined at:
  3520 ;;		line 74 in file "I2C.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  a               2    2[COMMON] unsigned short 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  temp            2    6[COMMON] unsigned short 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  2    2[COMMON] unsigned short 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, pclath, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3534 ;;      Params:         2       0       0       0       0
  3535 ;;      Locals:         2       0       0       0       0
  3536 ;;      Temps:          2       0       0       0       0
  3537 ;;      Totals:         6       0       0       0       0
  3538 ;;Total ram usage:        6 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    2
  3541 ;; This function calls:
  3542 ;;		_I2C_Master_Wait
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _I2C_Master_Read
  3550  1376                     _I2C_Master_Read:
  3551  1376                     l2701:	
  3552                           ;incstack = 0
  3553                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3554                           
  3555                           
  3556                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3557  1376  160A  118A  2280  160A  118A  	fcall	_I2C_Master_Wait
  3558  137B                     l2703:
  3559                           
  3560                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3561  137B  1683               	bsf	3,5	;RP0=1, select bank1
  3562  137C  1303               	bcf	3,6	;RP1=0, select bank1
  3563  137D  1591               	bsf	17,3	;volatile
  3564                           
  3565                           ;I2C.c: 79:     I2C_Master_Wait();
  3566  137E  160A  118A  2280  160A  118A  	fcall	_I2C_Master_Wait
  3567  1383                     l2705:
  3568                           
  3569                           ;I2C.c: 80:     temp = SSPBUF;
  3570  1383  1283               	bcf	3,5	;RP0=0, select bank0
  3571  1384  1303               	bcf	3,6	;RP1=0, select bank0
  3572  1385  0813               	movf	19,w	;volatile
  3573  1386  00F4               	movwf	??_I2C_Master_Read
  3574  1387  01F5               	clrf	??_I2C_Master_Read+1
  3575  1388  0874               	movf	??_I2C_Master_Read,w
  3576  1389  00F6               	movwf	I2C_Master_Read@temp
  3577  138A  0875               	movf	??_I2C_Master_Read+1,w
  3578  138B  00F7               	movwf	I2C_Master_Read@temp+1
  3579  138C                     l2707:
  3580                           
  3581                           ;I2C.c: 81:     I2C_Master_Wait();
  3582  138C  160A  118A  2280  160A  118A  	fcall	_I2C_Master_Wait
  3583  1391                     l2709:
  3584                           
  3585                           ;I2C.c: 82:     if(a == 1){
  3586  1391  0372               	decf	I2C_Master_Read@a,w
  3587  1392  0473               	iorwf	I2C_Master_Read@a+1,w
  3588  1393  1D03               	btfss	3,2
  3589  1394  2B96               	goto	u3861
  3590  1395  2B97               	goto	u3860
  3591  1396                     u3861:
  3592  1396  2B9B               	goto	l50
  3593  1397                     u3860:
  3594  1397                     l2711:
  3595                           
  3596                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3597  1397  1683               	bsf	3,5	;RP0=1, select bank1
  3598  1398  1303               	bcf	3,6	;RP1=0, select bank1
  3599  1399  1291               	bcf	17,5	;volatile
  3600                           
  3601                           ;I2C.c: 84:     }else{
  3602  139A  2B9E               	goto	l51
  3603  139B                     l50:
  3604                           
  3605                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3606  139B  1683               	bsf	3,5	;RP0=1, select bank1
  3607  139C  1303               	bcf	3,6	;RP1=0, select bank1
  3608  139D  1691               	bsf	17,5	;volatile
  3609  139E                     l51:	
  3610                           ;I2C.c: 86:     }
  3611                           
  3612                           
  3613                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3614  139E  1611               	bsf	17,4	;volatile
  3615  139F                     l2713:
  3616                           
  3617                           ;I2C.c: 88:     return temp;
  3618  139F  0877               	movf	I2C_Master_Read@temp+1,w
  3619  13A0  00F3               	movwf	?_I2C_Master_Read+1
  3620  13A1  0876               	movf	I2C_Master_Read@temp,w
  3621  13A2  00F2               	movwf	?_I2C_Master_Read
  3622  13A3                     l52:
  3623  13A3  0008               	return
  3624  13A4                     __end_of_I2C_Master_Read:
  3625                           
  3626                           	psect	text17
  3627  1280                     __ptext17:	
  3628 ;; *************** function _I2C_Master_Wait *****************
  3629 ;; Defined at:
  3630 ;;		line 32 in file "I2C.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_I2C_Master_Start
  3655 ;;		_I2C_Master_Stop
  3656 ;;		_I2C_Master_Write
  3657 ;;		_I2C_Master_Read
  3658 ;;		_I2C_Master_RepeatedStart
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           
  3663                           ;psect for function _I2C_Master_Wait
  3664  1280                     _I2C_Master_Wait:
  3665  1280                     l2171:	
  3666                           ;incstack = 0
  3667                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3668                           
  3669  1280                     l32:	
  3670                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3671                           
  3672  1280  1683               	bsf	3,5	;RP0=1, select bank1
  3673  1281  1303               	bcf	3,6	;RP1=0, select bank1
  3674  1282  1914               	btfsc	20,2	;volatile
  3675  1283  2A85               	goto	u2631
  3676  1284  2A86               	goto	u2630
  3677  1285                     u2631:
  3678  1285  2A80               	goto	l32
  3679  1286                     u2630:
  3680  1286                     l2173:
  3681  1286  0811               	movf	17,w	;volatile
  3682  1287  391F               	andlw	31
  3683  1288  1D03               	btfss	3,2
  3684  1289  2A8B               	goto	u2641
  3685  128A  2A8C               	goto	u2640
  3686  128B                     u2641:
  3687  128B  2A80               	goto	l32
  3688  128C                     u2640:
  3689  128C                     l35:
  3690  128C  0008               	return
  3691  128D                     __end_of_I2C_Master_Wait:
  3692                           
  3693                           	psect	text18
  3694  001E                     __ptext18:	
  3695 ;; *************** function _ADC_convert *****************
  3696 ;; Defined at:
  3697 ;;		line 216 in file "Lab04.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  data            1    wreg     PTR unsigned char 
  3700 ;;		 -> cont(10), adc1(10), adc0(10), 
  3701 ;;  a               4    0[BANK1 ] float 
  3702 ;;  place           2    4[BANK1 ] int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  data            1   10[BANK1 ] PTR unsigned char 
  3705 ;;		 -> cont(10), adc1(10), adc0(10), 
  3706 ;;  x               4   11[BANK1 ] float 
  3707 ;;  mu              2   19[BANK1 ] int 
  3708 ;;  digits          2   17[BANK1 ] int 
  3709 ;;  i               2   15[BANK1 ] int 
  3710 ;;  j               2    8[BANK1 ] int 
  3711 ;;  temp            2    6[BANK1 ] int 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3721 ;;      Params:         0       0       6       0       0
  3722 ;;      Locals:         0       0      15       0       0
  3723 ;;      Temps:          0       2       0       0       0
  3724 ;;      Totals:         0       2      21       0       0
  3725 ;;Total ram usage:       23 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    3
  3728 ;; This function calls:
  3729 ;;		___awdiv
  3730 ;;		___fldiv
  3731 ;;		___flge
  3732 ;;		___flmul
  3733 ;;		___flsub
  3734 ;;		___fltol
  3735 ;;		___wmul
  3736 ;;		___xxtofl
  3737 ;; This function is called by:
  3738 ;;		_main
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           
  3743                           ;psect for function _ADC_convert
  3744  001E                     _ADC_convert:
  3745                           
  3746                           ;incstack = 0
  3747                           ; Regs used in _ADC_convert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3748                           ;ADC_convert@data stored from wreg
  3749  001E  1683               	bsf	3,5	;RP0=1, select bank1
  3750  001F  1303               	bcf	3,6	;RP1=0, select bank1
  3751  0020  00DD               	movwf	ADC_convert@data^(0+128)
  3752  0021                     l3289:
  3753                           
  3754                           ;Lab04.c: 216: void ADC_convert(char *data,float a, int place);Lab04.c: 217: {;Lab04.c: 
      +                          218:      int temp=a;
  3755  0021  0856               	movf	(ADC_convert@a+3)^(0+128),w
  3756  0022  00F5               	movwf	___fltol@f1+3
  3757  0023  0855               	movf	(ADC_convert@a+2)^(0+128),w
  3758  0024  00F4               	movwf	___fltol@f1+2
  3759  0025  0854               	movf	(ADC_convert@a+1)^(0+128),w
  3760  0026  00F3               	movwf	___fltol@f1+1
  3761  0027  0853               	movf	ADC_convert@a^(0+128),w
  3762  0028  00F2               	movwf	___fltol@f1
  3763  0029  120A  158A  2007  120A  118A  	fcall	___fltol
  3764  002E  0873               	movf	?___fltol+1,w
  3765  002F  1683               	bsf	3,5	;RP0=1, select bank1
  3766  0030  1303               	bcf	3,6	;RP1=0, select bank1
  3767  0031  00DA               	movwf	(ADC_convert@temp+1)^(0+128)
  3768  0032  0872               	movf	?___fltol,w
  3769  0033  00D9               	movwf	ADC_convert@temp^(0+128)
  3770  0034                     l3291:
  3771  0034                     l3293:
  3772                           
  3773                           ;Lab04.c: 220:      int digits=0;
  3774  0034  01E4               	clrf	ADC_convert@digits^(0+128)
  3775  0035  01E5               	clrf	(ADC_convert@digits+1)^(0+128)
  3776  0036                     l3295:
  3777                           
  3778                           ;Lab04.c: 221:      int i=0,mu=1;
  3779  0036  01E2               	clrf	ADC_convert@i^(0+128)
  3780  0037  01E3               	clrf	(ADC_convert@i+1)^(0+128)
  3781  0038                     l3297:
  3782  0038  3001               	movlw	1
  3783  0039  00E6               	movwf	ADC_convert@mu^(0+128)
  3784  003A  3000               	movlw	0
  3785  003B  00E7               	movwf	(ADC_convert@mu^(0+128)+1)
  3786  003C                     l3299:
  3787  003C                     l3301:
  3788                           
  3789                           ;Lab04.c: 223:      if(a<0)
  3790  003C  0856               	movf	(ADC_convert@a+3)^(0+128),w
  3791  003D  00F5               	movwf	___flge@ff1+3
  3792  003E  0855               	movf	(ADC_convert@a+2)^(0+128),w
  3793  003F  00F4               	movwf	___flge@ff1+2
  3794  0040  0854               	movf	(ADC_convert@a+1)^(0+128),w
  3795  0041  00F3               	movwf	___flge@ff1+1
  3796  0042  0853               	movf	ADC_convert@a^(0+128),w
  3797  0043  00F2               	movwf	___flge@ff1
  3798  0044  3000               	movlw	0
  3799  0045  00F9               	movwf	___flge@ff2+3
  3800  0046  3000               	movlw	0
  3801  0047  00F8               	movwf	___flge@ff2+2
  3802  0048  3000               	movlw	0
  3803  0049  00F7               	movwf	___flge@ff2+1
  3804  004A  3000               	movlw	0
  3805  004B  00F6               	movwf	___flge@ff2
  3806  004C  160A  118A  26A0  120A  118A  	fcall	___flge
  3807  0051  1803               	btfsc	3,0
  3808  0052  2854               	goto	u4781
  3809  0053  2855               	goto	u4780
  3810  0054                     u4781:
  3811  0054  28C3               	goto	l3313
  3812  0055                     u4780:
  3813  0055                     l3303:
  3814                           
  3815                           ;Lab04.c: 224:      {;Lab04.c: 225:             a=a*-1;
  3816  0055  30BF               	movlw	191
  3817  0056  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0057  1303               	bcf	3,6	;RP1=0, select bank0
  3819  0058  00D4               	movwf	___flmul@b+3
  3820  0059  3080               	movlw	128
  3821  005A  00D3               	movwf	___flmul@b+2
  3822  005B  3000               	movlw	0
  3823  005C  00D2               	movwf	___flmul@b+1
  3824  005D  3000               	movlw	0
  3825  005E  00D1               	movwf	___flmul@b
  3826  005F  1683               	bsf	3,5	;RP0=1, select bank1
  3827  0060  1303               	bcf	3,6	;RP1=0, select bank1
  3828  0061  0856               	movf	(ADC_convert@a+3)^(0+128),w
  3829  0062  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0063  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0064  00D8               	movwf	___flmul@a+3
  3832  0065  1683               	bsf	3,5	;RP0=1, select bank1
  3833  0066  1303               	bcf	3,6	;RP1=0, select bank1
  3834  0067  0855               	movf	(ADC_convert@a+2)^(0+128),w
  3835  0068  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0069  1303               	bcf	3,6	;RP1=0, select bank0
  3837  006A  00D7               	movwf	___flmul@a+2
  3838  006B  1683               	bsf	3,5	;RP0=1, select bank1
  3839  006C  1303               	bcf	3,6	;RP1=0, select bank1
  3840  006D  0854               	movf	(ADC_convert@a+1)^(0+128),w
  3841  006E  1283               	bcf	3,5	;RP0=0, select bank0
  3842  006F  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0070  00D6               	movwf	___flmul@a+1
  3844  0071  1683               	bsf	3,5	;RP0=1, select bank1
  3845  0072  1303               	bcf	3,6	;RP1=0, select bank1
  3846  0073  0853               	movf	ADC_convert@a^(0+128),w
  3847  0074  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0075  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0076  00D5               	movwf	___flmul@a
  3850  0077  120A  118A  2480  120A  118A  	fcall	___flmul
  3851  007C  1283               	bcf	3,5	;RP0=0, select bank0
  3852  007D  1303               	bcf	3,6	;RP1=0, select bank0
  3853  007E  0854               	movf	?___flmul+3,w
  3854  007F  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0080  1303               	bcf	3,6	;RP1=0, select bank1
  3856  0081  00D6               	movwf	(ADC_convert@a+3)^(0+128)
  3857  0082  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0083  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0084  0853               	movf	?___flmul+2,w
  3860  0085  1683               	bsf	3,5	;RP0=1, select bank1
  3861  0086  1303               	bcf	3,6	;RP1=0, select bank1
  3862  0087  00D5               	movwf	(ADC_convert@a+2)^(0+128)
  3863  0088  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0089  1303               	bcf	3,6	;RP1=0, select bank0
  3865  008A  0852               	movf	?___flmul+1,w
  3866  008B  1683               	bsf	3,5	;RP0=1, select bank1
  3867  008C  1303               	bcf	3,6	;RP1=0, select bank1
  3868  008D  00D4               	movwf	(ADC_convert@a+1)^(0+128)
  3869  008E  1283               	bcf	3,5	;RP0=0, select bank0
  3870  008F  1303               	bcf	3,6	;RP1=0, select bank0
  3871  0090  0851               	movf	?___flmul,w
  3872  0091  1683               	bsf	3,5	;RP0=1, select bank1
  3873  0092  1303               	bcf	3,6	;RP1=0, select bank1
  3874  0093  00D3               	movwf	ADC_convert@a^(0+128)
  3875  0094                     l3305:
  3876                           
  3877                           ;Lab04.c: 226:             data[i]='-';
  3878  0094  302D               	movlw	45
  3879  0095  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0096  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0097  00EB               	movwf	??_ADC_convert
  3882  0098  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0099  1303               	bcf	3,6	;RP1=0, select bank1
  3884  009A  085D               	movf	ADC_convert@data^(0+128),w
  3885  009B  0084               	movwf	4
  3886  009C  1283               	bcf	3,5	;RP0=0, select bank0
  3887  009D  1303               	bcf	3,6	;RP1=0, select bank0
  3888  009E  086B               	movf	??_ADC_convert,w
  3889  009F  1383               	bcf	3,7	;select IRP bank0
  3890  00A0  0080               	movwf	0
  3891  00A1                     l3307:
  3892                           
  3893                           ;Lab04.c: 227:             i++;
  3894  00A1  3001               	movlw	1
  3895  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  3896  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  3897  00A4  07E2               	addwf	ADC_convert@i^(0+128),f
  3898  00A5  1803               	skipnc
  3899  00A6  0AE3               	incf	(ADC_convert@i+1)^(0+128),f
  3900  00A7  3000               	movlw	0
  3901  00A8  07E3               	addwf	(ADC_convert@i+1)^(0+128),f
  3902  00A9  28C3               	goto	l3313
  3903  00AA                     l3309:
  3904                           
  3905                           ;Lab04.c: 231:      {;Lab04.c: 232:          temp=temp/10;
  3906  00AA  300A               	movlw	10
  3907  00AB  00F2               	movwf	___awdiv@divisor
  3908  00AC  3000               	movlw	0
  3909  00AD  00F3               	movwf	___awdiv@divisor+1
  3910  00AE  085A               	movf	(ADC_convert@temp+1)^(0+128),w
  3911  00AF  00F5               	movwf	___awdiv@dividend+1
  3912  00B0  0859               	movf	ADC_convert@temp^(0+128),w
  3913  00B1  00F4               	movwf	___awdiv@dividend
  3914  00B2  160A  118A  2637  120A  118A  	fcall	___awdiv
  3915  00B7  0873               	movf	?___awdiv+1,w
  3916  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  3917  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  3918  00BA  00DA               	movwf	(ADC_convert@temp+1)^(0+128)
  3919  00BB  0872               	movf	?___awdiv,w
  3920  00BC  00D9               	movwf	ADC_convert@temp^(0+128)
  3921  00BD                     l3311:
  3922                           
  3923                           ;Lab04.c: 233:          digits++;
  3924  00BD  3001               	movlw	1
  3925  00BE  07E4               	addwf	ADC_convert@digits^(0+128),f
  3926  00BF  1803               	skipnc
  3927  00C0  0AE5               	incf	(ADC_convert@digits+1)^(0+128),f
  3928  00C1  3000               	movlw	0
  3929  00C2  07E5               	addwf	(ADC_convert@digits+1)^(0+128),f
  3930  00C3                     l3313:
  3931                           
  3932                           ;Lab04.c: 230:      while(temp!=0)
  3933  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  3934  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  3935  00C5  0859               	movf	ADC_convert@temp^(0+128),w
  3936  00C6  045A               	iorwf	(ADC_convert@temp+1)^(0+128),w
  3937  00C7  1D03               	btfss	3,2
  3938  00C8  28CA               	goto	u4791
  3939  00C9  28CB               	goto	u4790
  3940  00CA                     u4791:
  3941  00CA  28AA               	goto	l3309
  3942  00CB                     u4790:
  3943  00CB  2A13               	goto	l3337
  3944  00CC                     l3315:
  3945                           
  3946                           ;Lab04.c: 236:      {;Lab04.c: 237:          if(digits==1)mu=1;
  3947  00CC  0364               	decf	ADC_convert@digits^(0+128),w
  3948  00CD  0465               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3949  00CE  1D03               	btfss	3,2
  3950  00CF  28D1               	goto	u4801
  3951  00D0  28D2               	goto	u4800
  3952  00D1                     u4801:
  3953  00D1  28D7               	goto	l3319
  3954  00D2                     u4800:
  3955  00D2                     l3317:
  3956  00D2  3001               	movlw	1
  3957  00D3  00E6               	movwf	ADC_convert@mu^(0+128)
  3958  00D4  3000               	movlw	0
  3959  00D5  00E7               	movwf	(ADC_convert@mu^(0+128)+1)
  3960  00D6  2919               	goto	l3327
  3961  00D7                     l3319:
  3962  00D7  3002               	movlw	2
  3963  00D8  00DB               	movwf	ADC_convert@j^(0+128)
  3964  00D9  3000               	movlw	0
  3965  00DA  00DC               	movwf	(ADC_convert@j^(0+128)+1)
  3966  00DB  2903               	goto	l3325
  3967  00DC                     l3321:
  3968  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  3969  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  3970  00DE  0867               	movf	(ADC_convert@mu+1)^(0+128),w
  3971  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  3972  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  3973  00E1  00A6               	movwf	___wmul@multiplier+1
  3974  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  3975  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  3976  00E4  0866               	movf	ADC_convert@mu^(0+128),w
  3977  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  3978  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  3979  00E7  00A5               	movwf	___wmul@multiplier
  3980  00E8  300A               	movlw	10
  3981  00E9  00A7               	movwf	___wmul@multiplicand
  3982  00EA  3000               	movlw	0
  3983  00EB  00A8               	movwf	___wmul@multiplicand+1
  3984  00EC  160A  118A  22FA  120A  118A  	fcall	___wmul
  3985  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  3986  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  3987  00F3  0826               	movf	?___wmul+1,w
  3988  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  3989  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  3990  00F6  00E7               	movwf	(ADC_convert@mu+1)^(0+128)
  3991  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  3992  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  3993  00F9  0825               	movf	?___wmul,w
  3994  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  3995  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  3996  00FC  00E6               	movwf	ADC_convert@mu^(0+128)
  3997  00FD                     l3323:
  3998  00FD  3001               	movlw	1
  3999  00FE  07DB               	addwf	ADC_convert@j^(0+128),f
  4000  00FF  1803               	skipnc
  4001  0100  0ADC               	incf	(ADC_convert@j+1)^(0+128),f
  4002  0101  3000               	movlw	0
  4003  0102  07DC               	addwf	(ADC_convert@j+1)^(0+128),f
  4004  0103                     l3325:
  4005  0103  0865               	movf	(ADC_convert@digits+1)^(0+128),w
  4006  0104  3A80               	xorlw	128
  4007  0105  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0106  1303               	bcf	3,6	;RP1=0, select bank0
  4009  0107  00EB               	movwf	??_ADC_convert
  4010  0108  1683               	bsf	3,5	;RP0=1, select bank1
  4011  0109  1303               	bcf	3,6	;RP1=0, select bank1
  4012  010A  085C               	movf	(ADC_convert@j+1)^(0+128),w
  4013  010B  3A80               	xorlw	128
  4014  010C  1283               	bcf	3,5	;RP0=0, select bank0
  4015  010D  1303               	bcf	3,6	;RP1=0, select bank0
  4016  010E  026B               	subwf	??_ADC_convert,w
  4017  010F  1D03               	skipz
  4018  0110  2915               	goto	u4815
  4019  0111  1683               	bsf	3,5	;RP0=1, select bank1
  4020  0112  1303               	bcf	3,6	;RP1=0, select bank1
  4021  0113  085B               	movf	ADC_convert@j^(0+128),w
  4022  0114  0264               	subwf	ADC_convert@digits^(0+128),w
  4023  0115                     u4815:
  4024  0115  1803               	skipnc
  4025  0116  2918               	goto	u4811
  4026  0117  2919               	goto	u4810
  4027  0118                     u4811:
  4028  0118  28DC               	goto	l3321
  4029  0119                     u4810:
  4030  0119                     l3327:
  4031                           
  4032                           ;Lab04.c: 240:          x=a/mu;
  4033  0119  1683               	bsf	3,5	;RP0=1, select bank1
  4034  011A  1303               	bcf	3,6	;RP1=0, select bank1
  4035  011B  0866               	movf	ADC_convert@mu^(0+128),w
  4036  011C  1283               	bcf	3,5	;RP0=0, select bank0
  4037  011D  1303               	bcf	3,6	;RP1=0, select bank0
  4038  011E  00A9               	movwf	___xxtofl@val
  4039  011F  1683               	bsf	3,5	;RP0=1, select bank1
  4040  0120  1303               	bcf	3,6	;RP1=0, select bank1
  4041  0121  0867               	movf	(ADC_convert@mu+1)^(0+128),w
  4042  0122  1283               	bcf	3,5	;RP0=0, select bank0
  4043  0123  1303               	bcf	3,6	;RP1=0, select bank0
  4044  0124  00AA               	movwf	___xxtofl@val+1
  4045  0125  3000               	movlw	0
  4046  0126  1BAA               	btfsc	___xxtofl@val+1,7
  4047  0127  30FF               	movlw	255
  4048  0128  00AB               	movwf	___xxtofl@val+2
  4049  0129  00AC               	movwf	___xxtofl@val+3
  4050  012A  3001               	movlw	1
  4051  012B  160A  118A  2744  120A  118A  	fcall	___xxtofl
  4052  0130  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0131  1303               	bcf	3,6	;RP1=0, select bank0
  4054  0132  082C               	movf	?___xxtofl+3,w
  4055  0133  00BA               	movwf	___fldiv@a+3
  4056  0134  082B               	movf	?___xxtofl+2,w
  4057  0135  00B9               	movwf	___fldiv@a+2
  4058  0136  082A               	movf	?___xxtofl+1,w
  4059  0137  00B8               	movwf	___fldiv@a+1
  4060  0138  0829               	movf	?___xxtofl,w
  4061  0139  00B7               	movwf	___fldiv@a
  4062  013A  1683               	bsf	3,5	;RP0=1, select bank1
  4063  013B  1303               	bcf	3,6	;RP1=0, select bank1
  4064  013C  0856               	movf	(ADC_convert@a+3)^(0+128),w
  4065  013D  1283               	bcf	3,5	;RP0=0, select bank0
  4066  013E  1303               	bcf	3,6	;RP1=0, select bank0
  4067  013F  00BE               	movwf	___fldiv@b+3
  4068  0140  1683               	bsf	3,5	;RP0=1, select bank1
  4069  0141  1303               	bcf	3,6	;RP1=0, select bank1
  4070  0142  0855               	movf	(ADC_convert@a+2)^(0+128),w
  4071  0143  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0144  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0145  00BD               	movwf	___fldiv@b+2
  4074  0146  1683               	bsf	3,5	;RP0=1, select bank1
  4075  0147  1303               	bcf	3,6	;RP1=0, select bank1
  4076  0148  0854               	movf	(ADC_convert@a+1)^(0+128),w
  4077  0149  1283               	bcf	3,5	;RP0=0, select bank0
  4078  014A  1303               	bcf	3,6	;RP1=0, select bank0
  4079  014B  00BC               	movwf	___fldiv@b+1
  4080  014C  1683               	bsf	3,5	;RP0=1, select bank1
  4081  014D  1303               	bcf	3,6	;RP1=0, select bank1
  4082  014E  0853               	movf	ADC_convert@a^(0+128),w
  4083  014F  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0150  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0151  00BB               	movwf	___fldiv@b
  4086  0152  120A  158A  2083  120A  118A  	fcall	___fldiv
  4087  0157  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0158  1303               	bcf	3,6	;RP1=0, select bank0
  4089  0159  083A               	movf	?___fldiv+3,w
  4090  015A  1683               	bsf	3,5	;RP0=1, select bank1
  4091  015B  1303               	bcf	3,6	;RP1=0, select bank1
  4092  015C  00E1               	movwf	(ADC_convert@x+3)^(0+128)
  4093  015D  1283               	bcf	3,5	;RP0=0, select bank0
  4094  015E  1303               	bcf	3,6	;RP1=0, select bank0
  4095  015F  0839               	movf	?___fldiv+2,w
  4096  0160  1683               	bsf	3,5	;RP0=1, select bank1
  4097  0161  1303               	bcf	3,6	;RP1=0, select bank1
  4098  0162  00E0               	movwf	(ADC_convert@x+2)^(0+128)
  4099  0163  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0164  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0165  0838               	movf	?___fldiv+1,w
  4102  0166  1683               	bsf	3,5	;RP0=1, select bank1
  4103  0167  1303               	bcf	3,6	;RP1=0, select bank1
  4104  0168  00DF               	movwf	(ADC_convert@x+1)^(0+128)
  4105  0169  1283               	bcf	3,5	;RP0=0, select bank0
  4106  016A  1303               	bcf	3,6	;RP1=0, select bank0
  4107  016B  0837               	movf	?___fldiv,w
  4108  016C  1683               	bsf	3,5	;RP0=1, select bank1
  4109  016D  1303               	bcf	3,6	;RP1=0, select bank1
  4110  016E  00DE               	movwf	ADC_convert@x^(0+128)
  4111                           
  4112                           ;Lab04.c: 241:          a=a-((int)x*mu);
  4113  016F  0867               	movf	(ADC_convert@mu+1)^(0+128),w
  4114  0170  1283               	bcf	3,5	;RP0=0, select bank0
  4115  0171  1303               	bcf	3,6	;RP1=0, select bank0
  4116  0172  00A8               	movwf	___wmul@multiplicand+1
  4117  0173  1683               	bsf	3,5	;RP0=1, select bank1
  4118  0174  1303               	bcf	3,6	;RP1=0, select bank1
  4119  0175  0866               	movf	ADC_convert@mu^(0+128),w
  4120  0176  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0177  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0178  00A7               	movwf	___wmul@multiplicand
  4123  0179  1683               	bsf	3,5	;RP0=1, select bank1
  4124  017A  1303               	bcf	3,6	;RP1=0, select bank1
  4125  017B  0861               	movf	(ADC_convert@x+3)^(0+128),w
  4126  017C  00F5               	movwf	___fltol@f1+3
  4127  017D  0860               	movf	(ADC_convert@x+2)^(0+128),w
  4128  017E  00F4               	movwf	___fltol@f1+2
  4129  017F  085F               	movf	(ADC_convert@x+1)^(0+128),w
  4130  0180  00F3               	movwf	___fltol@f1+1
  4131  0181  085E               	movf	ADC_convert@x^(0+128),w
  4132  0182  00F2               	movwf	___fltol@f1
  4133  0183  120A  158A  2007  120A  118A  	fcall	___fltol
  4134  0188  0873               	movf	?___fltol+1,w
  4135  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4136  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4137  018B  00A6               	movwf	___wmul@multiplier+1
  4138  018C  0872               	movf	?___fltol,w
  4139  018D  00A5               	movwf	___wmul@multiplier
  4140  018E  160A  118A  22FA  120A  118A  	fcall	___wmul
  4141  0193  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0194  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0195  0825               	movf	?___wmul,w
  4144  0196  00A9               	movwf	___xxtofl@val
  4145  0197  0826               	movf	?___wmul+1,w
  4146  0198  00AA               	movwf	___xxtofl@val+1
  4147  0199  3000               	movlw	0
  4148  019A  1BAA               	btfsc	___xxtofl@val+1,7
  4149  019B  30FF               	movlw	255
  4150  019C  00AB               	movwf	___xxtofl@val+2
  4151  019D  00AC               	movwf	___xxtofl@val+3
  4152  019E  3001               	movlw	1
  4153  019F  160A  118A  2744  120A  118A  	fcall	___xxtofl
  4154  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  4155  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  4156  01A6  082C               	movf	?___xxtofl+3,w
  4157  01A7  00BA               	movwf	___flsub@a+3
  4158  01A8  082B               	movf	?___xxtofl+2,w
  4159  01A9  00B9               	movwf	___flsub@a+2
  4160  01AA  082A               	movf	?___xxtofl+1,w
  4161  01AB  00B8               	movwf	___flsub@a+1
  4162  01AC  0829               	movf	?___xxtofl,w
  4163  01AD  00B7               	movwf	___flsub@a
  4164  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  4165  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  4166  01B0  0856               	movf	(ADC_convert@a+3)^(0+128),w
  4167  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  4168  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  4169  01B3  00BE               	movwf	___flsub@b+3
  4170  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  4171  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  4172  01B6  0855               	movf	(ADC_convert@a+2)^(0+128),w
  4173  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  4174  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  4175  01B9  00BD               	movwf	___flsub@b+2
  4176  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  4177  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  4178  01BC  0854               	movf	(ADC_convert@a+1)^(0+128),w
  4179  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  4180  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  4181  01BF  00BC               	movwf	___flsub@b+1
  4182  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  4183  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  4184  01C2  0853               	movf	ADC_convert@a^(0+128),w
  4185  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  4186  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  4187  01C5  00BB               	movwf	___flsub@b
  4188  01C6  160A  118A  22D6  120A  118A  	fcall	___flsub
  4189  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  4190  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  4191  01CD  083A               	movf	?___flsub+3,w
  4192  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  4193  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  4194  01D0  00D6               	movwf	(ADC_convert@a+3)^(0+128)
  4195  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4196  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  4197  01D3  0839               	movf	?___flsub+2,w
  4198  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  4199  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  4200  01D6  00D5               	movwf	(ADC_convert@a+2)^(0+128)
  4201  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  4202  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  4203  01D9  0838               	movf	?___flsub+1,w
  4204  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  4205  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  4206  01DC  00D4               	movwf	(ADC_convert@a+1)^(0+128)
  4207  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  4208  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  4209  01DF  0837               	movf	?___flsub,w
  4210  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  4211  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  4212  01E2  00D3               	movwf	ADC_convert@a^(0+128)
  4213  01E3                     l3329:
  4214                           
  4215                           ;Lab04.c: 242:          data[i]=0x30+((int)x);
  4216  01E3  0861               	movf	(ADC_convert@x+3)^(0+128),w
  4217  01E4  00F5               	movwf	___fltol@f1+3
  4218  01E5  0860               	movf	(ADC_convert@x+2)^(0+128),w
  4219  01E6  00F4               	movwf	___fltol@f1+2
  4220  01E7  085F               	movf	(ADC_convert@x+1)^(0+128),w
  4221  01E8  00F3               	movwf	___fltol@f1+1
  4222  01E9  085E               	movf	ADC_convert@x^(0+128),w
  4223  01EA  00F2               	movwf	___fltol@f1
  4224  01EB  120A  158A  2007  120A  118A  	fcall	___fltol
  4225  01F0  0872               	movf	?___fltol,w
  4226  01F1  3E30               	addlw	48
  4227  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  4228  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  4229  01F4  00EB               	movwf	??_ADC_convert
  4230  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  4231  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  4232  01F7  0862               	movf	ADC_convert@i^(0+128),w
  4233  01F8  075D               	addwf	ADC_convert@data^(0+128),w
  4234  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  4235  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  4236  01FB  00EC               	movwf	??_ADC_convert+1
  4237  01FC  086C               	movf	??_ADC_convert+1,w
  4238  01FD  0084               	movwf	4
  4239  01FE  086B               	movf	??_ADC_convert,w
  4240  01FF  1383               	bcf	3,7	;select IRP bank0
  4241  0200  0080               	movwf	0
  4242  0201                     l3331:
  4243                           
  4244                           ;Lab04.c: 243:          i++;
  4245  0201  3001               	movlw	1
  4246  0202  1683               	bsf	3,5	;RP0=1, select bank1
  4247  0203  1303               	bcf	3,6	;RP1=0, select bank1
  4248  0204  07E2               	addwf	ADC_convert@i^(0+128),f
  4249  0205  1803               	skipnc
  4250  0206  0AE3               	incf	(ADC_convert@i+1)^(0+128),f
  4251  0207  3000               	movlw	0
  4252  0208  07E3               	addwf	(ADC_convert@i+1)^(0+128),f
  4253  0209                     l3333:
  4254                           
  4255                           ;Lab04.c: 244:          digits--;
  4256  0209  30FF               	movlw	255
  4257  020A  07E4               	addwf	ADC_convert@digits^(0+128),f
  4258  020B  1803               	skipnc
  4259  020C  0AE5               	incf	(ADC_convert@digits+1)^(0+128),f
  4260  020D  30FF               	movlw	255
  4261  020E  07E5               	addwf	(ADC_convert@digits+1)^(0+128),f
  4262  020F                     l3335:
  4263                           
  4264                           ;Lab04.c: 245:          mu=1;
  4265  020F  3001               	movlw	1
  4266  0210  00E6               	movwf	ADC_convert@mu^(0+128)
  4267  0211  3000               	movlw	0
  4268  0212  00E7               	movwf	(ADC_convert@mu^(0+128)+1)
  4269  0213                     l3337:
  4270                           
  4271                           ;Lab04.c: 235:      while(digits!=0)
  4272  0213  0864               	movf	ADC_convert@digits^(0+128),w
  4273  0214  0465               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4274  0215  1D03               	btfss	3,2
  4275  0216  2A18               	goto	u4821
  4276  0217  2A19               	goto	u4820
  4277  0218                     u4821:
  4278  0218  28CC               	goto	l3315
  4279  0219                     u4820:
  4280  0219                     l3339:
  4281                           
  4282                           ;Lab04.c: 248:      data[i]='.';
  4283  0219  302E               	movlw	46
  4284  021A  1283               	bcf	3,5	;RP0=0, select bank0
  4285  021B  1303               	bcf	3,6	;RP1=0, select bank0
  4286  021C  00EB               	movwf	??_ADC_convert
  4287  021D  1683               	bsf	3,5	;RP0=1, select bank1
  4288  021E  1303               	bcf	3,6	;RP1=0, select bank1
  4289  021F  0862               	movf	ADC_convert@i^(0+128),w
  4290  0220  075D               	addwf	ADC_convert@data^(0+128),w
  4291  0221  1283               	bcf	3,5	;RP0=0, select bank0
  4292  0222  1303               	bcf	3,6	;RP1=0, select bank0
  4293  0223  00EC               	movwf	??_ADC_convert+1
  4294  0224  086C               	movf	??_ADC_convert+1,w
  4295  0225  0084               	movwf	4
  4296  0226  086B               	movf	??_ADC_convert,w
  4297  0227  1383               	bcf	3,7	;select IRP bank0
  4298  0228  0080               	movwf	0
  4299  0229                     l3341:
  4300                           
  4301                           ;Lab04.c: 249:      i++;
  4302  0229  3001               	movlw	1
  4303  022A  1683               	bsf	3,5	;RP0=1, select bank1
  4304  022B  1303               	bcf	3,6	;RP1=0, select bank1
  4305  022C  07E2               	addwf	ADC_convert@i^(0+128),f
  4306  022D  1803               	skipnc
  4307  022E  0AE3               	incf	(ADC_convert@i+1)^(0+128),f
  4308  022F  3000               	movlw	0
  4309  0230  07E3               	addwf	(ADC_convert@i+1)^(0+128),f
  4310  0231                     l3343:
  4311  0231                     l3345:
  4312                           
  4313                           ;Lab04.c: 251:      for(j=1;j<=place;j++)mu=mu*10;
  4314  0231  3001               	movlw	1
  4315  0232  00DB               	movwf	ADC_convert@j^(0+128)
  4316  0233  3000               	movlw	0
  4317  0234  00DC               	movwf	(ADC_convert@j^(0+128)+1)
  4318  0235  2A5D               	goto	l3351
  4319  0236                     l3347:
  4320  0236  1683               	bsf	3,5	;RP0=1, select bank1
  4321  0237  1303               	bcf	3,6	;RP1=0, select bank1
  4322  0238  0867               	movf	(ADC_convert@mu+1)^(0+128),w
  4323  0239  1283               	bcf	3,5	;RP0=0, select bank0
  4324  023A  1303               	bcf	3,6	;RP1=0, select bank0
  4325  023B  00A6               	movwf	___wmul@multiplier+1
  4326  023C  1683               	bsf	3,5	;RP0=1, select bank1
  4327  023D  1303               	bcf	3,6	;RP1=0, select bank1
  4328  023E  0866               	movf	ADC_convert@mu^(0+128),w
  4329  023F  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0240  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0241  00A5               	movwf	___wmul@multiplier
  4332  0242  300A               	movlw	10
  4333  0243  00A7               	movwf	___wmul@multiplicand
  4334  0244  3000               	movlw	0
  4335  0245  00A8               	movwf	___wmul@multiplicand+1
  4336  0246  160A  118A  22FA  120A  118A  	fcall	___wmul
  4337  024B  1283               	bcf	3,5	;RP0=0, select bank0
  4338  024C  1303               	bcf	3,6	;RP1=0, select bank0
  4339  024D  0826               	movf	?___wmul+1,w
  4340  024E  1683               	bsf	3,5	;RP0=1, select bank1
  4341  024F  1303               	bcf	3,6	;RP1=0, select bank1
  4342  0250  00E7               	movwf	(ADC_convert@mu+1)^(0+128)
  4343  0251  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0252  1303               	bcf	3,6	;RP1=0, select bank0
  4345  0253  0825               	movf	?___wmul,w
  4346  0254  1683               	bsf	3,5	;RP0=1, select bank1
  4347  0255  1303               	bcf	3,6	;RP1=0, select bank1
  4348  0256  00E6               	movwf	ADC_convert@mu^(0+128)
  4349  0257                     l3349:
  4350  0257  3001               	movlw	1
  4351  0258  07DB               	addwf	ADC_convert@j^(0+128),f
  4352  0259  1803               	skipnc
  4353  025A  0ADC               	incf	(ADC_convert@j+1)^(0+128),f
  4354  025B  3000               	movlw	0
  4355  025C  07DC               	addwf	(ADC_convert@j+1)^(0+128),f
  4356  025D                     l3351:
  4357  025D  0858               	movf	(ADC_convert@place+1)^(0+128),w
  4358  025E  3A80               	xorlw	128
  4359  025F  1283               	bcf	3,5	;RP0=0, select bank0
  4360  0260  1303               	bcf	3,6	;RP1=0, select bank0
  4361  0261  00EB               	movwf	??_ADC_convert
  4362  0262  1683               	bsf	3,5	;RP0=1, select bank1
  4363  0263  1303               	bcf	3,6	;RP1=0, select bank1
  4364  0264  085C               	movf	(ADC_convert@j+1)^(0+128),w
  4365  0265  3A80               	xorlw	128
  4366  0266  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0267  1303               	bcf	3,6	;RP1=0, select bank0
  4368  0268  026B               	subwf	??_ADC_convert,w
  4369  0269  1D03               	skipz
  4370  026A  2A6F               	goto	u4835
  4371  026B  1683               	bsf	3,5	;RP0=1, select bank1
  4372  026C  1303               	bcf	3,6	;RP1=0, select bank1
  4373  026D  085B               	movf	ADC_convert@j^(0+128),w
  4374  026E  0257               	subwf	ADC_convert@place^(0+128),w
  4375  026F                     u4835:
  4376  026F  1803               	skipnc
  4377  0270  2A72               	goto	u4831
  4378  0271  2A73               	goto	u4830
  4379  0272                     u4831:
  4380  0272  2A36               	goto	l3347
  4381  0273                     u4830:
  4382  0273                     l3353:
  4383                           
  4384                           ;Lab04.c: 252:      x=(a-(int)a)*mu;
  4385  0273  1683               	bsf	3,5	;RP0=1, select bank1
  4386  0274  1303               	bcf	3,6	;RP1=0, select bank1
  4387  0275  0866               	movf	ADC_convert@mu^(0+128),w
  4388  0276  1283               	bcf	3,5	;RP0=0, select bank0
  4389  0277  1303               	bcf	3,6	;RP1=0, select bank0
  4390  0278  00A9               	movwf	___xxtofl@val
  4391  0279  1683               	bsf	3,5	;RP0=1, select bank1
  4392  027A  1303               	bcf	3,6	;RP1=0, select bank1
  4393  027B  0867               	movf	(ADC_convert@mu+1)^(0+128),w
  4394  027C  1283               	bcf	3,5	;RP0=0, select bank0
  4395  027D  1303               	bcf	3,6	;RP1=0, select bank0
  4396  027E  00AA               	movwf	___xxtofl@val+1
  4397  027F  3000               	movlw	0
  4398  0280  1BAA               	btfsc	___xxtofl@val+1,7
  4399  0281  30FF               	movlw	255
  4400  0282  00AB               	movwf	___xxtofl@val+2
  4401  0283  00AC               	movwf	___xxtofl@val+3
  4402  0284  3001               	movlw	1
  4403  0285  160A  118A  2744  120A  118A  	fcall	___xxtofl
  4404  028A  1283               	bcf	3,5	;RP0=0, select bank0
  4405  028B  1303               	bcf	3,6	;RP1=0, select bank0
  4406  028C  082C               	movf	?___xxtofl+3,w
  4407  028D  00D4               	movwf	___flmul@b+3
  4408  028E  082B               	movf	?___xxtofl+2,w
  4409  028F  00D3               	movwf	___flmul@b+2
  4410  0290  082A               	movf	?___xxtofl+1,w
  4411  0291  00D2               	movwf	___flmul@b+1
  4412  0292  0829               	movf	?___xxtofl,w
  4413  0293  00D1               	movwf	___flmul@b
  4414  0294  1683               	bsf	3,5	;RP0=1, select bank1
  4415  0295  1303               	bcf	3,6	;RP1=0, select bank1
  4416  0296  0856               	movf	(ADC_convert@a+3)^(0+128),w
  4417  0297  00F5               	movwf	___fltol@f1+3
  4418  0298  0855               	movf	(ADC_convert@a+2)^(0+128),w
  4419  0299  00F4               	movwf	___fltol@f1+2
  4420  029A  0854               	movf	(ADC_convert@a+1)^(0+128),w
  4421  029B  00F3               	movwf	___fltol@f1+1
  4422  029C  0853               	movf	ADC_convert@a^(0+128),w
  4423  029D  00F2               	movwf	___fltol@f1
  4424  029E  120A  158A  2007  120A  118A  	fcall	___fltol
  4425  02A3  0872               	movf	?___fltol,w
  4426  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  4427  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  4428  02A6  00A9               	movwf	___xxtofl@val
  4429  02A7  0873               	movf	?___fltol+1,w
  4430  02A8  00AA               	movwf	___xxtofl@val+1
  4431  02A9  3000               	movlw	0
  4432  02AA  1BAA               	btfsc	___xxtofl@val+1,7
  4433  02AB  30FF               	movlw	255
  4434  02AC  00AB               	movwf	___xxtofl@val+2
  4435  02AD  00AC               	movwf	___xxtofl@val+3
  4436  02AE  3001               	movlw	1
  4437  02AF  160A  118A  2744  120A  118A  	fcall	___xxtofl
  4438  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  4439  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  4440  02B6  082C               	movf	?___xxtofl+3,w
  4441  02B7  00BA               	movwf	___flsub@a+3
  4442  02B8  082B               	movf	?___xxtofl+2,w
  4443  02B9  00B9               	movwf	___flsub@a+2
  4444  02BA  082A               	movf	?___xxtofl+1,w
  4445  02BB  00B8               	movwf	___flsub@a+1
  4446  02BC  0829               	movf	?___xxtofl,w
  4447  02BD  00B7               	movwf	___flsub@a
  4448  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  4449  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  4450  02C0  0856               	movf	(ADC_convert@a+3)^(0+128),w
  4451  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  4452  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  4453  02C3  00BE               	movwf	___flsub@b+3
  4454  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  4455  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  4456  02C6  0855               	movf	(ADC_convert@a+2)^(0+128),w
  4457  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  4458  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  4459  02C9  00BD               	movwf	___flsub@b+2
  4460  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  4461  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  4462  02CC  0854               	movf	(ADC_convert@a+1)^(0+128),w
  4463  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  4464  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  4465  02CF  00BC               	movwf	___flsub@b+1
  4466  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  4467  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  4468  02D2  0853               	movf	ADC_convert@a^(0+128),w
  4469  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  4470  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  4471  02D5  00BB               	movwf	___flsub@b
  4472  02D6  160A  118A  22D6  120A  118A  	fcall	___flsub
  4473  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  4474  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  4475  02DD  083A               	movf	?___flsub+3,w
  4476  02DE  00D8               	movwf	___flmul@a+3
  4477  02DF  0839               	movf	?___flsub+2,w
  4478  02E0  00D7               	movwf	___flmul@a+2
  4479  02E1  0838               	movf	?___flsub+1,w
  4480  02E2  00D6               	movwf	___flmul@a+1
  4481  02E3  0837               	movf	?___flsub,w
  4482  02E4  00D5               	movwf	___flmul@a
  4483  02E5  120A  118A  2480  120A  118A  	fcall	___flmul
  4484  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  4485  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  4486  02EC  0854               	movf	?___flmul+3,w
  4487  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  4488  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  4489  02EF  00E1               	movwf	(ADC_convert@x+3)^(0+128)
  4490  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  4491  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  4492  02F2  0853               	movf	?___flmul+2,w
  4493  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  4494  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  4495  02F5  00E0               	movwf	(ADC_convert@x+2)^(0+128)
  4496  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  4497  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  4498  02F8  0852               	movf	?___flmul+1,w
  4499  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  4500  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  4501  02FB  00DF               	movwf	(ADC_convert@x+1)^(0+128)
  4502  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  4503  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  4504  02FE  0851               	movf	?___flmul,w
  4505  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  4506  0300  1303               	bcf	3,6	;RP1=0, select bank1
  4507  0301  00DE               	movwf	ADC_convert@x^(0+128)
  4508  0302                     l3355:
  4509                           
  4510                           ;Lab04.c: 253:      a=x;
  4511  0302  0861               	movf	(ADC_convert@x+3)^(0+128),w
  4512  0303  00D6               	movwf	(ADC_convert@a+3)^(0+128)
  4513  0304  0860               	movf	(ADC_convert@x+2)^(0+128),w
  4514  0305  00D5               	movwf	(ADC_convert@a+2)^(0+128)
  4515  0306  085F               	movf	(ADC_convert@x+1)^(0+128),w
  4516  0307  00D4               	movwf	(ADC_convert@a+1)^(0+128)
  4517  0308  085E               	movf	ADC_convert@x^(0+128),w
  4518  0309  00D3               	movwf	ADC_convert@a^(0+128)
  4519  030A                     l3357:
  4520  030A  0856               	movf	(ADC_convert@a+3)^(0+128),w
  4521  030B  00F5               	movwf	___fltol@f1+3
  4522  030C  0855               	movf	(ADC_convert@a+2)^(0+128),w
  4523  030D  00F4               	movwf	___fltol@f1+2
  4524  030E  0854               	movf	(ADC_convert@a+1)^(0+128),w
  4525  030F  00F3               	movwf	___fltol@f1+1
  4526  0310  0853               	movf	ADC_convert@a^(0+128),w
  4527  0311  00F2               	movwf	___fltol@f1
  4528  0312  120A  158A  2007  120A  118A  	fcall	___fltol
  4529  0317                     l3359:
  4530  0317                     l3361:
  4531                           
  4532                           ;Lab04.c: 256:      mu=1;
  4533  0317  3001               	movlw	1
  4534  0318  1683               	bsf	3,5	;RP0=1, select bank1
  4535  0319  1303               	bcf	3,6	;RP1=0, select bank1
  4536  031A  00E6               	movwf	ADC_convert@mu^(0+128)
  4537  031B  3000               	movlw	0
  4538  031C  00E7               	movwf	(ADC_convert@mu^(0+128)+1)
  4539  031D                     l3363:
  4540                           
  4541                           ;Lab04.c: 257:      digits=place;
  4542  031D  0858               	movf	(ADC_convert@place+1)^(0+128),w
  4543  031E  00E5               	movwf	(ADC_convert@digits+1)^(0+128)
  4544  031F  0857               	movf	ADC_convert@place^(0+128),w
  4545  0320  00E4               	movwf	ADC_convert@digits^(0+128)
  4546                           
  4547                           ;Lab04.c: 258:      while(digits!=0)
  4548  0321  2C69               	goto	l3387
  4549  0322                     l3365:
  4550                           
  4551                           ;Lab04.c: 259:      {;Lab04.c: 260:          if(digits==1)mu=1;
  4552  0322  0364               	decf	ADC_convert@digits^(0+128),w
  4553  0323  0465               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4554  0324  1D03               	btfss	3,2
  4555  0325  2B27               	goto	u4841
  4556  0326  2B28               	goto	u4840
  4557  0327                     u4841:
  4558  0327  2B2D               	goto	l3369
  4559  0328                     u4840:
  4560  0328                     l3367:
  4561  0328  3001               	movlw	1
  4562  0329  00E6               	movwf	ADC_convert@mu^(0+128)
  4563  032A  3000               	movlw	0
  4564  032B  00E7               	movwf	(ADC_convert@mu^(0+128)+1)
  4565  032C  2B6F               	goto	l3377
  4566  032D                     l3369:
  4567  032D  3002               	movlw	2
  4568  032E  00DB               	movwf	ADC_convert@j^(0+128)
  4569  032F  3000               	movlw	0
  4570  0330  00DC               	movwf	(ADC_convert@j^(0+128)+1)
  4571  0331  2B59               	goto	l3375
  4572  0332                     l3371:
  4573  0332  1683               	bsf	3,5	;RP0=1, select bank1
  4574  0333  1303               	bcf	3,6	;RP1=0, select bank1
  4575  0334  0867               	movf	(ADC_convert@mu+1)^(0+128),w
  4576  0335  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0336  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0337  00A6               	movwf	___wmul@multiplier+1
  4579  0338  1683               	bsf	3,5	;RP0=1, select bank1
  4580  0339  1303               	bcf	3,6	;RP1=0, select bank1
  4581  033A  0866               	movf	ADC_convert@mu^(0+128),w
  4582  033B  1283               	bcf	3,5	;RP0=0, select bank0
  4583  033C  1303               	bcf	3,6	;RP1=0, select bank0
  4584  033D  00A5               	movwf	___wmul@multiplier
  4585  033E  300A               	movlw	10
  4586  033F  00A7               	movwf	___wmul@multiplicand
  4587  0340  3000               	movlw	0
  4588  0341  00A8               	movwf	___wmul@multiplicand+1
  4589  0342  160A  118A  22FA  120A  118A  	fcall	___wmul
  4590  0347  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0348  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0349  0826               	movf	?___wmul+1,w
  4593  034A  1683               	bsf	3,5	;RP0=1, select bank1
  4594  034B  1303               	bcf	3,6	;RP1=0, select bank1
  4595  034C  00E7               	movwf	(ADC_convert@mu+1)^(0+128)
  4596  034D  1283               	bcf	3,5	;RP0=0, select bank0
  4597  034E  1303               	bcf	3,6	;RP1=0, select bank0
  4598  034F  0825               	movf	?___wmul,w
  4599  0350  1683               	bsf	3,5	;RP0=1, select bank1
  4600  0351  1303               	bcf	3,6	;RP1=0, select bank1
  4601  0352  00E6               	movwf	ADC_convert@mu^(0+128)
  4602  0353                     l3373:
  4603  0353  3001               	movlw	1
  4604  0354  07DB               	addwf	ADC_convert@j^(0+128),f
  4605  0355  1803               	skipnc
  4606  0356  0ADC               	incf	(ADC_convert@j+1)^(0+128),f
  4607  0357  3000               	movlw	0
  4608  0358  07DC               	addwf	(ADC_convert@j+1)^(0+128),f
  4609  0359                     l3375:
  4610  0359  0865               	movf	(ADC_convert@digits+1)^(0+128),w
  4611  035A  3A80               	xorlw	128
  4612  035B  1283               	bcf	3,5	;RP0=0, select bank0
  4613  035C  1303               	bcf	3,6	;RP1=0, select bank0
  4614  035D  00EB               	movwf	??_ADC_convert
  4615  035E  1683               	bsf	3,5	;RP0=1, select bank1
  4616  035F  1303               	bcf	3,6	;RP1=0, select bank1
  4617  0360  085C               	movf	(ADC_convert@j+1)^(0+128),w
  4618  0361  3A80               	xorlw	128
  4619  0362  1283               	bcf	3,5	;RP0=0, select bank0
  4620  0363  1303               	bcf	3,6	;RP1=0, select bank0
  4621  0364  026B               	subwf	??_ADC_convert,w
  4622  0365  1D03               	skipz
  4623  0366  2B6B               	goto	u4855
  4624  0367  1683               	bsf	3,5	;RP0=1, select bank1
  4625  0368  1303               	bcf	3,6	;RP1=0, select bank1
  4626  0369  085B               	movf	ADC_convert@j^(0+128),w
  4627  036A  0264               	subwf	ADC_convert@digits^(0+128),w
  4628  036B                     u4855:
  4629  036B  1803               	skipnc
  4630  036C  2B6E               	goto	u4851
  4631  036D  2B6F               	goto	u4850
  4632  036E                     u4851:
  4633  036E  2B32               	goto	l3371
  4634  036F                     u4850:
  4635  036F                     l3377:
  4636                           
  4637                           ;Lab04.c: 263:          x=a/mu;
  4638  036F  1683               	bsf	3,5	;RP0=1, select bank1
  4639  0370  1303               	bcf	3,6	;RP1=0, select bank1
  4640  0371  0866               	movf	ADC_convert@mu^(0+128),w
  4641  0372  1283               	bcf	3,5	;RP0=0, select bank0
  4642  0373  1303               	bcf	3,6	;RP1=0, select bank0
  4643  0374  00A9               	movwf	___xxtofl@val
  4644  0375  1683               	bsf	3,5	;RP0=1, select bank1
  4645  0376  1303               	bcf	3,6	;RP1=0, select bank1
  4646  0377  0867               	movf	(ADC_convert@mu+1)^(0+128),w
  4647  0378  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0379  1303               	bcf	3,6	;RP1=0, select bank0
  4649  037A  00AA               	movwf	___xxtofl@val+1
  4650  037B  3000               	movlw	0
  4651  037C  1BAA               	btfsc	___xxtofl@val+1,7
  4652  037D  30FF               	movlw	255
  4653  037E  00AB               	movwf	___xxtofl@val+2
  4654  037F  00AC               	movwf	___xxtofl@val+3
  4655  0380  3001               	movlw	1
  4656  0381  160A  118A  2744  120A  118A  	fcall	___xxtofl
  4657  0386  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0387  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0388  082C               	movf	?___xxtofl+3,w
  4660  0389  00BA               	movwf	___fldiv@a+3
  4661  038A  082B               	movf	?___xxtofl+2,w
  4662  038B  00B9               	movwf	___fldiv@a+2
  4663  038C  082A               	movf	?___xxtofl+1,w
  4664  038D  00B8               	movwf	___fldiv@a+1
  4665  038E  0829               	movf	?___xxtofl,w
  4666  038F  00B7               	movwf	___fldiv@a
  4667  0390  1683               	bsf	3,5	;RP0=1, select bank1
  4668  0391  1303               	bcf	3,6	;RP1=0, select bank1
  4669  0392  0856               	movf	(ADC_convert@a+3)^(0+128),w
  4670  0393  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0394  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0395  00BE               	movwf	___fldiv@b+3
  4673  0396  1683               	bsf	3,5	;RP0=1, select bank1
  4674  0397  1303               	bcf	3,6	;RP1=0, select bank1
  4675  0398  0855               	movf	(ADC_convert@a+2)^(0+128),w
  4676  0399  1283               	bcf	3,5	;RP0=0, select bank0
  4677  039A  1303               	bcf	3,6	;RP1=0, select bank0
  4678  039B  00BD               	movwf	___fldiv@b+2
  4679  039C  1683               	bsf	3,5	;RP0=1, select bank1
  4680  039D  1303               	bcf	3,6	;RP1=0, select bank1
  4681  039E  0854               	movf	(ADC_convert@a+1)^(0+128),w
  4682  039F  1283               	bcf	3,5	;RP0=0, select bank0
  4683  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  4684  03A1  00BC               	movwf	___fldiv@b+1
  4685  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  4686  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  4687  03A4  0853               	movf	ADC_convert@a^(0+128),w
  4688  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  4689  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  4690  03A7  00BB               	movwf	___fldiv@b
  4691  03A8  120A  158A  2083  120A  118A  	fcall	___fldiv
  4692  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  4693  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  4694  03AF  083A               	movf	?___fldiv+3,w
  4695  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  4696  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  4697  03B2  00E1               	movwf	(ADC_convert@x+3)^(0+128)
  4698  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  4699  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  4700  03B5  0839               	movf	?___fldiv+2,w
  4701  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  4702  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  4703  03B8  00E0               	movwf	(ADC_convert@x+2)^(0+128)
  4704  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  4705  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  4706  03BB  0838               	movf	?___fldiv+1,w
  4707  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  4708  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  4709  03BE  00DF               	movwf	(ADC_convert@x+1)^(0+128)
  4710  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  4711  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  4712  03C1  0837               	movf	?___fldiv,w
  4713  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  4714  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  4715  03C4  00DE               	movwf	ADC_convert@x^(0+128)
  4716                           
  4717                           ;Lab04.c: 264:          a=a-((int)x*mu);
  4718  03C5  0867               	movf	(ADC_convert@mu+1)^(0+128),w
  4719  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  4720  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  4721  03C8  00A8               	movwf	___wmul@multiplicand+1
  4722  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  4723  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  4724  03CB  0866               	movf	ADC_convert@mu^(0+128),w
  4725  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  4726  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  4727  03CE  00A7               	movwf	___wmul@multiplicand
  4728  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  4729  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  4730  03D1  0861               	movf	(ADC_convert@x+3)^(0+128),w
  4731  03D2  00F5               	movwf	___fltol@f1+3
  4732  03D3  0860               	movf	(ADC_convert@x+2)^(0+128),w
  4733  03D4  00F4               	movwf	___fltol@f1+2
  4734  03D5  085F               	movf	(ADC_convert@x+1)^(0+128),w
  4735  03D6  00F3               	movwf	___fltol@f1+1
  4736  03D7  085E               	movf	ADC_convert@x^(0+128),w
  4737  03D8  00F2               	movwf	___fltol@f1
  4738  03D9  120A  158A  2007  120A  118A  	fcall	___fltol
  4739  03DE  0873               	movf	?___fltol+1,w
  4740  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  4741  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  4742  03E1  00A6               	movwf	___wmul@multiplier+1
  4743  03E2  0872               	movf	?___fltol,w
  4744  03E3  00A5               	movwf	___wmul@multiplier
  4745  03E4  160A  118A  22FA  120A  118A  	fcall	___wmul
  4746  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  4747  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  4748  03EB  0825               	movf	?___wmul,w
  4749  03EC  00A9               	movwf	___xxtofl@val
  4750  03ED  0826               	movf	?___wmul+1,w
  4751  03EE  00AA               	movwf	___xxtofl@val+1
  4752  03EF  3000               	movlw	0
  4753  03F0  1BAA               	btfsc	___xxtofl@val+1,7
  4754  03F1  30FF               	movlw	255
  4755  03F2  00AB               	movwf	___xxtofl@val+2
  4756  03F3  00AC               	movwf	___xxtofl@val+3
  4757  03F4  3001               	movlw	1
  4758  03F5  160A  118A  2744  120A  118A  	fcall	___xxtofl
  4759  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  4760  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  4761  03FC  082C               	movf	?___xxtofl+3,w
  4762  03FD  00BA               	movwf	___flsub@a+3
  4763  03FE  082B               	movf	?___xxtofl+2,w
  4764  03FF  00B9               	movwf	___flsub@a+2
  4765  0400  082A               	movf	?___xxtofl+1,w
  4766  0401  00B8               	movwf	___flsub@a+1
  4767  0402  0829               	movf	?___xxtofl,w
  4768  0403  00B7               	movwf	___flsub@a
  4769  0404  1683               	bsf	3,5	;RP0=1, select bank1
  4770  0405  1303               	bcf	3,6	;RP1=0, select bank1
  4771  0406  0856               	movf	(ADC_convert@a+3)^(0+128),w
  4772  0407  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0408  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0409  00BE               	movwf	___flsub@b+3
  4775  040A  1683               	bsf	3,5	;RP0=1, select bank1
  4776  040B  1303               	bcf	3,6	;RP1=0, select bank1
  4777  040C  0855               	movf	(ADC_convert@a+2)^(0+128),w
  4778  040D  1283               	bcf	3,5	;RP0=0, select bank0
  4779  040E  1303               	bcf	3,6	;RP1=0, select bank0
  4780  040F  00BD               	movwf	___flsub@b+2
  4781  0410  1683               	bsf	3,5	;RP0=1, select bank1
  4782  0411  1303               	bcf	3,6	;RP1=0, select bank1
  4783  0412  0854               	movf	(ADC_convert@a+1)^(0+128),w
  4784  0413  1283               	bcf	3,5	;RP0=0, select bank0
  4785  0414  1303               	bcf	3,6	;RP1=0, select bank0
  4786  0415  00BC               	movwf	___flsub@b+1
  4787  0416  1683               	bsf	3,5	;RP0=1, select bank1
  4788  0417  1303               	bcf	3,6	;RP1=0, select bank1
  4789  0418  0853               	movf	ADC_convert@a^(0+128),w
  4790  0419  1283               	bcf	3,5	;RP0=0, select bank0
  4791  041A  1303               	bcf	3,6	;RP1=0, select bank0
  4792  041B  00BB               	movwf	___flsub@b
  4793  041C  160A  118A  22D6  120A  118A  	fcall	___flsub
  4794  0421  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0422  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0423  083A               	movf	?___flsub+3,w
  4797  0424  1683               	bsf	3,5	;RP0=1, select bank1
  4798  0425  1303               	bcf	3,6	;RP1=0, select bank1
  4799  0426  00D6               	movwf	(ADC_convert@a+3)^(0+128)
  4800  0427  1283               	bcf	3,5	;RP0=0, select bank0
  4801  0428  1303               	bcf	3,6	;RP1=0, select bank0
  4802  0429  0839               	movf	?___flsub+2,w
  4803  042A  1683               	bsf	3,5	;RP0=1, select bank1
  4804  042B  1303               	bcf	3,6	;RP1=0, select bank1
  4805  042C  00D5               	movwf	(ADC_convert@a+2)^(0+128)
  4806  042D  1283               	bcf	3,5	;RP0=0, select bank0
  4807  042E  1303               	bcf	3,6	;RP1=0, select bank0
  4808  042F  0838               	movf	?___flsub+1,w
  4809  0430  1683               	bsf	3,5	;RP0=1, select bank1
  4810  0431  1303               	bcf	3,6	;RP1=0, select bank1
  4811  0432  00D4               	movwf	(ADC_convert@a+1)^(0+128)
  4812  0433  1283               	bcf	3,5	;RP0=0, select bank0
  4813  0434  1303               	bcf	3,6	;RP1=0, select bank0
  4814  0435  0837               	movf	?___flsub,w
  4815  0436  1683               	bsf	3,5	;RP0=1, select bank1
  4816  0437  1303               	bcf	3,6	;RP1=0, select bank1
  4817  0438  00D3               	movwf	ADC_convert@a^(0+128)
  4818  0439                     l3379:
  4819                           
  4820                           ;Lab04.c: 265:          data[i]=0x30+((int)x);
  4821  0439  0861               	movf	(ADC_convert@x+3)^(0+128),w
  4822  043A  00F5               	movwf	___fltol@f1+3
  4823  043B  0860               	movf	(ADC_convert@x+2)^(0+128),w
  4824  043C  00F4               	movwf	___fltol@f1+2
  4825  043D  085F               	movf	(ADC_convert@x+1)^(0+128),w
  4826  043E  00F3               	movwf	___fltol@f1+1
  4827  043F  085E               	movf	ADC_convert@x^(0+128),w
  4828  0440  00F2               	movwf	___fltol@f1
  4829  0441  120A  158A  2007  120A  118A  	fcall	___fltol
  4830  0446  0872               	movf	?___fltol,w
  4831  0447  3E30               	addlw	48
  4832  0448  1283               	bcf	3,5	;RP0=0, select bank0
  4833  0449  1303               	bcf	3,6	;RP1=0, select bank0
  4834  044A  00EB               	movwf	??_ADC_convert
  4835  044B  1683               	bsf	3,5	;RP0=1, select bank1
  4836  044C  1303               	bcf	3,6	;RP1=0, select bank1
  4837  044D  0862               	movf	ADC_convert@i^(0+128),w
  4838  044E  075D               	addwf	ADC_convert@data^(0+128),w
  4839  044F  1283               	bcf	3,5	;RP0=0, select bank0
  4840  0450  1303               	bcf	3,6	;RP1=0, select bank0
  4841  0451  00EC               	movwf	??_ADC_convert+1
  4842  0452  086C               	movf	??_ADC_convert+1,w
  4843  0453  0084               	movwf	4
  4844  0454  086B               	movf	??_ADC_convert,w
  4845  0455  1383               	bcf	3,7	;select IRP bank0
  4846  0456  0080               	movwf	0
  4847  0457                     l3381:
  4848                           
  4849                           ;Lab04.c: 266:          i++;
  4850  0457  3001               	movlw	1
  4851  0458  1683               	bsf	3,5	;RP0=1, select bank1
  4852  0459  1303               	bcf	3,6	;RP1=0, select bank1
  4853  045A  07E2               	addwf	ADC_convert@i^(0+128),f
  4854  045B  1803               	skipnc
  4855  045C  0AE3               	incf	(ADC_convert@i+1)^(0+128),f
  4856  045D  3000               	movlw	0
  4857  045E  07E3               	addwf	(ADC_convert@i+1)^(0+128),f
  4858  045F                     l3383:
  4859                           
  4860                           ;Lab04.c: 267:          digits--;
  4861  045F  30FF               	movlw	255
  4862  0460  07E4               	addwf	ADC_convert@digits^(0+128),f
  4863  0461  1803               	skipnc
  4864  0462  0AE5               	incf	(ADC_convert@digits+1)^(0+128),f
  4865  0463  30FF               	movlw	255
  4866  0464  07E5               	addwf	(ADC_convert@digits+1)^(0+128),f
  4867  0465                     l3385:
  4868                           
  4869                           ;Lab04.c: 268:          mu=1;
  4870  0465  3001               	movlw	1
  4871  0466  00E6               	movwf	ADC_convert@mu^(0+128)
  4872  0467  3000               	movlw	0
  4873  0468  00E7               	movwf	(ADC_convert@mu^(0+128)+1)
  4874  0469                     l3387:
  4875                           
  4876                           ;Lab04.c: 258:      while(digits!=0)
  4877  0469  0864               	movf	ADC_convert@digits^(0+128),w
  4878  046A  0465               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4879  046B  1D03               	btfss	3,2
  4880  046C  2C6E               	goto	u4861
  4881  046D  2C6F               	goto	u4860
  4882  046E                     u4861:
  4883  046E  2B22               	goto	l3365
  4884  046F                     u4860:
  4885  046F                     l3389:
  4886                           
  4887                           ;Lab04.c: 271:     data[i]='\n';
  4888  046F  300A               	movlw	10
  4889  0470  1283               	bcf	3,5	;RP0=0, select bank0
  4890  0471  1303               	bcf	3,6	;RP1=0, select bank0
  4891  0472  00EB               	movwf	??_ADC_convert
  4892  0473  1683               	bsf	3,5	;RP0=1, select bank1
  4893  0474  1303               	bcf	3,6	;RP1=0, select bank1
  4894  0475  0862               	movf	ADC_convert@i^(0+128),w
  4895  0476  075D               	addwf	ADC_convert@data^(0+128),w
  4896  0477  1283               	bcf	3,5	;RP0=0, select bank0
  4897  0478  1303               	bcf	3,6	;RP1=0, select bank0
  4898  0479  00EC               	movwf	??_ADC_convert+1
  4899  047A  086C               	movf	??_ADC_convert+1,w
  4900  047B  0084               	movwf	4
  4901  047C  086B               	movf	??_ADC_convert,w
  4902  047D  1383               	bcf	3,7	;select IRP bank0
  4903  047E  0080               	movwf	0
  4904  047F                     l181:
  4905  047F  0008               	return
  4906  0480                     __end_of_ADC_convert:
  4907                           
  4908                           	psect	text19
  4909  1744                     __ptext19:	
  4910 ;; *************** function ___xxtofl *****************
  4911 ;; Defined at:
  4912 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  sign            1    wreg     unsigned char 
  4915 ;;  val             4    9[BANK0 ] long 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  sign            1   17[BANK0 ] unsigned char 
  4918 ;;  arg             4   19[BANK0 ] unsigned long 
  4919 ;;  exp             1   18[BANK0 ] unsigned char 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  4    9[BANK0 ] unsigned char 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4929 ;;      Params:         0       4       0       0       0
  4930 ;;      Locals:         0       6       0       0       0
  4931 ;;      Temps:          0       4       0       0       0
  4932 ;;      Totals:         0      14       0       0       0
  4933 ;;Total ram usage:       14 bytes
  4934 ;; Hardware stack levels used:    1
  4935 ;; Hardware stack levels required when called:    1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_main
  4940 ;;		_ADC_convert
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function ___xxtofl
  4946  1744                     ___xxtofl:
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4950                           ;___xxtofl@sign stored from wreg
  4951  1744  1283               	bcf	3,5	;RP0=0, select bank0
  4952  1745  1303               	bcf	3,6	;RP1=0, select bank0
  4953  1746  00B1               	movwf	___xxtofl@sign
  4954  1747                     l2645:
  4955  1747  0831               	movf	___xxtofl@sign,w
  4956  1748  1903               	btfsc	3,2
  4957  1749  2F4B               	goto	u3721
  4958  174A  2F4C               	goto	u3720
  4959  174B                     u3721:
  4960  174B  2F60               	goto	l2651
  4961  174C                     u3720:
  4962  174C                     l2647:
  4963  174C  1FAC               	btfss	___xxtofl@val+3,7
  4964  174D  2F4F               	goto	u3731
  4965  174E  2F50               	goto	u3730
  4966  174F                     u3731:
  4967  174F  2F60               	goto	l2651
  4968  1750                     u3730:
  4969  1750                     l2649:
  4970  1750  0929               	comf	___xxtofl@val,w
  4971  1751  00B3               	movwf	___xxtofl@arg
  4972  1752  092A               	comf	___xxtofl@val+1,w
  4973  1753  00B4               	movwf	___xxtofl@arg+1
  4974  1754  092B               	comf	___xxtofl@val+2,w
  4975  1755  00B5               	movwf	___xxtofl@arg+2
  4976  1756  092C               	comf	___xxtofl@val+3,w
  4977  1757  00B6               	movwf	___xxtofl@arg+3
  4978  1758  0AB3               	incf	___xxtofl@arg,f
  4979  1759  1903               	skipnz
  4980  175A  0AB4               	incf	___xxtofl@arg+1,f
  4981  175B  1903               	skipnz
  4982  175C  0AB5               	incf	___xxtofl@arg+2,f
  4983  175D  1903               	skipnz
  4984  175E  0AB6               	incf	___xxtofl@arg+3,f
  4985  175F  2F68               	goto	l758
  4986  1760                     l2651:
  4987  1760  082C               	movf	___xxtofl@val+3,w
  4988  1761  00B6               	movwf	___xxtofl@arg+3
  4989  1762  082B               	movf	___xxtofl@val+2,w
  4990  1763  00B5               	movwf	___xxtofl@arg+2
  4991  1764  082A               	movf	___xxtofl@val+1,w
  4992  1765  00B4               	movwf	___xxtofl@arg+1
  4993  1766  0829               	movf	___xxtofl@val,w
  4994  1767  00B3               	movwf	___xxtofl@arg
  4995  1768                     l758:
  4996  1768  082C               	movf	___xxtofl@val+3,w
  4997  1769  042B               	iorwf	___xxtofl@val+2,w
  4998  176A  042A               	iorwf	___xxtofl@val+1,w
  4999  176B  0429               	iorwf	___xxtofl@val,w
  5000  176C  1D03               	skipz
  5001  176D  2F6F               	goto	u3741
  5002  176E  2F70               	goto	u3740
  5003  176F                     u3741:
  5004  176F  2F79               	goto	l2657
  5005  1770                     u3740:
  5006  1770                     l2653:
  5007  1770  3000               	movlw	0
  5008  1771  00AC               	movwf	?___xxtofl+3
  5009  1772  3000               	movlw	0
  5010  1773  00AB               	movwf	?___xxtofl+2
  5011  1774  3000               	movlw	0
  5012  1775  00AA               	movwf	?___xxtofl+1
  5013  1776  3000               	movlw	0
  5014  1777  00A9               	movwf	?___xxtofl
  5015  1778  2FFF               	goto	l760
  5016  1779                     l2657:
  5017  1779  3096               	movlw	150
  5018  177A  00AD               	movwf	??___xxtofl
  5019  177B  082D               	movf	??___xxtofl,w
  5020  177C  00B2               	movwf	___xxtofl@exp
  5021  177D  2F8B               	goto	l2661
  5022  177E                     l2659:
  5023  177E  3001               	movlw	1
  5024  177F  00AD               	movwf	??___xxtofl
  5025  1780  082D               	movf	??___xxtofl,w
  5026  1781  07B2               	addwf	___xxtofl@exp,f
  5027  1782  3001               	movlw	1
  5028  1783                     u3755:
  5029  1783  1003               	clrc
  5030  1784  0CB6               	rrf	___xxtofl@arg+3,f
  5031  1785  0CB5               	rrf	___xxtofl@arg+2,f
  5032  1786  0CB4               	rrf	___xxtofl@arg+1,f
  5033  1787  0CB3               	rrf	___xxtofl@arg,f
  5034  1788  3EFF               	addlw	-1
  5035  1789  1D03               	skipz
  5036  178A  2F83               	goto	u3755
  5037  178B                     l2661:
  5038  178B  30FE               	movlw	254
  5039  178C  0536               	andwf	___xxtofl@arg+3,w
  5040  178D  1D03               	btfss	3,2
  5041  178E  2F90               	goto	u3761
  5042  178F  2F91               	goto	u3760
  5043  1790                     u3761:
  5044  1790  2F7E               	goto	l2659
  5045  1791                     u3760:
  5046  1791  2FAD               	goto	l764
  5047  1792                     l2663:
  5048  1792  3001               	movlw	1
  5049  1793  00AD               	movwf	??___xxtofl
  5050  1794  082D               	movf	??___xxtofl,w
  5051  1795  07B2               	addwf	___xxtofl@exp,f
  5052  1796                     l2665:
  5053  1796  3001               	movlw	1
  5054  1797  07B3               	addwf	___xxtofl@arg,f
  5055  1798  3000               	movlw	0
  5056  1799  1803               	skipnc
  5057  179A  3001               	movlw	1
  5058  179B  07B4               	addwf	___xxtofl@arg+1,f
  5059  179C  3000               	movlw	0
  5060  179D  1803               	skipnc
  5061  179E  3001               	movlw	1
  5062  179F  07B5               	addwf	___xxtofl@arg+2,f
  5063  17A0  3000               	movlw	0
  5064  17A1  1803               	skipnc
  5065  17A2  3001               	movlw	1
  5066  17A3  07B6               	addwf	___xxtofl@arg+3,f
  5067  17A4                     l2667:
  5068  17A4  3001               	movlw	1
  5069  17A5                     u3775:
  5070  17A5  1003               	clrc
  5071  17A6  0CB6               	rrf	___xxtofl@arg+3,f
  5072  17A7  0CB5               	rrf	___xxtofl@arg+2,f
  5073  17A8  0CB4               	rrf	___xxtofl@arg+1,f
  5074  17A9  0CB3               	rrf	___xxtofl@arg,f
  5075  17AA  3EFF               	addlw	-1
  5076  17AB  1D03               	skipz
  5077  17AC  2FA5               	goto	u3775
  5078  17AD                     l764:
  5079  17AD  30FF               	movlw	255
  5080  17AE  0536               	andwf	___xxtofl@arg+3,w
  5081  17AF  1D03               	btfss	3,2
  5082  17B0  2FB2               	goto	u3781
  5083  17B1  2FB3               	goto	u3780
  5084  17B2                     u3781:
  5085  17B2  2F92               	goto	l2663
  5086  17B3                     u3780:
  5087  17B3  2FBF               	goto	l2671
  5088  17B4                     l2669:
  5089  17B4  3001               	movlw	1
  5090  17B5  02B2               	subwf	___xxtofl@exp,f
  5091  17B6  3001               	movlw	1
  5092  17B7  00AD               	movwf	??___xxtofl
  5093  17B8                     u3795:
  5094  17B8  1003               	clrc
  5095  17B9  0DB3               	rlf	___xxtofl@arg,f
  5096  17BA  0DB4               	rlf	___xxtofl@arg+1,f
  5097  17BB  0DB5               	rlf	___xxtofl@arg+2,f
  5098  17BC  0DB6               	rlf	___xxtofl@arg+3,f
  5099  17BD  0BAD               	decfsz	??___xxtofl,f
  5100  17BE  2FB8               	goto	u3795
  5101  17BF                     l2671:
  5102  17BF  1BB5               	btfsc	___xxtofl@arg+2,7
  5103  17C0  2FC2               	goto	u3801
  5104  17C1  2FC3               	goto	u3800
  5105  17C2                     u3801:
  5106  17C2  2FC9               	goto	l771
  5107  17C3                     u3800:
  5108  17C3                     l2673:
  5109  17C3  3002               	movlw	2
  5110  17C4  0232               	subwf	___xxtofl@exp,w
  5111  17C5  1803               	skipnc
  5112  17C6  2FC8               	goto	u3811
  5113  17C7  2FC9               	goto	u3810
  5114  17C8                     u3811:
  5115  17C8  2FB4               	goto	l2669
  5116  17C9                     u3810:
  5117  17C9                     l771:
  5118  17C9  1832               	btfsc	___xxtofl@exp,0
  5119  17CA  2FCC               	goto	u3821
  5120  17CB  2FCD               	goto	u3820
  5121  17CC                     u3821:
  5122  17CC  2FD5               	goto	l772
  5123  17CD                     u3820:
  5124  17CD                     l2675:
  5125  17CD  30FF               	movlw	255
  5126  17CE  05B3               	andwf	___xxtofl@arg,f
  5127  17CF  30FF               	movlw	255
  5128  17D0  05B4               	andwf	___xxtofl@arg+1,f
  5129  17D1  307F               	movlw	127
  5130  17D2  05B5               	andwf	___xxtofl@arg+2,f
  5131  17D3  30FF               	movlw	255
  5132  17D4  05B6               	andwf	___xxtofl@arg+3,f
  5133  17D5                     l772:
  5134  17D5  1003               	clrc
  5135  17D6  0CB2               	rrf	___xxtofl@exp,f
  5136  17D7                     l2677:
  5137  17D7  0832               	movf	___xxtofl@exp,w
  5138  17D8  00AD               	movwf	??___xxtofl
  5139  17D9  01AE               	clrf	??___xxtofl+1
  5140  17DA  01AF               	clrf	??___xxtofl+2
  5141  17DB  01B0               	clrf	??___xxtofl+3
  5142  17DC  3018               	movlw	24
  5143  17DD                     u3835:
  5144  17DD  1003               	clrc
  5145  17DE  0DAD               	rlf	??___xxtofl,f
  5146  17DF  0DAE               	rlf	??___xxtofl+1,f
  5147  17E0  0DAF               	rlf	??___xxtofl+2,f
  5148  17E1  0DB0               	rlf	??___xxtofl+3,f
  5149  17E2                     u3830:
  5150  17E2  3EFF               	addlw	-1
  5151  17E3  1D03               	skipz
  5152  17E4  2FDD               	goto	u3835
  5153  17E5  082D               	movf	??___xxtofl,w
  5154  17E6  04B3               	iorwf	___xxtofl@arg,f
  5155  17E7  082E               	movf	??___xxtofl+1,w
  5156  17E8  04B4               	iorwf	___xxtofl@arg+1,f
  5157  17E9  082F               	movf	??___xxtofl+2,w
  5158  17EA  04B5               	iorwf	___xxtofl@arg+2,f
  5159  17EB  0830               	movf	??___xxtofl+3,w
  5160  17EC  04B6               	iorwf	___xxtofl@arg+3,f
  5161  17ED                     l2679:
  5162  17ED  0831               	movf	___xxtofl@sign,w
  5163  17EE  1903               	btfsc	3,2
  5164  17EF  2FF1               	goto	u3841
  5165  17F0  2FF2               	goto	u3840
  5166  17F1                     u3841:
  5167  17F1  2FF7               	goto	l2685
  5168  17F2                     u3840:
  5169  17F2                     l2681:
  5170  17F2  1FAC               	btfss	___xxtofl@val+3,7
  5171  17F3  2FF5               	goto	u3851
  5172  17F4  2FF6               	goto	u3850
  5173  17F5                     u3851:
  5174  17F5  2FF7               	goto	l2685
  5175  17F6                     u3850:
  5176  17F6                     l2683:
  5177  17F6  17B6               	bsf	___xxtofl@arg+3,7
  5178  17F7                     l2685:
  5179  17F7  0836               	movf	___xxtofl@arg+3,w
  5180  17F8  00AC               	movwf	?___xxtofl+3
  5181  17F9  0835               	movf	___xxtofl@arg+2,w
  5182  17FA  00AB               	movwf	?___xxtofl+2
  5183  17FB  0834               	movf	___xxtofl@arg+1,w
  5184  17FC  00AA               	movwf	?___xxtofl+1
  5185  17FD  0833               	movf	___xxtofl@arg,w
  5186  17FE  00A9               	movwf	?___xxtofl
  5187  17FF                     l760:
  5188  17FF  0008               	return
  5189  1800                     __end_of___xxtofl:
  5190                           
  5191                           	psect	text20
  5192  12FA                     __ptext20:	
  5193 ;; *************** function ___wmul *****************
  5194 ;; Defined at:
  5195 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  multiplier      2    5[BANK0 ] unsigned int 
  5198 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  product         2    8[COMMON] unsigned int 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  2    5[BANK0 ] unsigned int 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5210 ;;      Params:         0       4       0       0       0
  5211 ;;      Locals:         2       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0
  5213 ;;      Totals:         2       4       0       0       0
  5214 ;;Total ram usage:        6 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_ADC_convert
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           
  5225                           ;psect for function ___wmul
  5226  12FA                     ___wmul:
  5227  12FA                     l3023:	
  5228                           ;incstack = 0
  5229                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5230                           
  5231  12FA  01F8               	clrf	___wmul@product
  5232  12FB  01F9               	clrf	___wmul@product+1
  5233  12FC                     l3025:
  5234  12FC  1283               	bcf	3,5	;RP0=0, select bank0
  5235  12FD  1303               	bcf	3,6	;RP1=0, select bank0
  5236  12FE  1C25               	btfss	___wmul@multiplier,0
  5237  12FF  2B01               	goto	u4141
  5238  1300  2B02               	goto	u4140
  5239  1301                     u4141:
  5240  1301  2B08               	goto	l325
  5241  1302                     u4140:
  5242  1302                     l3027:
  5243  1302  0827               	movf	___wmul@multiplicand,w
  5244  1303  07F8               	addwf	___wmul@product,f
  5245  1304  1803               	skipnc
  5246  1305  0AF9               	incf	___wmul@product+1,f
  5247  1306  0828               	movf	___wmul@multiplicand+1,w
  5248  1307  07F9               	addwf	___wmul@product+1,f
  5249  1308                     l325:
  5250  1308  3001               	movlw	1
  5251  1309                     u4155:
  5252  1309  1003               	clrc
  5253  130A  0DA7               	rlf	___wmul@multiplicand,f
  5254  130B  0DA8               	rlf	___wmul@multiplicand+1,f
  5255  130C  3EFF               	addlw	-1
  5256  130D  1D03               	skipz
  5257  130E  2B09               	goto	u4155
  5258  130F                     l3029:
  5259  130F  3001               	movlw	1
  5260  1310                     u4165:
  5261  1310  1003               	clrc
  5262  1311  0CA6               	rrf	___wmul@multiplier+1,f
  5263  1312  0CA5               	rrf	___wmul@multiplier,f
  5264  1313  3EFF               	addlw	-1
  5265  1314  1D03               	skipz
  5266  1315  2B10               	goto	u4165
  5267  1316                     l3031:
  5268  1316  0825               	movf	___wmul@multiplier,w
  5269  1317  0426               	iorwf	___wmul@multiplier+1,w
  5270  1318  1D03               	btfss	3,2
  5271  1319  2B1B               	goto	u4171
  5272  131A  2B1C               	goto	u4170
  5273  131B                     u4171:
  5274  131B  2AFC               	goto	l3025
  5275  131C                     u4170:
  5276  131C                     l3033:
  5277  131C  0879               	movf	___wmul@product+1,w
  5278  131D  00A6               	movwf	?___wmul+1
  5279  131E  0878               	movf	___wmul@product,w
  5280  131F  00A5               	movwf	?___wmul
  5281  1320                     l327:
  5282  1320  0008               	return
  5283  1321                     __end_of___wmul:
  5284                           
  5285                           	psect	text21
  5286  0807                     __ptext21:	
  5287 ;; *************** function ___fltol *****************
  5288 ;; Defined at:
  5289 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  f1              4    2[COMMON] unsigned int 
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  exp1            1    7[COMMON] unsigned char 
  5294 ;;  sign1           1    6[COMMON] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  4    2[COMMON] long 
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5304 ;;      Params:         4       0       0       0       0
  5305 ;;      Locals:         2       0       0       0       0
  5306 ;;      Temps:          0       5       0       0       0
  5307 ;;      Totals:         6       5       0       0       0
  5308 ;;Total ram usage:       11 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    1
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_main
  5315 ;;		_ADC_convert
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           
  5320                           ;psect for function ___fltol
  5321  0807                     ___fltol:
  5322  0807                     l3081:	
  5323                           ;incstack = 0
  5324                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5325                           
  5326  0807  1003               	clrc
  5327  0808  0D74               	rlf	___fltol@f1+2,w
  5328  0809  0D75               	rlf	___fltol@f1+3,w
  5329  080A  1283               	bcf	3,5	;RP0=0, select bank0
  5330  080B  1303               	bcf	3,6	;RP1=0, select bank0
  5331  080C  00A0               	movwf	??___fltol
  5332  080D  0820               	movf	??___fltol,w
  5333  080E  00F7               	movwf	___fltol@exp1
  5334  080F  0877               	movf	___fltol@exp1,w
  5335  0810  1D03               	btfss	3,2
  5336  0811  2813               	goto	u4281
  5337  0812  2814               	goto	u4280
  5338  0813                     u4281:
  5339  0813  281D               	goto	l3087
  5340  0814                     u4280:
  5341  0814                     l3083:
  5342  0814  3000               	movlw	0
  5343  0815  00F5               	movwf	?___fltol+3
  5344  0816  3000               	movlw	0
  5345  0817  00F4               	movwf	?___fltol+2
  5346  0818  3000               	movlw	0
  5347  0819  00F3               	movwf	?___fltol+1
  5348  081A  3000               	movlw	0
  5349  081B  00F2               	movwf	?___fltol
  5350  081C  2882               	goto	l511
  5351  081D                     l3087:
  5352  081D  0872               	movf	___fltol@f1,w
  5353  081E  00A0               	movwf	??___fltol
  5354  081F  0873               	movf	___fltol@f1+1,w
  5355  0820  00A1               	movwf	??___fltol+1
  5356  0821  0874               	movf	___fltol@f1+2,w
  5357  0822  00A2               	movwf	??___fltol+2
  5358  0823  0875               	movf	___fltol@f1+3,w
  5359  0824  00A3               	movwf	??___fltol+3
  5360  0825  301F               	movlw	31
  5361  0826                     u4295:
  5362  0826  1003               	clrc
  5363  0827  0CA3               	rrf	??___fltol+3,f
  5364  0828  0CA2               	rrf	??___fltol+2,f
  5365  0829  0CA1               	rrf	??___fltol+1,f
  5366  082A  0CA0               	rrf	??___fltol,f
  5367  082B                     u4290:
  5368  082B  3EFF               	addlw	-1
  5369  082C  1D03               	skipz
  5370  082D  2826               	goto	u4295
  5371  082E  0820               	movf	??___fltol,w
  5372  082F  00A4               	movwf	??___fltol+4
  5373  0830  0824               	movf	??___fltol+4,w
  5374  0831  00F6               	movwf	___fltol@sign1
  5375  0832                     l3089:
  5376  0832  17F4               	bsf	___fltol@f1+2,7
  5377  0833                     l3091:
  5378  0833  30FF               	movlw	255
  5379  0834  05F2               	andwf	___fltol@f1,f
  5380  0835  30FF               	movlw	255
  5381  0836  05F3               	andwf	___fltol@f1+1,f
  5382  0837  30FF               	movlw	255
  5383  0838  05F4               	andwf	___fltol@f1+2,f
  5384  0839  3000               	movlw	0
  5385  083A  05F5               	andwf	___fltol@f1+3,f
  5386  083B                     l3093:
  5387  083B  3096               	movlw	150
  5388  083C  02F7               	subwf	___fltol@exp1,f
  5389  083D                     l3095:
  5390  083D  1FF7               	btfss	___fltol@exp1,7
  5391  083E  2840               	goto	u4301
  5392  083F  2841               	goto	u4300
  5393  0840                     u4301:
  5394  0840  285B               	goto	l3105
  5395  0841                     u4300:
  5396  0841                     l3097:
  5397  0841  0877               	movf	___fltol@exp1,w
  5398  0842  3A80               	xorlw	128
  5399  0843  3E97               	addlw	151
  5400  0844  1803               	skipnc
  5401  0845  2847               	goto	u4311
  5402  0846  2848               	goto	u4310
  5403  0847                     u4311:
  5404  0847  2849               	goto	l3103
  5405  0848                     u4310:
  5406  0848  2814               	goto	l3083
  5407  0849                     l3103:
  5408  0849  3001               	movlw	1
  5409  084A                     u4325:
  5410  084A  1003               	clrc
  5411  084B  0CF5               	rrf	___fltol@f1+3,f
  5412  084C  0CF4               	rrf	___fltol@f1+2,f
  5413  084D  0CF3               	rrf	___fltol@f1+1,f
  5414  084E  0CF2               	rrf	___fltol@f1,f
  5415  084F  3EFF               	addlw	-1
  5416  0850  1D03               	skipz
  5417  0851  284A               	goto	u4325
  5418  0852  3001               	movlw	1
  5419  0853  00A0               	movwf	??___fltol
  5420  0854  0820               	movf	??___fltol,w
  5421  0855  07F7               	addwf	___fltol@exp1,f
  5422  0856  1D03               	btfss	3,2
  5423  0857  2859               	goto	u4331
  5424  0858  285A               	goto	u4330
  5425  0859                     u4331:
  5426  0859  2849               	goto	l3103
  5427  085A                     u4330:
  5428  085A  2872               	goto	l3113
  5429  085B                     l3105:
  5430  085B  3020               	movlw	32
  5431  085C  0277               	subwf	___fltol@exp1,w
  5432  085D  1C03               	skipc
  5433  085E  2860               	goto	u4341
  5434  085F  2861               	goto	u4340
  5435  0860                     u4341:
  5436  0860  286D               	goto	l518
  5437  0861                     u4340:
  5438  0861  2814               	goto	l3083
  5439  0862                     l3111:
  5440  0862  3001               	movlw	1
  5441  0863  00A0               	movwf	??___fltol
  5442  0864                     u4355:
  5443  0864  1003               	clrc
  5444  0865  0DF2               	rlf	___fltol@f1,f
  5445  0866  0DF3               	rlf	___fltol@f1+1,f
  5446  0867  0DF4               	rlf	___fltol@f1+2,f
  5447  0868  0DF5               	rlf	___fltol@f1+3,f
  5448  0869  0BA0               	decfsz	??___fltol,f
  5449  086A  2864               	goto	u4355
  5450  086B  3001               	movlw	1
  5451  086C  02F7               	subwf	___fltol@exp1,f
  5452  086D                     l518:
  5453  086D  0877               	movf	___fltol@exp1,w
  5454  086E  1D03               	btfss	3,2
  5455  086F  2871               	goto	u4361
  5456  0870  2872               	goto	u4360
  5457  0871                     u4361:
  5458  0871  2862               	goto	l3111
  5459  0872                     u4360:
  5460  0872                     l3113:
  5461  0872  0876               	movf	___fltol@sign1,w
  5462  0873  1903               	btfsc	3,2
  5463  0874  2876               	goto	u4371
  5464  0875  2877               	goto	u4370
  5465  0876                     u4371:
  5466  0876  2882               	goto	l521
  5467  0877                     u4370:
  5468  0877                     l3115:
  5469  0877  09F2               	comf	___fltol@f1,f
  5470  0878  09F3               	comf	___fltol@f1+1,f
  5471  0879  09F4               	comf	___fltol@f1+2,f
  5472  087A  09F5               	comf	___fltol@f1+3,f
  5473  087B  0AF2               	incf	___fltol@f1,f
  5474  087C  1903               	skipnz
  5475  087D  0AF3               	incf	___fltol@f1+1,f
  5476  087E  1903               	skipnz
  5477  087F  0AF4               	incf	___fltol@f1+2,f
  5478  0880  1903               	skipnz
  5479  0881  0AF5               	incf	___fltol@f1+3,f
  5480  0882                     l521:
  5481  0882                     l511:
  5482  0882  0008               	return
  5483  0883                     __end_of___fltol:
  5484                           
  5485                           	psect	text22
  5486  12D6                     __ptext22:	
  5487 ;; *************** function ___flsub *****************
  5488 ;; Defined at:
  5489 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  a               4   23[BANK0 ] long 
  5492 ;;  b               4   27[BANK0 ] long 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  4   23[BANK0 ] long 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5504 ;;      Params:         0       8       0       0       0
  5505 ;;      Locals:         0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0
  5507 ;;      Totals:         0       8       0       0       0
  5508 ;;Total ram usage:        8 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    2
  5511 ;; This function calls:
  5512 ;;		___fladd
  5513 ;; This function is called by:
  5514 ;;		_ADC_convert
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function ___flsub
  5520  12D6                     ___flsub:
  5521  12D6                     l2357:	
  5522                           ;incstack = 0
  5523                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5524                           
  5525  12D6  3080               	movlw	128
  5526  12D7  1283               	bcf	3,5	;RP0=0, select bank0
  5527  12D8  1303               	bcf	3,6	;RP1=0, select bank0
  5528  12D9  06BA               	xorwf	___flsub@a+3,f
  5529  12DA                     l2359:
  5530  12DA  083E               	movf	___flsub@b+3,w
  5531  12DB  00F5               	movwf	___fladd@b+3
  5532  12DC  083D               	movf	___flsub@b+2,w
  5533  12DD  00F4               	movwf	___fladd@b+2
  5534  12DE  083C               	movf	___flsub@b+1,w
  5535  12DF  00F3               	movwf	___fladd@b+1
  5536  12E0  083B               	movf	___flsub@b,w
  5537  12E1  00F2               	movwf	___fladd@b
  5538  12E2  083A               	movf	___flsub@a+3,w
  5539  12E3  00F9               	movwf	___fladd@a+3
  5540  12E4  0839               	movf	___flsub@a+2,w
  5541  12E5  00F8               	movwf	___fladd@a+2
  5542  12E6  0838               	movf	___flsub@a+1,w
  5543  12E7  00F7               	movwf	___fladd@a+1
  5544  12E8  0837               	movf	___flsub@a,w
  5545  12E9  00F6               	movwf	___fladd@a
  5546  12EA  120A  158A  2260  160A  118A  	fcall	___fladd
  5547  12EF  0875               	movf	?___fladd+3,w
  5548  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  5549  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  5550  12F2  00BA               	movwf	?___flsub+3
  5551  12F3  0874               	movf	?___fladd+2,w
  5552  12F4  00B9               	movwf	?___flsub+2
  5553  12F5  0873               	movf	?___fladd+1,w
  5554  12F6  00B8               	movwf	?___flsub+1
  5555  12F7  0872               	movf	?___fladd,w
  5556  12F8  00B7               	movwf	?___flsub
  5557  12F9                     l664:
  5558  12F9  0008               	return
  5559  12FA                     __end_of___flsub:
  5560                           
  5561                           	psect	text23
  5562  0A60                     __ptext23:	
  5563 ;; *************** function ___fladd *****************
  5564 ;; Defined at:
  5565 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  b               4    2[COMMON] long 
  5568 ;;  a               4    6[COMMON] long 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  grs             1   11[BANK0 ] unsigned char 
  5571 ;;  bexp            1   10[BANK0 ] unsigned char 
  5572 ;;  aexp            1    9[BANK0 ] unsigned char 
  5573 ;;  signs           1    8[BANK0 ] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  4    2[COMMON] unsigned char 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, btemp+1
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         8       0       0       0       0
  5584 ;;      Locals:         0       4       0       0       0
  5585 ;;      Temps:          0       8       0       0       0
  5586 ;;      Totals:         8      12       0       0       0
  5587 ;;Total ram usage:       20 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    1
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		___flsub
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           
  5598                           ;psect for function ___fladd
  5599  0A60                     ___fladd:
  5600  0A60                     l1951:	
  5601                           ;incstack = 0
  5602                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5603                           
  5604  0A60  0875               	movf	___fladd@b+3,w
  5605  0A61  3980               	andlw	128
  5606  0A62  1283               	bcf	3,5	;RP0=0, select bank0
  5607  0A63  1303               	bcf	3,6	;RP1=0, select bank0
  5608  0A64  00A0               	movwf	??___fladd
  5609  0A65  0820               	movf	??___fladd,w
  5610  0A66  00A8               	movwf	___fladd@signs
  5611  0A67                     l1953:
  5612  0A67  0875               	movf	___fladd@b+3,w
  5613  0A68  00A0               	movwf	??___fladd
  5614  0A69  0720               	addwf	??___fladd,w
  5615  0A6A  00A1               	movwf	??___fladd+1
  5616  0A6B  0821               	movf	??___fladd+1,w
  5617  0A6C  00AA               	movwf	___fladd@bexp
  5618  0A6D                     l1955:
  5619  0A6D  1FF4               	btfss	___fladd@b+2,7
  5620  0A6E  2A70               	goto	u2131
  5621  0A6F  2A71               	goto	u2130
  5622  0A70                     u2131:
  5623  0A70  2A72               	goto	l1959
  5624  0A71                     u2130:
  5625  0A71                     l1957:
  5626  0A71  142A               	bsf	___fladd@bexp,0
  5627  0A72                     l1959:
  5628  0A72  082A               	movf	___fladd@bexp,w
  5629  0A73  1903               	btfsc	3,2
  5630  0A74  2A76               	goto	u2141
  5631  0A75  2A77               	goto	u2140
  5632  0A76                     u2141:
  5633  0A76  2A87               	goto	l1969
  5634  0A77                     u2140:
  5635  0A77                     l1961:
  5636  0A77  0A2A               	incf	___fladd@bexp,w
  5637  0A78  1D03               	btfss	3,2
  5638  0A79  2A7B               	goto	u2151
  5639  0A7A  2A7C               	goto	u2150
  5640  0A7B                     u2151:
  5641  0A7B  2A84               	goto	l1965
  5642  0A7C                     u2150:
  5643  0A7C                     l1963:
  5644  0A7C  3000               	movlw	0
  5645  0A7D  00F5               	movwf	___fladd@b+3
  5646  0A7E  3000               	movlw	0
  5647  0A7F  00F4               	movwf	___fladd@b+2
  5648  0A80  3000               	movlw	0
  5649  0A81  00F3               	movwf	___fladd@b+1
  5650  0A82  3000               	movlw	0
  5651  0A83  00F2               	movwf	___fladd@b
  5652  0A84                     l1965:
  5653  0A84  17F4               	bsf	___fladd@b+2,7
  5654  0A85                     l1967:
  5655  0A85  01F5               	clrf	___fladd@b+3
  5656  0A86  2A8F               	goto	l1971
  5657  0A87                     l1969:
  5658  0A87  3000               	movlw	0
  5659  0A88  00F5               	movwf	___fladd@b+3
  5660  0A89  3000               	movlw	0
  5661  0A8A  00F4               	movwf	___fladd@b+2
  5662  0A8B  3000               	movlw	0
  5663  0A8C  00F3               	movwf	___fladd@b+1
  5664  0A8D  3000               	movlw	0
  5665  0A8E  00F2               	movwf	___fladd@b
  5666  0A8F                     l1971:
  5667  0A8F  0879               	movf	___fladd@a+3,w
  5668  0A90  3980               	andlw	128
  5669  0A91  00A0               	movwf	??___fladd
  5670  0A92  0820               	movf	??___fladd,w
  5671  0A93  00A9               	movwf	___fladd@aexp
  5672  0A94                     l1973:
  5673  0A94  0829               	movf	___fladd@aexp,w
  5674  0A95  0628               	xorwf	___fladd@signs,w
  5675  0A96  1903               	skipnz
  5676  0A97  2A99               	goto	u2161
  5677  0A98  2A9A               	goto	u2160
  5678  0A99                     u2161:
  5679  0A99  2A9B               	goto	l1977
  5680  0A9A                     u2160:
  5681  0A9A                     l1975:
  5682  0A9A  1728               	bsf	___fladd@signs,6
  5683  0A9B                     l1977:
  5684  0A9B  0879               	movf	___fladd@a+3,w
  5685  0A9C  00A0               	movwf	??___fladd
  5686  0A9D  0720               	addwf	??___fladd,w
  5687  0A9E  00A1               	movwf	??___fladd+1
  5688  0A9F  0821               	movf	??___fladd+1,w
  5689  0AA0  00A9               	movwf	___fladd@aexp
  5690  0AA1                     l1979:
  5691  0AA1  1FF8               	btfss	___fladd@a+2,7
  5692  0AA2  2AA4               	goto	u2171
  5693  0AA3  2AA5               	goto	u2170
  5694  0AA4                     u2171:
  5695  0AA4  2AA6               	goto	l1983
  5696  0AA5                     u2170:
  5697  0AA5                     l1981:
  5698  0AA5  1429               	bsf	___fladd@aexp,0
  5699  0AA6                     l1983:
  5700  0AA6  0829               	movf	___fladd@aexp,w
  5701  0AA7  1903               	btfsc	3,2
  5702  0AA8  2AAA               	goto	u2181
  5703  0AA9  2AAB               	goto	u2180
  5704  0AAA                     u2181:
  5705  0AAA  2ABB               	goto	l1993
  5706  0AAB                     u2180:
  5707  0AAB                     l1985:
  5708  0AAB  0A29               	incf	___fladd@aexp,w
  5709  0AAC  1D03               	btfss	3,2
  5710  0AAD  2AAF               	goto	u2191
  5711  0AAE  2AB0               	goto	u2190
  5712  0AAF                     u2191:
  5713  0AAF  2AB8               	goto	l1989
  5714  0AB0                     u2190:
  5715  0AB0                     l1987:
  5716  0AB0  3000               	movlw	0
  5717  0AB1  00F9               	movwf	___fladd@a+3
  5718  0AB2  3000               	movlw	0
  5719  0AB3  00F8               	movwf	___fladd@a+2
  5720  0AB4  3000               	movlw	0
  5721  0AB5  00F7               	movwf	___fladd@a+1
  5722  0AB6  3000               	movlw	0
  5723  0AB7  00F6               	movwf	___fladd@a
  5724  0AB8                     l1989:
  5725  0AB8  17F8               	bsf	___fladd@a+2,7
  5726  0AB9                     l1991:
  5727  0AB9  01F9               	clrf	___fladd@a+3
  5728  0ABA  2AC3               	goto	l618
  5729  0ABB                     l1993:
  5730  0ABB  3000               	movlw	0
  5731  0ABC  00F9               	movwf	___fladd@a+3
  5732  0ABD  3000               	movlw	0
  5733  0ABE  00F8               	movwf	___fladd@a+2
  5734  0ABF  3000               	movlw	0
  5735  0AC0  00F7               	movwf	___fladd@a+1
  5736  0AC1  3000               	movlw	0
  5737  0AC2  00F6               	movwf	___fladd@a
  5738  0AC3                     l618:
  5739  0AC3  082A               	movf	___fladd@bexp,w
  5740  0AC4  0229               	subwf	___fladd@aexp,w
  5741  0AC5  1803               	skipnc
  5742  0AC6  2AC8               	goto	u2201
  5743  0AC7  2AC9               	goto	u2200
  5744  0AC8                     u2201:
  5745  0AC8  2B0D               	goto	l2029
  5746  0AC9                     u2200:
  5747  0AC9                     l1995:
  5748  0AC9  1F28               	btfss	___fladd@signs,6
  5749  0ACA  2ACC               	goto	u2211
  5750  0ACB  2ACD               	goto	u2210
  5751  0ACC                     u2211:
  5752  0ACC  2AD1               	goto	l1999
  5753  0ACD                     u2210:
  5754  0ACD                     l1997:
  5755  0ACD  3080               	movlw	128
  5756  0ACE  00A0               	movwf	??___fladd
  5757  0ACF  0820               	movf	??___fladd,w
  5758  0AD0  06A8               	xorwf	___fladd@signs,f
  5759  0AD1                     l1999:
  5760  0AD1  082A               	movf	___fladd@bexp,w
  5761  0AD2  00A0               	movwf	??___fladd
  5762  0AD3  0820               	movf	??___fladd,w
  5763  0AD4  00AB               	movwf	___fladd@grs
  5764  0AD5                     l2001:
  5765  0AD5  0829               	movf	___fladd@aexp,w
  5766  0AD6  00A0               	movwf	??___fladd
  5767  0AD7  0820               	movf	??___fladd,w
  5768  0AD8  00AA               	movwf	___fladd@bexp
  5769  0AD9                     l2003:
  5770  0AD9  082B               	movf	___fladd@grs,w
  5771  0ADA  00A0               	movwf	??___fladd
  5772  0ADB  0820               	movf	??___fladd,w
  5773  0ADC  00A9               	movwf	___fladd@aexp
  5774  0ADD                     l2005:
  5775  0ADD  0872               	movf	___fladd@b,w
  5776  0ADE  00A0               	movwf	??___fladd
  5777  0ADF  0820               	movf	??___fladd,w
  5778  0AE0  00AB               	movwf	___fladd@grs
  5779  0AE1                     l2007:
  5780  0AE1  0876               	movf	___fladd@a,w
  5781  0AE2  00A0               	movwf	??___fladd
  5782  0AE3  0820               	movf	??___fladd,w
  5783  0AE4  00F2               	movwf	___fladd@b
  5784  0AE5                     l2009:
  5785  0AE5  082B               	movf	___fladd@grs,w
  5786  0AE6  00A0               	movwf	??___fladd
  5787  0AE7  0820               	movf	??___fladd,w
  5788  0AE8  00F6               	movwf	___fladd@a
  5789  0AE9                     l2011:
  5790  0AE9  0873               	movf	___fladd@b+1,w
  5791  0AEA  00A0               	movwf	??___fladd
  5792  0AEB  0820               	movf	??___fladd,w
  5793  0AEC  00AB               	movwf	___fladd@grs
  5794  0AED                     l2013:
  5795  0AED  0877               	movf	___fladd@a+1,w
  5796  0AEE  00A0               	movwf	??___fladd
  5797  0AEF  0820               	movf	??___fladd,w
  5798  0AF0  00F3               	movwf	___fladd@b+1
  5799  0AF1                     l2015:
  5800  0AF1  082B               	movf	___fladd@grs,w
  5801  0AF2  00A0               	movwf	??___fladd
  5802  0AF3  0820               	movf	??___fladd,w
  5803  0AF4  00F7               	movwf	___fladd@a+1
  5804  0AF5                     l2017:
  5805  0AF5  0874               	movf	___fladd@b+2,w
  5806  0AF6  00A0               	movwf	??___fladd
  5807  0AF7  0820               	movf	??___fladd,w
  5808  0AF8  00AB               	movwf	___fladd@grs
  5809  0AF9                     l2019:
  5810  0AF9  0878               	movf	___fladd@a+2,w
  5811  0AFA  00A0               	movwf	??___fladd
  5812  0AFB  0820               	movf	??___fladd,w
  5813  0AFC  00F4               	movwf	___fladd@b+2
  5814  0AFD                     l2021:
  5815  0AFD  082B               	movf	___fladd@grs,w
  5816  0AFE  00A0               	movwf	??___fladd
  5817  0AFF  0820               	movf	??___fladd,w
  5818  0B00  00F8               	movwf	___fladd@a+2
  5819  0B01                     l2023:
  5820  0B01  0875               	movf	___fladd@b+3,w
  5821  0B02  00A0               	movwf	??___fladd
  5822  0B03  0820               	movf	??___fladd,w
  5823  0B04  00AB               	movwf	___fladd@grs
  5824  0B05                     l2025:
  5825  0B05  0879               	movf	___fladd@a+3,w
  5826  0B06  00A0               	movwf	??___fladd
  5827  0B07  0820               	movf	??___fladd,w
  5828  0B08  00F5               	movwf	___fladd@b+3
  5829  0B09                     l2027:
  5830  0B09  082B               	movf	___fladd@grs,w
  5831  0B0A  00A0               	movwf	??___fladd
  5832  0B0B  0820               	movf	??___fladd,w
  5833  0B0C  00F9               	movwf	___fladd@a+3
  5834  0B0D                     l2029:
  5835  0B0D  01AB               	clrf	___fladd@grs
  5836  0B0E                     l2031:
  5837  0B0E  0829               	movf	___fladd@aexp,w
  5838  0B0F  00A0               	movwf	??___fladd
  5839  0B10  01A1               	clrf	??___fladd+1
  5840  0B11  0821               	movf	??___fladd+1,w
  5841  0B12  00A3               	movwf	??___fladd+3
  5842  0B13  082A               	movf	___fladd@bexp,w
  5843  0B14  0220               	subwf	??___fladd,w
  5844  0B15  00A2               	movwf	??___fladd+2
  5845  0B16  1C03               	skipc
  5846  0B17  03A3               	decf	??___fladd+3,f
  5847  0B18  0823               	movf	??___fladd+3,w
  5848  0B19  3A80               	xorlw	128
  5849  0B1A  00FF               	movwf	btemp+1
  5850  0B1B  3080               	movlw	128
  5851  0B1C  027F               	subwf	btemp+1,w
  5852  0B1D  1D03               	skipz
  5853  0B1E  2B21               	goto	u2225
  5854  0B1F  301A               	movlw	26
  5855  0B20  0222               	subwf	??___fladd+2,w
  5856  0B21                     u2225:
  5857  0B21  1C03               	skipc
  5858  0B22  2B24               	goto	u2221
  5859  0B23  2B25               	goto	u2220
  5860  0B24                     u2221:
  5861  0B24  2B62               	goto	l2047
  5862  0B25                     u2220:
  5863  0B25                     l2033:
  5864  0B25  0875               	movf	___fladd@b+3,w
  5865  0B26  0474               	iorwf	___fladd@b+2,w
  5866  0B27  0473               	iorwf	___fladd@b+1,w
  5867  0B28  0472               	iorwf	___fladd@b,w
  5868  0B29  1D03               	skipz
  5869  0B2A  2B2C               	goto	u2231
  5870  0B2B  2B2E               	goto	u2230
  5871  0B2C                     u2231:
  5872  0B2C  3001               	movlw	1
  5873  0B2D  2B2F               	goto	u2240
  5874  0B2E                     u2230:
  5875  0B2E  3000               	movlw	0
  5876  0B2F                     u2240:
  5877  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  5878  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  5879  0B31  00A0               	movwf	??___fladd
  5880  0B32  0820               	movf	??___fladd,w
  5881  0B33  00AB               	movwf	___fladd@grs
  5882  0B34  3000               	movlw	0
  5883  0B35  00F5               	movwf	___fladd@b+3
  5884  0B36  3000               	movlw	0
  5885  0B37  00F4               	movwf	___fladd@b+2
  5886  0B38  3000               	movlw	0
  5887  0B39  00F3               	movwf	___fladd@b+1
  5888  0B3A  3000               	movlw	0
  5889  0B3B  00F2               	movwf	___fladd@b
  5890  0B3C  0829               	movf	___fladd@aexp,w
  5891  0B3D  00A0               	movwf	??___fladd
  5892  0B3E  0820               	movf	??___fladd,w
  5893  0B3F  00AA               	movwf	___fladd@bexp
  5894  0B40  2B6A               	goto	l622
  5895  0B41                     l624:
  5896  0B41  1C2B               	btfss	___fladd@grs,0
  5897  0B42  2B44               	goto	u2251
  5898  0B43  2B45               	goto	u2250
  5899  0B44                     u2251:
  5900  0B44  2B4E               	goto	l2037
  5901  0B45                     u2250:
  5902  0B45                     l2035:
  5903  0B45  082B               	movf	___fladd@grs,w
  5904  0B46  00A0               	movwf	??___fladd
  5905  0B47  1003               	clrc
  5906  0B48  0C20               	rrf	??___fladd,w
  5907  0B49  3801               	iorlw	1
  5908  0B4A  00A1               	movwf	??___fladd+1
  5909  0B4B  0821               	movf	??___fladd+1,w
  5910  0B4C  00AB               	movwf	___fladd@grs
  5911  0B4D  2B50               	goto	l2039
  5912  0B4E                     l2037:
  5913  0B4E  1003               	clrc
  5914  0B4F  0CAB               	rrf	___fladd@grs,f
  5915  0B50                     l2039:
  5916  0B50  1C72               	btfss	___fladd@b,0
  5917  0B51  2B53               	goto	u2261
  5918  0B52  2B54               	goto	u2260
  5919  0B53                     u2261:
  5920  0B53  2B55               	goto	l2043
  5921  0B54                     u2260:
  5922  0B54                     l2041:
  5923  0B54  17AB               	bsf	___fladd@grs,7
  5924  0B55                     l2043:
  5925  0B55  3001               	movlw	1
  5926  0B56  00A0               	movwf	??___fladd
  5927  0B57                     u2275:
  5928  0B57  0D75               	rlf	___fladd@b+3,w
  5929  0B58  0CF5               	rrf	___fladd@b+3,f
  5930  0B59  0CF4               	rrf	___fladd@b+2,f
  5931  0B5A  0CF3               	rrf	___fladd@b+1,f
  5932  0B5B  0CF2               	rrf	___fladd@b,f
  5933  0B5C  0BA0               	decfsz	??___fladd& (0+127),f
  5934  0B5D  2B57               	goto	u2275
  5935  0B5E                     l2045:
  5936  0B5E  3001               	movlw	1
  5937  0B5F  00A0               	movwf	??___fladd
  5938  0B60  0820               	movf	??___fladd,w
  5939  0B61  07AA               	addwf	___fladd@bexp,f
  5940  0B62                     l2047:
  5941  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  5943  0B64  0829               	movf	___fladd@aexp,w
  5944  0B65  022A               	subwf	___fladd@bexp,w
  5945  0B66  1C03               	skipc
  5946  0B67  2B69               	goto	u2281
  5947  0B68  2B6A               	goto	u2280
  5948  0B69                     u2281:
  5949  0B69  2B41               	goto	l624
  5950  0B6A                     u2280:
  5951  0B6A                     l622:
  5952  0B6A  1B28               	btfsc	___fladd@signs,6
  5953  0B6B  2B6D               	goto	u2291
  5954  0B6C  2B6E               	goto	u2290
  5955  0B6D                     u2291:
  5956  0B6D  2BB9               	goto	l2073
  5957  0B6E                     u2290:
  5958  0B6E                     l2049:
  5959  0B6E  082A               	movf	___fladd@bexp,w
  5960  0B6F  1D03               	btfss	3,2
  5961  0B70  2B72               	goto	u2301
  5962  0B71  2B73               	goto	u2300
  5963  0B72                     u2301:
  5964  0B72  2B7C               	goto	l2055
  5965  0B73                     u2300:
  5966  0B73                     l2051:
  5967  0B73  3000               	movlw	0
  5968  0B74  00F5               	movwf	?___fladd+3
  5969  0B75  3000               	movlw	0
  5970  0B76  00F4               	movwf	?___fladd+2
  5971  0B77  3000               	movlw	0
  5972  0B78  00F3               	movwf	?___fladd+1
  5973  0B79  3000               	movlw	0
  5974  0B7A  00F2               	movwf	?___fladd
  5975  0B7B  2CE7               	goto	l631
  5976  0B7C                     l2055:
  5977  0B7C  0876               	movf	___fladd@a,w
  5978  0B7D  07F2               	addwf	___fladd@b,f
  5979  0B7E  0877               	movf	___fladd@a+1,w
  5980  0B7F  1103               	clrz
  5981  0B80  1803               	skipnc
  5982  0B81  3E01               	addlw	1
  5983  0B82  1903               	skipnz
  5984  0B83  2B85               	goto	u2311
  5985  0B84  07F3               	addwf	___fladd@b+1,f
  5986  0B85                     u2311:
  5987  0B85  0878               	movf	___fladd@a+2,w
  5988  0B86  1103               	clrz
  5989  0B87  1803               	skipnc
  5990  0B88  3E01               	addlw	1
  5991  0B89  1903               	skipnz
  5992  0B8A  2B8C               	goto	u2312
  5993  0B8B  07F4               	addwf	___fladd@b+2,f
  5994  0B8C                     u2312:
  5995  0B8C  0879               	movf	___fladd@a+3,w
  5996  0B8D  1103               	clrz
  5997  0B8E  1803               	skipnc
  5998  0B8F  3E01               	addlw	1
  5999  0B90  1903               	skipnz
  6000  0B91  2B93               	goto	u2313
  6001  0B92  07F5               	addwf	___fladd@b+3,f
  6002  0B93                     u2313:
  6003  0B93                     l2057:
  6004  0B93  1C75               	btfss	___fladd@b+3,0
  6005  0B94  2B96               	goto	u2321
  6006  0B95  2B97               	goto	u2320
  6007  0B96                     u2321:
  6008  0B96  2C6D               	goto	l2107
  6009  0B97                     u2320:
  6010  0B97                     l2059:
  6011  0B97  1C2B               	btfss	___fladd@grs,0
  6012  0B98  2B9A               	goto	u2331
  6013  0B99  2B9B               	goto	u2330
  6014  0B9A                     u2331:
  6015  0B9A  2BA4               	goto	l2063
  6016  0B9B                     u2330:
  6017  0B9B                     l2061:
  6018  0B9B  082B               	movf	___fladd@grs,w
  6019  0B9C  00A0               	movwf	??___fladd
  6020  0B9D  1003               	clrc
  6021  0B9E  0C20               	rrf	??___fladd,w
  6022  0B9F  3801               	iorlw	1
  6023  0BA0  00A1               	movwf	??___fladd+1
  6024  0BA1  0821               	movf	??___fladd+1,w
  6025  0BA2  00AB               	movwf	___fladd@grs
  6026  0BA3  2BA6               	goto	l2065
  6027  0BA4                     l2063:
  6028  0BA4  1003               	clrc
  6029  0BA5  0CAB               	rrf	___fladd@grs,f
  6030  0BA6                     l2065:
  6031  0BA6  1C72               	btfss	___fladd@b,0
  6032  0BA7  2BA9               	goto	u2341
  6033  0BA8  2BAA               	goto	u2340
  6034  0BA9                     u2341:
  6035  0BA9  2BAB               	goto	l2069
  6036  0BAA                     u2340:
  6037  0BAA                     l2067:
  6038  0BAA  17AB               	bsf	___fladd@grs,7
  6039  0BAB                     l2069:
  6040  0BAB  3001               	movlw	1
  6041  0BAC  00A0               	movwf	??___fladd
  6042  0BAD                     u2355:
  6043  0BAD  0D75               	rlf	___fladd@b+3,w
  6044  0BAE  0CF5               	rrf	___fladd@b+3,f
  6045  0BAF  0CF4               	rrf	___fladd@b+2,f
  6046  0BB0  0CF3               	rrf	___fladd@b+1,f
  6047  0BB1  0CF2               	rrf	___fladd@b,f
  6048  0BB2  0BA0               	decfsz	??___fladd& (0+127),f
  6049  0BB3  2BAD               	goto	u2355
  6050  0BB4                     l2071:
  6051  0BB4  3001               	movlw	1
  6052  0BB5  00A0               	movwf	??___fladd
  6053  0BB6  0820               	movf	??___fladd,w
  6054  0BB7  07AA               	addwf	___fladd@bexp,f
  6055  0BB8  2C6D               	goto	l2107
  6056  0BB9                     l2073:
  6057  0BB9  0875               	movf	___fladd@b+3,w
  6058  0BBA  3A80               	xorlw	128
  6059  0BBB  00FF               	movwf	btemp+1
  6060  0BBC  0879               	movf	___fladd@a+3,w
  6061  0BBD  3A80               	xorlw	128
  6062  0BBE  027F               	subwf	btemp+1,w
  6063  0BBF  1D03               	skipz
  6064  0BC0  2BCB               	goto	u2363
  6065  0BC1  0878               	movf	___fladd@a+2,w
  6066  0BC2  0274               	subwf	___fladd@b+2,w
  6067  0BC3  1D03               	skipz
  6068  0BC4  2BCB               	goto	u2363
  6069  0BC5  0877               	movf	___fladd@a+1,w
  6070  0BC6  0273               	subwf	___fladd@b+1,w
  6071  0BC7  1D03               	skipz
  6072  0BC8  2BCB               	goto	u2363
  6073  0BC9  0876               	movf	___fladd@a,w
  6074  0BCA  0272               	subwf	___fladd@b,w
  6075  0BCB                     u2363:
  6076  0BCB  1803               	skipnc
  6077  0BCC  2BCE               	goto	u2361
  6078  0BCD  2BCF               	goto	u2360
  6079  0BCE                     u2361:
  6080  0BCE  2C27               	goto	l2083
  6081  0BCF                     u2360:
  6082  0BCF                     l2075:
  6083  0BCF  30FF               	movlw	255
  6084  0BD0  00A0               	movwf	??___fladd
  6085  0BD1  30FF               	movlw	255
  6086  0BD2  00A1               	movwf	??___fladd+1
  6087  0BD3  30FF               	movlw	255
  6088  0BD4  00A2               	movwf	??___fladd+2
  6089  0BD5  30FF               	movlw	255
  6090  0BD6  00A3               	movwf	??___fladd+3
  6091  0BD7  0876               	movf	___fladd@a,w
  6092  0BD8  00A4               	movwf	??___fladd+4
  6093  0BD9  0877               	movf	___fladd@a+1,w
  6094  0BDA  00A5               	movwf	??___fladd+5
  6095  0BDB  0878               	movf	___fladd@a+2,w
  6096  0BDC  00A6               	movwf	??___fladd+6
  6097  0BDD  0879               	movf	___fladd@a+3,w
  6098  0BDE  00A7               	movwf	??___fladd+7
  6099  0BDF  0872               	movf	___fladd@b,w
  6100  0BE0  02A4               	subwf	??___fladd+4,f
  6101  0BE1  0873               	movf	___fladd@b+1,w
  6102  0BE2  1C03               	skipc
  6103  0BE3  0F73               	incfsz	___fladd@b+1,w
  6104  0BE4  2BE6               	goto	u2371
  6105  0BE5  2BE7               	goto	u2372
  6106  0BE6                     u2371:
  6107  0BE6  02A5               	subwf	??___fladd+5,f
  6108  0BE7                     u2372:
  6109  0BE7  0874               	movf	___fladd@b+2,w
  6110  0BE8  1C03               	skipc
  6111  0BE9  0F74               	incfsz	___fladd@b+2,w
  6112  0BEA  2BEC               	goto	u2373
  6113  0BEB  2BED               	goto	u2374
  6114  0BEC                     u2373:
  6115  0BEC  02A6               	subwf	??___fladd+6,f
  6116  0BED                     u2374:
  6117  0BED  0875               	movf	___fladd@b+3,w
  6118  0BEE  1C03               	skipc
  6119  0BEF  0F75               	incfsz	___fladd@b+3,w
  6120  0BF0  2BF2               	goto	u2375
  6121  0BF1  2BF3               	goto	u2376
  6122  0BF2                     u2375:
  6123  0BF2  02A7               	subwf	??___fladd+7,f
  6124  0BF3                     u2376:
  6125  0BF3  0824               	movf	??___fladd+4,w
  6126  0BF4  07A0               	addwf	??___fladd,f
  6127  0BF5  0825               	movf	??___fladd+5,w
  6128  0BF6  1803               	skipnc
  6129  0BF7  0F25               	incfsz	??___fladd+5,w
  6130  0BF8  2BFA               	goto	u2380
  6131  0BF9  2BFB               	goto	u2381
  6132  0BFA                     u2380:
  6133  0BFA  07A1               	addwf	??___fladd+1,f
  6134  0BFB                     u2381:
  6135  0BFB  0826               	movf	??___fladd+6,w
  6136  0BFC  1803               	skipnc
  6137  0BFD  0F26               	incfsz	??___fladd+6,w
  6138  0BFE  2C00               	goto	u2382
  6139  0BFF  2C01               	goto	u2383
  6140  0C00                     u2382:
  6141  0C00  07A2               	addwf	??___fladd+2,f
  6142  0C01                     u2383:
  6143  0C01  0827               	movf	??___fladd+7,w
  6144  0C02  1803               	skipnc
  6145  0C03  0A27               	incf	??___fladd+7,w
  6146  0C04  07A3               	addwf	??___fladd+3,f
  6147  0C05  0823               	movf	??___fladd+3,w
  6148  0C06  00F5               	movwf	___fladd@b+3
  6149  0C07  0822               	movf	??___fladd+2,w
  6150  0C08  00F4               	movwf	___fladd@b+2
  6151  0C09  0821               	movf	??___fladd+1,w
  6152  0C0A  00F3               	movwf	___fladd@b+1
  6153  0C0B  0820               	movf	??___fladd,w
  6154  0C0C  00F2               	movwf	___fladd@b
  6155  0C0D                     l2077:
  6156  0C0D  3080               	movlw	128
  6157  0C0E  00A0               	movwf	??___fladd
  6158  0C0F  0820               	movf	??___fladd,w
  6159  0C10  06A8               	xorwf	___fladd@signs,f
  6160  0C11  09AB               	comf	___fladd@grs,f
  6161  0C12  0AAB               	incf	___fladd@grs,f
  6162  0C13                     l2079:
  6163  0C13  082B               	movf	___fladd@grs,w
  6164  0C14  1D03               	btfss	3,2
  6165  0C15  2C17               	goto	u2391
  6166  0C16  2C18               	goto	u2390
  6167  0C17                     u2391:
  6168  0C17  2C35               	goto	l639
  6169  0C18                     u2390:
  6170  0C18                     l2081:
  6171  0C18  3001               	movlw	1
  6172  0C19  07F2               	addwf	___fladd@b,f
  6173  0C1A  3000               	movlw	0
  6174  0C1B  1803               	skipnc
  6175  0C1C  3001               	movlw	1
  6176  0C1D  07F3               	addwf	___fladd@b+1,f
  6177  0C1E  3000               	movlw	0
  6178  0C1F  1803               	skipnc
  6179  0C20  3001               	movlw	1
  6180  0C21  07F4               	addwf	___fladd@b+2,f
  6181  0C22  3000               	movlw	0
  6182  0C23  1803               	skipnc
  6183  0C24  3001               	movlw	1
  6184  0C25  07F5               	addwf	___fladd@b+3,f
  6185  0C26  2C35               	goto	l639
  6186  0C27                     l2083:
  6187  0C27  0876               	movf	___fladd@a,w
  6188  0C28  02F2               	subwf	___fladd@b,f
  6189  0C29  0877               	movf	___fladd@a+1,w
  6190  0C2A  1C03               	skipc
  6191  0C2B  0F77               	incfsz	___fladd@a+1,w
  6192  0C2C  02F3               	subwf	___fladd@b+1,f
  6193  0C2D  0878               	movf	___fladd@a+2,w
  6194  0C2E  1C03               	skipc
  6195  0C2F  0F78               	incfsz	___fladd@a+2,w
  6196  0C30  02F4               	subwf	___fladd@b+2,f
  6197  0C31  0879               	movf	___fladd@a+3,w
  6198  0C32  1C03               	skipc
  6199  0C33  0F79               	incfsz	___fladd@a+3,w
  6200  0C34  02F5               	subwf	___fladd@b+3,f
  6201  0C35                     l639:
  6202  0C35  0875               	movf	___fladd@b+3,w
  6203  0C36  0474               	iorwf	___fladd@b+2,w
  6204  0C37  0473               	iorwf	___fladd@b+1,w
  6205  0C38  0472               	iorwf	___fladd@b,w
  6206  0C39  1D03               	skipz
  6207  0C3A  2C3C               	goto	u2401
  6208  0C3B  2C3D               	goto	u2400
  6209  0C3C                     u2401:
  6210  0C3C  2C69               	goto	l2105
  6211  0C3D                     u2400:
  6212  0C3D                     l2085:
  6213  0C3D  082B               	movf	___fladd@grs,w
  6214  0C3E  1D03               	btfss	3,2
  6215  0C3F  2C41               	goto	u2411
  6216  0C40  2C42               	goto	u2410
  6217  0C41                     u2411:
  6218  0C41  2C69               	goto	l2105
  6219  0C42                     u2410:
  6220  0C42                     l2087:
  6221  0C42  3000               	movlw	0
  6222  0C43  00F5               	movwf	?___fladd+3
  6223  0C44  3000               	movlw	0
  6224  0C45  00F4               	movwf	?___fladd+2
  6225  0C46  3000               	movlw	0
  6226  0C47  00F3               	movwf	?___fladd+1
  6227  0C48  3000               	movlw	0
  6228  0C49  00F2               	movwf	?___fladd
  6229  0C4A  2CE7               	goto	l631
  6230  0C4B                     l2091:
  6231  0C4B  3001               	movlw	1
  6232  0C4C  00A0               	movwf	??___fladd
  6233  0C4D                     u2425:
  6234  0C4D  1003               	clrc
  6235  0C4E  0DF2               	rlf	___fladd@b,f
  6236  0C4F  0DF3               	rlf	___fladd@b+1,f
  6237  0C50  0DF4               	rlf	___fladd@b+2,f
  6238  0C51  0DF5               	rlf	___fladd@b+3,f
  6239  0C52  0BA0               	decfsz	??___fladd,f
  6240  0C53  2C4D               	goto	u2425
  6241  0C54                     l2093:
  6242  0C54  1FAB               	btfss	___fladd@grs,7
  6243  0C55  2C57               	goto	u2431
  6244  0C56  2C58               	goto	u2430
  6245  0C57                     u2431:
  6246  0C57  2C59               	goto	l643
  6247  0C58                     u2430:
  6248  0C58                     l2095:
  6249  0C58  1472               	bsf	___fladd@b,0
  6250  0C59                     l643:
  6251  0C59  1C2B               	btfss	___fladd@grs,0
  6252  0C5A  2C5C               	goto	u2441
  6253  0C5B  2C5D               	goto	u2440
  6254  0C5C                     u2441:
  6255  0C5C  2C60               	goto	l2099
  6256  0C5D                     u2440:
  6257  0C5D                     l2097:
  6258  0C5D  1403               	setc
  6259  0C5E  0DAB               	rlf	___fladd@grs,f
  6260  0C5F  2C62               	goto	l2101
  6261  0C60                     l2099:
  6262  0C60  1003               	clrc
  6263  0C61  0DAB               	rlf	___fladd@grs,f
  6264  0C62                     l2101:
  6265  0C62  082A               	movf	___fladd@bexp,w
  6266  0C63  1903               	btfsc	3,2
  6267  0C64  2C66               	goto	u2451
  6268  0C65  2C67               	goto	u2450
  6269  0C66                     u2451:
  6270  0C66  2C69               	goto	l2105
  6271  0C67                     u2450:
  6272  0C67                     l2103:
  6273  0C67  3001               	movlw	1
  6274  0C68  02AA               	subwf	___fladd@bexp,f
  6275  0C69                     l2105:
  6276  0C69  1FF4               	btfss	___fladd@b+2,7
  6277  0C6A  2C6C               	goto	u2461
  6278  0C6B  2C6D               	goto	u2460
  6279  0C6C                     u2461:
  6280  0C6C  2C4B               	goto	l2091
  6281  0C6D                     u2460:
  6282  0C6D                     l2107:
  6283  0C6D  01A9               	clrf	___fladd@aexp
  6284  0C6E                     l2109:
  6285  0C6E  1FAB               	btfss	___fladd@grs,7
  6286  0C6F  2C71               	goto	u2471
  6287  0C70  2C72               	goto	u2470
  6288  0C71                     u2471:
  6289  0C71  2C80               	goto	l2117
  6290  0C72                     u2470:
  6291  0C72                     l2111:
  6292  0C72  082B               	movf	___fladd@grs,w
  6293  0C73  397F               	andlw	127
  6294  0C74  1903               	btfsc	3,2
  6295  0C75  2C77               	goto	u2481
  6296  0C76  2C78               	goto	u2480
  6297  0C77                     u2481:
  6298  0C77  2C7B               	goto	l649
  6299  0C78                     u2480:
  6300  0C78                     l2113:
  6301  0C78  01A9               	clrf	___fladd@aexp
  6302  0C79  0AA9               	incf	___fladd@aexp,f
  6303  0C7A  2C80               	goto	l2117
  6304  0C7B                     l649:
  6305  0C7B  1C72               	btfss	___fladd@b,0
  6306  0C7C  2C7E               	goto	u2491
  6307  0C7D  2C7F               	goto	u2490
  6308  0C7E                     u2491:
  6309  0C7E  2C80               	goto	l2117
  6310  0C7F                     u2490:
  6311  0C7F  2C78               	goto	l2113
  6312  0C80                     l2117:
  6313  0C80  0829               	movf	___fladd@aexp,w
  6314  0C81  1903               	btfsc	3,2
  6315  0C82  2C84               	goto	u2501
  6316  0C83  2C85               	goto	u2500
  6317  0C84                     u2501:
  6318  0C84  2CB9               	goto	l652
  6319  0C85                     u2500:
  6320  0C85                     l2119:
  6321  0C85  3001               	movlw	1
  6322  0C86  07F2               	addwf	___fladd@b,f
  6323  0C87  3000               	movlw	0
  6324  0C88  1803               	skipnc
  6325  0C89  3001               	movlw	1
  6326  0C8A  07F3               	addwf	___fladd@b+1,f
  6327  0C8B  3000               	movlw	0
  6328  0C8C  1803               	skipnc
  6329  0C8D  3001               	movlw	1
  6330  0C8E  07F4               	addwf	___fladd@b+2,f
  6331  0C8F  3000               	movlw	0
  6332  0C90  1803               	skipnc
  6333  0C91  3001               	movlw	1
  6334  0C92  07F5               	addwf	___fladd@b+3,f
  6335  0C93                     l2121:
  6336  0C93  1C75               	btfss	___fladd@b+3,0
  6337  0C94  2C96               	goto	u2511
  6338  0C95  2C97               	goto	u2510
  6339  0C96                     u2511:
  6340  0C96  2CB9               	goto	l652
  6341  0C97                     u2510:
  6342  0C97                     l2123:
  6343  0C97  0872               	movf	___fladd@b,w
  6344  0C98  00A0               	movwf	??___fladd
  6345  0C99  0873               	movf	___fladd@b+1,w
  6346  0C9A  00A1               	movwf	??___fladd+1
  6347  0C9B  0874               	movf	___fladd@b+2,w
  6348  0C9C  00A2               	movwf	??___fladd+2
  6349  0C9D  0875               	movf	___fladd@b+3,w
  6350  0C9E  00A3               	movwf	??___fladd+3
  6351  0C9F  3001               	movlw	1
  6352  0CA0  00A4               	movwf	??___fladd+4
  6353  0CA1                     u2525:
  6354  0CA1  0D23               	rlf	??___fladd+3,w
  6355  0CA2  0CA3               	rrf	??___fladd+3,f
  6356  0CA3  0CA2               	rrf	??___fladd+2,f
  6357  0CA4  0CA1               	rrf	??___fladd+1,f
  6358  0CA5  0CA0               	rrf	??___fladd,f
  6359  0CA6                     u2520:
  6360  0CA6  0BA4               	decfsz	??___fladd+4,f
  6361  0CA7  2CA1               	goto	u2525
  6362  0CA8  0823               	movf	??___fladd+3,w
  6363  0CA9  00F5               	movwf	___fladd@b+3
  6364  0CAA  0822               	movf	??___fladd+2,w
  6365  0CAB  00F4               	movwf	___fladd@b+2
  6366  0CAC  0821               	movf	??___fladd+1,w
  6367  0CAD  00F3               	movwf	___fladd@b+1
  6368  0CAE  0820               	movf	??___fladd,w
  6369  0CAF  00F2               	movwf	___fladd@b
  6370  0CB0  0A2A               	incf	___fladd@bexp,w
  6371  0CB1  1903               	btfsc	3,2
  6372  0CB2  2CB4               	goto	u2531
  6373  0CB3  2CB5               	goto	u2530
  6374  0CB4                     u2531:
  6375  0CB4  2CB9               	goto	l652
  6376  0CB5                     u2530:
  6377  0CB5                     l2125:
  6378  0CB5  3001               	movlw	1
  6379  0CB6  00A0               	movwf	??___fladd
  6380  0CB7  0820               	movf	??___fladd,w
  6381  0CB8  07AA               	addwf	___fladd@bexp,f
  6382  0CB9                     l652:
  6383  0CB9  0A2A               	incf	___fladd@bexp,w
  6384  0CBA  1903               	btfsc	3,2
  6385  0CBB  2CBD               	goto	u2541
  6386  0CBC  2CBE               	goto	u2540
  6387  0CBD                     u2541:
  6388  0CBD  2CC3               	goto	l2129
  6389  0CBE                     u2540:
  6390  0CBE                     l2127:
  6391  0CBE  082A               	movf	___fladd@bexp,w
  6392  0CBF  1D03               	btfss	3,2
  6393  0CC0  2CC2               	goto	u2551
  6394  0CC1  2CC3               	goto	u2550
  6395  0CC2                     u2551:
  6396  0CC2  2CD1               	goto	l2135
  6397  0CC3                     u2550:
  6398  0CC3                     l2129:
  6399  0CC3  3000               	movlw	0
  6400  0CC4  00F5               	movwf	___fladd@b+3
  6401  0CC5  3000               	movlw	0
  6402  0CC6  00F4               	movwf	___fladd@b+2
  6403  0CC7  3000               	movlw	0
  6404  0CC8  00F3               	movwf	___fladd@b+1
  6405  0CC9  3000               	movlw	0
  6406  0CCA  00F2               	movwf	___fladd@b
  6407  0CCB                     l2131:
  6408  0CCB  082A               	movf	___fladd@bexp,w
  6409  0CCC  1D03               	btfss	3,2
  6410  0CCD  2CCF               	goto	u2561
  6411  0CCE  2CD0               	goto	u2560
  6412  0CCF                     u2561:
  6413  0CCF  2CD1               	goto	l2135
  6414  0CD0                     u2560:
  6415  0CD0                     l2133:
  6416  0CD0  01A8               	clrf	___fladd@signs
  6417  0CD1                     l2135:
  6418  0CD1  1C2A               	btfss	___fladd@bexp,0
  6419  0CD2  2CD4               	goto	u2571
  6420  0CD3  2CD5               	goto	u2570
  6421  0CD4                     u2571:
  6422  0CD4  2CD7               	goto	l2139
  6423  0CD5                     u2570:
  6424  0CD5                     l2137:
  6425  0CD5  17F4               	bsf	___fladd@b+2,7
  6426  0CD6  2CDB               	goto	l660
  6427  0CD7                     l2139:
  6428  0CD7  307F               	movlw	127
  6429  0CD8  00A0               	movwf	??___fladd
  6430  0CD9  0820               	movf	??___fladd,w
  6431  0CDA  05F4               	andwf	___fladd@b+2,f
  6432  0CDB                     l660:
  6433  0CDB  082A               	movf	___fladd@bexp,w
  6434  0CDC  00A0               	movwf	??___fladd
  6435  0CDD  1003               	clrc
  6436  0CDE  0C20               	rrf	??___fladd,w
  6437  0CDF  00A1               	movwf	??___fladd+1
  6438  0CE0  0821               	movf	??___fladd+1,w
  6439  0CE1  00F5               	movwf	___fladd@b+3
  6440  0CE2                     l2141:
  6441  0CE2  1FA8               	btfss	___fladd@signs,7
  6442  0CE3  2CE5               	goto	u2581
  6443  0CE4  2CE6               	goto	u2580
  6444  0CE5                     u2581:
  6445  0CE5  2CE7               	goto	l661
  6446  0CE6                     u2580:
  6447  0CE6                     l2143:
  6448  0CE6  17F5               	bsf	___fladd@b+3,7
  6449  0CE7                     l661:
  6450  0CE7                     l631:
  6451  0CE7  0008               	return
  6452  0CE8                     __end_of___fladd:
  6453                           
  6454                           	psect	text24
  6455  0480                     __ptext24:	
  6456 ;; *************** function ___flmul *****************
  6457 ;; Defined at:
  6458 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  b               4   49[BANK0 ] unsigned char 
  6461 ;;  a               4   53[BANK0 ] unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  prod            4   69[BANK0 ] struct .
  6464 ;;  grs             4   64[BANK0 ] unsigned long 
  6465 ;;  temp            2   73[BANK0 ] struct .
  6466 ;;  bexp            1   68[BANK0 ] unsigned char 
  6467 ;;  aexp            1   63[BANK0 ] unsigned char 
  6468 ;;  sign            1   62[BANK0 ] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  4   49[BANK0 ] unsigned char 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6478 ;;      Params:         0       8       0       0       0
  6479 ;;      Locals:         0      13       0       0       0
  6480 ;;      Temps:          0       5       0       0       0
  6481 ;;      Totals:         0      26       0       0       0
  6482 ;;Total ram usage:       26 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    2
  6485 ;; This function calls:
  6486 ;;		__Umul8_16
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;;		_ADC_convert
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function ___flmul
  6495  0480                     ___flmul:
  6496  0480                     l3117:	
  6497                           ;incstack = 0
  6498                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6499                           
  6500  0480  1283               	bcf	3,5	;RP0=0, select bank0
  6501  0481  1303               	bcf	3,6	;RP1=0, select bank0
  6502  0482  0854               	movf	___flmul@b+3,w
  6503  0483  3980               	andlw	128
  6504  0484  00D9               	movwf	??___flmul
  6505  0485  0859               	movf	??___flmul,w
  6506  0486  00DE               	movwf	___flmul@sign
  6507  0487                     l3119:
  6508  0487  0854               	movf	___flmul@b+3,w
  6509  0488  00D9               	movwf	??___flmul
  6510  0489  0759               	addwf	??___flmul,w
  6511  048A  00DA               	movwf	??___flmul+1
  6512  048B  085A               	movf	??___flmul+1,w
  6513  048C  00E4               	movwf	___flmul@bexp
  6514  048D                     l3121:
  6515  048D  1FD3               	btfss	___flmul@b+2,7
  6516  048E  2C90               	goto	u4381
  6517  048F  2C91               	goto	u4380
  6518  0490                     u4381:
  6519  0490  2C92               	goto	l3125
  6520  0491                     u4380:
  6521  0491                     l3123:
  6522  0491  1464               	bsf	___flmul@bexp,0
  6523  0492                     l3125:
  6524  0492  0864               	movf	___flmul@bexp,w
  6525  0493  1903               	btfsc	3,2
  6526  0494  2C96               	goto	u4391
  6527  0495  2C97               	goto	u4390
  6528  0496                     u4391:
  6529  0496  2CA6               	goto	l3133
  6530  0497                     u4390:
  6531  0497                     l3127:
  6532  0497  0A64               	incf	___flmul@bexp,w
  6533  0498  1D03               	btfss	3,2
  6534  0499  2C9B               	goto	u4401
  6535  049A  2C9C               	goto	u4400
  6536  049B                     u4401:
  6537  049B  2CA4               	goto	l3131
  6538  049C                     u4400:
  6539  049C                     l3129:
  6540  049C  3000               	movlw	0
  6541  049D  00D4               	movwf	___flmul@b+3
  6542  049E  3000               	movlw	0
  6543  049F  00D3               	movwf	___flmul@b+2
  6544  04A0  3000               	movlw	0
  6545  04A1  00D2               	movwf	___flmul@b+1
  6546  04A2  3000               	movlw	0
  6547  04A3  00D1               	movwf	___flmul@b
  6548  04A4                     l3131:
  6549  04A4  17D3               	bsf	___flmul@b+2,7
  6550  04A5  2CAE               	goto	l3135
  6551  04A6                     l3133:
  6552  04A6  3000               	movlw	0
  6553  04A7  00D4               	movwf	___flmul@b+3
  6554  04A8  3000               	movlw	0
  6555  04A9  00D3               	movwf	___flmul@b+2
  6556  04AA  3000               	movlw	0
  6557  04AB  00D2               	movwf	___flmul@b+1
  6558  04AC  3000               	movlw	0
  6559  04AD  00D1               	movwf	___flmul@b
  6560  04AE                     l3135:
  6561  04AE  0858               	movf	___flmul@a+3,w
  6562  04AF  3980               	andlw	128
  6563  04B0  00D9               	movwf	??___flmul
  6564  04B1  0859               	movf	??___flmul,w
  6565  04B2  06DE               	xorwf	___flmul@sign,f
  6566  04B3                     l3137:
  6567  04B3  0858               	movf	___flmul@a+3,w
  6568  04B4  00D9               	movwf	??___flmul
  6569  04B5  0759               	addwf	??___flmul,w
  6570  04B6  00DA               	movwf	??___flmul+1
  6571  04B7  085A               	movf	??___flmul+1,w
  6572  04B8  00DF               	movwf	___flmul@aexp
  6573  04B9                     l3139:
  6574  04B9  1FD7               	btfss	___flmul@a+2,7
  6575  04BA  2CBC               	goto	u4411
  6576  04BB  2CBD               	goto	u4410
  6577  04BC                     u4411:
  6578  04BC  2CBE               	goto	l3143
  6579  04BD                     u4410:
  6580  04BD                     l3141:
  6581  04BD  145F               	bsf	___flmul@aexp,0
  6582  04BE                     l3143:
  6583  04BE  085F               	movf	___flmul@aexp,w
  6584  04BF  1903               	btfsc	3,2
  6585  04C0  2CC2               	goto	u4421
  6586  04C1  2CC3               	goto	u4420
  6587  04C2                     u4421:
  6588  04C2  2CD2               	goto	l3151
  6589  04C3                     u4420:
  6590  04C3                     l3145:
  6591  04C3  0A5F               	incf	___flmul@aexp,w
  6592  04C4  1D03               	btfss	3,2
  6593  04C5  2CC7               	goto	u4431
  6594  04C6  2CC8               	goto	u4430
  6595  04C7                     u4431:
  6596  04C7  2CD0               	goto	l3149
  6597  04C8                     u4430:
  6598  04C8                     l3147:
  6599  04C8  3000               	movlw	0
  6600  04C9  00D8               	movwf	___flmul@a+3
  6601  04CA  3000               	movlw	0
  6602  04CB  00D7               	movwf	___flmul@a+2
  6603  04CC  3000               	movlw	0
  6604  04CD  00D6               	movwf	___flmul@a+1
  6605  04CE  3000               	movlw	0
  6606  04CF  00D5               	movwf	___flmul@a
  6607  04D0                     l3149:
  6608  04D0  17D7               	bsf	___flmul@a+2,7
  6609  04D1  2CDA               	goto	l3153
  6610  04D2                     l3151:
  6611  04D2  3000               	movlw	0
  6612  04D3  00D8               	movwf	___flmul@a+3
  6613  04D4  3000               	movlw	0
  6614  04D5  00D7               	movwf	___flmul@a+2
  6615  04D6  3000               	movlw	0
  6616  04D7  00D6               	movwf	___flmul@a+1
  6617  04D8  3000               	movlw	0
  6618  04D9  00D5               	movwf	___flmul@a
  6619  04DA                     l3153:
  6620  04DA  085F               	movf	___flmul@aexp,w
  6621  04DB  1903               	btfsc	3,2
  6622  04DC  2CDE               	goto	u4441
  6623  04DD  2CDF               	goto	u4440
  6624  04DE                     u4441:
  6625  04DE  2CE4               	goto	l3157
  6626  04DF                     u4440:
  6627  04DF                     l3155:
  6628  04DF  0864               	movf	___flmul@bexp,w
  6629  04E0  1D03               	btfss	3,2
  6630  04E1  2CE3               	goto	u4451
  6631  04E2  2CE4               	goto	u4450
  6632  04E3                     u4451:
  6633  04E3  2CED               	goto	l3161
  6634  04E4                     u4450:
  6635  04E4                     l3157:
  6636  04E4  3000               	movlw	0
  6637  04E5  00D4               	movwf	?___flmul+3
  6638  04E6  3000               	movlw	0
  6639  04E7  00D3               	movwf	?___flmul+2
  6640  04E8  3000               	movlw	0
  6641  04E9  00D2               	movwf	?___flmul+1
  6642  04EA  3000               	movlw	0
  6643  04EB  00D1               	movwf	?___flmul
  6644  04EC  2FE0               	goto	l714
  6645  04ED                     l3161:
  6646  04ED  0851               	movf	___flmul@b,w
  6647  04EE  00D9               	movwf	??___flmul
  6648  04EF  0859               	movf	??___flmul,w
  6649  04F0  00F2               	movwf	__Umul8_16@multiplicand
  6650  04F1  0857               	movf	___flmul@a+2,w
  6651  04F2  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  6652  04F7  0873               	movf	?__Umul8_16+1,w
  6653  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  6654  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  6655  04FA  00EA               	movwf	___flmul@temp+1
  6656  04FB  0872               	movf	?__Umul8_16,w
  6657  04FC  00E9               	movwf	___flmul@temp
  6658  04FD                     l3163:
  6659  04FD  0869               	movf	___flmul@temp,w
  6660  04FE  00D9               	movwf	??___flmul
  6661  04FF  01DA               	clrf	??___flmul+1
  6662  0500  01DB               	clrf	??___flmul+2
  6663  0501  01DC               	clrf	??___flmul+3
  6664  0502  085C               	movf	??___flmul+3,w
  6665  0503  00E3               	movwf	___flmul@grs+3
  6666  0504  085B               	movf	??___flmul+2,w
  6667  0505  00E2               	movwf	___flmul@grs+2
  6668  0506  085A               	movf	??___flmul+1,w
  6669  0507  00E1               	movwf	___flmul@grs+1
  6670  0508  0859               	movf	??___flmul,w
  6671  0509  00E0               	movwf	___flmul@grs
  6672  050A                     l3165:
  6673  050A  086A               	movf	___flmul@temp+1,w
  6674  050B  00D9               	movwf	??___flmul
  6675  050C  01DA               	clrf	??___flmul+1
  6676  050D  01DB               	clrf	??___flmul+2
  6677  050E  01DC               	clrf	??___flmul+3
  6678  050F  085C               	movf	??___flmul+3,w
  6679  0510  00E8               	movwf	___flmul@prod+3
  6680  0511  085B               	movf	??___flmul+2,w
  6681  0512  00E7               	movwf	___flmul@prod+2
  6682  0513  085A               	movf	??___flmul+1,w
  6683  0514  00E6               	movwf	___flmul@prod+1
  6684  0515  0859               	movf	??___flmul,w
  6685  0516  00E5               	movwf	___flmul@prod
  6686  0517  0852               	movf	___flmul@b+1,w
  6687  0518  00D9               	movwf	??___flmul
  6688  0519  0859               	movf	??___flmul,w
  6689  051A  00F2               	movwf	__Umul8_16@multiplicand
  6690  051B  0856               	movf	___flmul@a+1,w
  6691  051C  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  6692  0521  0873               	movf	?__Umul8_16+1,w
  6693  0522  1283               	bcf	3,5	;RP0=0, select bank0
  6694  0523  1303               	bcf	3,6	;RP1=0, select bank0
  6695  0524  00EA               	movwf	___flmul@temp+1
  6696  0525  0872               	movf	?__Umul8_16,w
  6697  0526  00E9               	movwf	___flmul@temp
  6698  0527                     l3167:
  6699  0527  0869               	movf	___flmul@temp,w
  6700  0528  00D9               	movwf	??___flmul
  6701  0529  01DA               	clrf	??___flmul+1
  6702  052A  01DB               	clrf	??___flmul+2
  6703  052B  01DC               	clrf	??___flmul+3
  6704  052C  0859               	movf	??___flmul,w
  6705  052D  07E0               	addwf	___flmul@grs,f
  6706  052E  085A               	movf	??___flmul+1,w
  6707  052F  1103               	clrz
  6708  0530  1803               	skipnc
  6709  0531  3E01               	addlw	1
  6710  0532  1903               	skipnz
  6711  0533  2D35               	goto	u4461
  6712  0534  07E1               	addwf	___flmul@grs+1,f
  6713  0535                     u4461:
  6714  0535  085B               	movf	??___flmul+2,w
  6715  0536  1103               	clrz
  6716  0537  1803               	skipnc
  6717  0538  3E01               	addlw	1
  6718  0539  1903               	skipnz
  6719  053A  2D3C               	goto	u4462
  6720  053B  07E2               	addwf	___flmul@grs+2,f
  6721  053C                     u4462:
  6722  053C  085C               	movf	??___flmul+3,w
  6723  053D  1103               	clrz
  6724  053E  1803               	skipnc
  6725  053F  3E01               	addlw	1
  6726  0540  1903               	skipnz
  6727  0541  2D43               	goto	u4463
  6728  0542  07E3               	addwf	___flmul@grs+3,f
  6729  0543                     u4463:
  6730  0543                     l3169:
  6731  0543  086A               	movf	___flmul@temp+1,w
  6732  0544  00D9               	movwf	??___flmul
  6733  0545  01DA               	clrf	??___flmul+1
  6734  0546  01DB               	clrf	??___flmul+2
  6735  0547  01DC               	clrf	??___flmul+3
  6736  0548  0859               	movf	??___flmul,w
  6737  0549  07E5               	addwf	___flmul@prod,f
  6738  054A  085A               	movf	??___flmul+1,w
  6739  054B  1103               	clrz
  6740  054C  1803               	skipnc
  6741  054D  3E01               	addlw	1
  6742  054E  1903               	skipnz
  6743  054F  2D51               	goto	u4471
  6744  0550  07E6               	addwf	___flmul@prod+1,f
  6745  0551                     u4471:
  6746  0551  085B               	movf	??___flmul+2,w
  6747  0552  1103               	clrz
  6748  0553  1803               	skipnc
  6749  0554  3E01               	addlw	1
  6750  0555  1903               	skipnz
  6751  0556  2D58               	goto	u4472
  6752  0557  07E7               	addwf	___flmul@prod+2,f
  6753  0558                     u4472:
  6754  0558  085C               	movf	??___flmul+3,w
  6755  0559  1103               	clrz
  6756  055A  1803               	skipnc
  6757  055B  3E01               	addlw	1
  6758  055C  1903               	skipnz
  6759  055D  2D5F               	goto	u4473
  6760  055E  07E8               	addwf	___flmul@prod+3,f
  6761  055F                     u4473:
  6762  055F  0853               	movf	___flmul@b+2,w
  6763  0560  00D9               	movwf	??___flmul
  6764  0561  0859               	movf	??___flmul,w
  6765  0562  00F2               	movwf	__Umul8_16@multiplicand
  6766  0563  0855               	movf	___flmul@a,w
  6767  0564  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  6768  0569  0873               	movf	?__Umul8_16+1,w
  6769  056A  1283               	bcf	3,5	;RP0=0, select bank0
  6770  056B  1303               	bcf	3,6	;RP1=0, select bank0
  6771  056C  00EA               	movwf	___flmul@temp+1
  6772  056D  0872               	movf	?__Umul8_16,w
  6773  056E  00E9               	movwf	___flmul@temp
  6774  056F                     l3171:
  6775  056F  0869               	movf	___flmul@temp,w
  6776  0570  00D9               	movwf	??___flmul
  6777  0571  01DA               	clrf	??___flmul+1
  6778  0572  01DB               	clrf	??___flmul+2
  6779  0573  01DC               	clrf	??___flmul+3
  6780  0574  0859               	movf	??___flmul,w
  6781  0575  07E0               	addwf	___flmul@grs,f
  6782  0576  085A               	movf	??___flmul+1,w
  6783  0577  1103               	clrz
  6784  0578  1803               	skipnc
  6785  0579  3E01               	addlw	1
  6786  057A  1903               	skipnz
  6787  057B  2D7D               	goto	u4481
  6788  057C  07E1               	addwf	___flmul@grs+1,f
  6789  057D                     u4481:
  6790  057D  085B               	movf	??___flmul+2,w
  6791  057E  1103               	clrz
  6792  057F  1803               	skipnc
  6793  0580  3E01               	addlw	1
  6794  0581  1903               	skipnz
  6795  0582  2D84               	goto	u4482
  6796  0583  07E2               	addwf	___flmul@grs+2,f
  6797  0584                     u4482:
  6798  0584  085C               	movf	??___flmul+3,w
  6799  0585  1103               	clrz
  6800  0586  1803               	skipnc
  6801  0587  3E01               	addlw	1
  6802  0588  1903               	skipnz
  6803  0589  2D8B               	goto	u4483
  6804  058A  07E3               	addwf	___flmul@grs+3,f
  6805  058B                     u4483:
  6806  058B                     l3173:
  6807  058B  086A               	movf	___flmul@temp+1,w
  6808  058C  00D9               	movwf	??___flmul
  6809  058D  01DA               	clrf	??___flmul+1
  6810  058E  01DB               	clrf	??___flmul+2
  6811  058F  01DC               	clrf	??___flmul+3
  6812  0590  0859               	movf	??___flmul,w
  6813  0591  07E5               	addwf	___flmul@prod,f
  6814  0592  085A               	movf	??___flmul+1,w
  6815  0593  1103               	clrz
  6816  0594  1803               	skipnc
  6817  0595  3E01               	addlw	1
  6818  0596  1903               	skipnz
  6819  0597  2D99               	goto	u4491
  6820  0598  07E6               	addwf	___flmul@prod+1,f
  6821  0599                     u4491:
  6822  0599  085B               	movf	??___flmul+2,w
  6823  059A  1103               	clrz
  6824  059B  1803               	skipnc
  6825  059C  3E01               	addlw	1
  6826  059D  1903               	skipnz
  6827  059E  2DA0               	goto	u4492
  6828  059F  07E7               	addwf	___flmul@prod+2,f
  6829  05A0                     u4492:
  6830  05A0  085C               	movf	??___flmul+3,w
  6831  05A1  1103               	clrz
  6832  05A2  1803               	skipnc
  6833  05A3  3E01               	addlw	1
  6834  05A4  1903               	skipnz
  6835  05A5  2DA7               	goto	u4493
  6836  05A6  07E8               	addwf	___flmul@prod+3,f
  6837  05A7                     u4493:
  6838  05A7                     l3175:
  6839  05A7  3008               	movlw	8
  6840  05A8  00D9               	movwf	??___flmul
  6841  05A9                     u4505:
  6842  05A9  1003               	clrc
  6843  05AA  0DE0               	rlf	___flmul@grs,f
  6844  05AB  0DE1               	rlf	___flmul@grs+1,f
  6845  05AC  0DE2               	rlf	___flmul@grs+2,f
  6846  05AD  0DE3               	rlf	___flmul@grs+3,f
  6847  05AE  0BD9               	decfsz	??___flmul,f
  6848  05AF  2DA9               	goto	u4505
  6849  05B0                     l3177:
  6850  05B0  0852               	movf	___flmul@b+1,w
  6851  05B1  00D9               	movwf	??___flmul
  6852  05B2  0859               	movf	??___flmul,w
  6853  05B3  00F2               	movwf	__Umul8_16@multiplicand
  6854  05B4  0855               	movf	___flmul@a,w
  6855  05B5  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  6856  05BA  0873               	movf	?__Umul8_16+1,w
  6857  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  6858  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  6859  05BD  00EA               	movwf	___flmul@temp+1
  6860  05BE  0872               	movf	?__Umul8_16,w
  6861  05BF  00E9               	movwf	___flmul@temp
  6862  05C0                     l3179:
  6863  05C0  0869               	movf	___flmul@temp,w
  6864  05C1  00D9               	movwf	??___flmul
  6865  05C2  086A               	movf	___flmul@temp+1,w
  6866  05C3  00DA               	movwf	??___flmul+1
  6867  05C4  01DB               	clrf	??___flmul+2
  6868  05C5  01DC               	clrf	??___flmul+3
  6869  05C6  0859               	movf	??___flmul,w
  6870  05C7  07E0               	addwf	___flmul@grs,f
  6871  05C8  085A               	movf	??___flmul+1,w
  6872  05C9  1103               	clrz
  6873  05CA  1803               	skipnc
  6874  05CB  3E01               	addlw	1
  6875  05CC  1903               	skipnz
  6876  05CD  2DCF               	goto	u4511
  6877  05CE  07E1               	addwf	___flmul@grs+1,f
  6878  05CF                     u4511:
  6879  05CF  085B               	movf	??___flmul+2,w
  6880  05D0  1103               	clrz
  6881  05D1  1803               	skipnc
  6882  05D2  3E01               	addlw	1
  6883  05D3  1903               	skipnz
  6884  05D4  2DD6               	goto	u4512
  6885  05D5  07E2               	addwf	___flmul@grs+2,f
  6886  05D6                     u4512:
  6887  05D6  085C               	movf	??___flmul+3,w
  6888  05D7  1103               	clrz
  6889  05D8  1803               	skipnc
  6890  05D9  3E01               	addlw	1
  6891  05DA  1903               	skipnz
  6892  05DB  2DDD               	goto	u4513
  6893  05DC  07E3               	addwf	___flmul@grs+3,f
  6894  05DD                     u4513:
  6895  05DD                     l3181:
  6896  05DD  0851               	movf	___flmul@b,w
  6897  05DE  00D9               	movwf	??___flmul
  6898  05DF  0859               	movf	??___flmul,w
  6899  05E0  00F2               	movwf	__Umul8_16@multiplicand
  6900  05E1  0856               	movf	___flmul@a+1,w
  6901  05E2  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  6902  05E7  0873               	movf	?__Umul8_16+1,w
  6903  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  6904  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  6905  05EA  00EA               	movwf	___flmul@temp+1
  6906  05EB  0872               	movf	?__Umul8_16,w
  6907  05EC  00E9               	movwf	___flmul@temp
  6908  05ED                     l3183:
  6909  05ED  0869               	movf	___flmul@temp,w
  6910  05EE  00D9               	movwf	??___flmul
  6911  05EF  086A               	movf	___flmul@temp+1,w
  6912  05F0  00DA               	movwf	??___flmul+1
  6913  05F1  01DB               	clrf	??___flmul+2
  6914  05F2  01DC               	clrf	??___flmul+3
  6915  05F3  0859               	movf	??___flmul,w
  6916  05F4  07E0               	addwf	___flmul@grs,f
  6917  05F5  085A               	movf	??___flmul+1,w
  6918  05F6  1103               	clrz
  6919  05F7  1803               	skipnc
  6920  05F8  3E01               	addlw	1
  6921  05F9  1903               	skipnz
  6922  05FA  2DFC               	goto	u4521
  6923  05FB  07E1               	addwf	___flmul@grs+1,f
  6924  05FC                     u4521:
  6925  05FC  085B               	movf	??___flmul+2,w
  6926  05FD  1103               	clrz
  6927  05FE  1803               	skipnc
  6928  05FF  3E01               	addlw	1
  6929  0600  1903               	skipnz
  6930  0601  2E03               	goto	u4522
  6931  0602  07E2               	addwf	___flmul@grs+2,f
  6932  0603                     u4522:
  6933  0603  085C               	movf	??___flmul+3,w
  6934  0604  1103               	clrz
  6935  0605  1803               	skipnc
  6936  0606  3E01               	addlw	1
  6937  0607  1903               	skipnz
  6938  0608  2E0A               	goto	u4523
  6939  0609  07E3               	addwf	___flmul@grs+3,f
  6940  060A                     u4523:
  6941  060A                     l3185:
  6942  060A  3008               	movlw	8
  6943  060B  00D9               	movwf	??___flmul
  6944  060C                     u4535:
  6945  060C  1003               	clrc
  6946  060D  0DE0               	rlf	___flmul@grs,f
  6947  060E  0DE1               	rlf	___flmul@grs+1,f
  6948  060F  0DE2               	rlf	___flmul@grs+2,f
  6949  0610  0DE3               	rlf	___flmul@grs+3,f
  6950  0611  0BD9               	decfsz	??___flmul,f
  6951  0612  2E0C               	goto	u4535
  6952  0613  0851               	movf	___flmul@b,w
  6953  0614  00D9               	movwf	??___flmul
  6954  0615  0859               	movf	??___flmul,w
  6955  0616  00F2               	movwf	__Umul8_16@multiplicand
  6956  0617  0855               	movf	___flmul@a,w
  6957  0618  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  6958  061D  0873               	movf	?__Umul8_16+1,w
  6959  061E  1283               	bcf	3,5	;RP0=0, select bank0
  6960  061F  1303               	bcf	3,6	;RP1=0, select bank0
  6961  0620  00EA               	movwf	___flmul@temp+1
  6962  0621  0872               	movf	?__Umul8_16,w
  6963  0622  00E9               	movwf	___flmul@temp
  6964  0623                     l3187:
  6965  0623  0869               	movf	___flmul@temp,w
  6966  0624  00D9               	movwf	??___flmul
  6967  0625  086A               	movf	___flmul@temp+1,w
  6968  0626  00DA               	movwf	??___flmul+1
  6969  0627  01DB               	clrf	??___flmul+2
  6970  0628  01DC               	clrf	??___flmul+3
  6971  0629  0859               	movf	??___flmul,w
  6972  062A  07E0               	addwf	___flmul@grs,f
  6973  062B  085A               	movf	??___flmul+1,w
  6974  062C  1103               	clrz
  6975  062D  1803               	skipnc
  6976  062E  3E01               	addlw	1
  6977  062F  1903               	skipnz
  6978  0630  2E32               	goto	u4541
  6979  0631  07E1               	addwf	___flmul@grs+1,f
  6980  0632                     u4541:
  6981  0632  085B               	movf	??___flmul+2,w
  6982  0633  1103               	clrz
  6983  0634  1803               	skipnc
  6984  0635  3E01               	addlw	1
  6985  0636  1903               	skipnz
  6986  0637  2E39               	goto	u4542
  6987  0638  07E2               	addwf	___flmul@grs+2,f
  6988  0639                     u4542:
  6989  0639  085C               	movf	??___flmul+3,w
  6990  063A  1103               	clrz
  6991  063B  1803               	skipnc
  6992  063C  3E01               	addlw	1
  6993  063D  1903               	skipnz
  6994  063E  2E40               	goto	u4543
  6995  063F  07E3               	addwf	___flmul@grs+3,f
  6996  0640                     u4543:
  6997  0640                     l3189:
  6998  0640  0852               	movf	___flmul@b+1,w
  6999  0641  00D9               	movwf	??___flmul
  7000  0642  0859               	movf	??___flmul,w
  7001  0643  00F2               	movwf	__Umul8_16@multiplicand
  7002  0644  0857               	movf	___flmul@a+2,w
  7003  0645  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  7004  064A  0873               	movf	?__Umul8_16+1,w
  7005  064B  1283               	bcf	3,5	;RP0=0, select bank0
  7006  064C  1303               	bcf	3,6	;RP1=0, select bank0
  7007  064D  00EA               	movwf	___flmul@temp+1
  7008  064E  0872               	movf	?__Umul8_16,w
  7009  064F  00E9               	movwf	___flmul@temp
  7010  0650  0869               	movf	___flmul@temp,w
  7011  0651  00D9               	movwf	??___flmul
  7012  0652  086A               	movf	___flmul@temp+1,w
  7013  0653  00DA               	movwf	??___flmul+1
  7014  0654  01DB               	clrf	??___flmul+2
  7015  0655  01DC               	clrf	??___flmul+3
  7016  0656  0859               	movf	??___flmul,w
  7017  0657  07E5               	addwf	___flmul@prod,f
  7018  0658  085A               	movf	??___flmul+1,w
  7019  0659  1103               	clrz
  7020  065A  1803               	skipnc
  7021  065B  3E01               	addlw	1
  7022  065C  1903               	skipnz
  7023  065D  2E5F               	goto	u4551
  7024  065E  07E6               	addwf	___flmul@prod+1,f
  7025  065F                     u4551:
  7026  065F  085B               	movf	??___flmul+2,w
  7027  0660  1103               	clrz
  7028  0661  1803               	skipnc
  7029  0662  3E01               	addlw	1
  7030  0663  1903               	skipnz
  7031  0664  2E66               	goto	u4552
  7032  0665  07E7               	addwf	___flmul@prod+2,f
  7033  0666                     u4552:
  7034  0666  085C               	movf	??___flmul+3,w
  7035  0667  1103               	clrz
  7036  0668  1803               	skipnc
  7037  0669  3E01               	addlw	1
  7038  066A  1903               	skipnz
  7039  066B  2E6D               	goto	u4553
  7040  066C  07E8               	addwf	___flmul@prod+3,f
  7041  066D                     u4553:
  7042  066D                     l3191:
  7043  066D  0853               	movf	___flmul@b+2,w
  7044  066E  00D9               	movwf	??___flmul
  7045  066F  0859               	movf	??___flmul,w
  7046  0670  00F2               	movwf	__Umul8_16@multiplicand
  7047  0671  0856               	movf	___flmul@a+1,w
  7048  0672  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  7049  0677  0873               	movf	?__Umul8_16+1,w
  7050  0678  1283               	bcf	3,5	;RP0=0, select bank0
  7051  0679  1303               	bcf	3,6	;RP1=0, select bank0
  7052  067A  00EA               	movwf	___flmul@temp+1
  7053  067B  0872               	movf	?__Umul8_16,w
  7054  067C  00E9               	movwf	___flmul@temp
  7055  067D                     l3193:
  7056  067D  0869               	movf	___flmul@temp,w
  7057  067E  00D9               	movwf	??___flmul
  7058  067F  086A               	movf	___flmul@temp+1,w
  7059  0680  00DA               	movwf	??___flmul+1
  7060  0681  01DB               	clrf	??___flmul+2
  7061  0682  01DC               	clrf	??___flmul+3
  7062  0683  0859               	movf	??___flmul,w
  7063  0684  07E5               	addwf	___flmul@prod,f
  7064  0685  085A               	movf	??___flmul+1,w
  7065  0686  1103               	clrz
  7066  0687  1803               	skipnc
  7067  0688  3E01               	addlw	1
  7068  0689  1903               	skipnz
  7069  068A  2E8C               	goto	u4561
  7070  068B  07E6               	addwf	___flmul@prod+1,f
  7071  068C                     u4561:
  7072  068C  085B               	movf	??___flmul+2,w
  7073  068D  1103               	clrz
  7074  068E  1803               	skipnc
  7075  068F  3E01               	addlw	1
  7076  0690  1903               	skipnz
  7077  0691  2E93               	goto	u4562
  7078  0692  07E7               	addwf	___flmul@prod+2,f
  7079  0693                     u4562:
  7080  0693  085C               	movf	??___flmul+3,w
  7081  0694  1103               	clrz
  7082  0695  1803               	skipnc
  7083  0696  3E01               	addlw	1
  7084  0697  1903               	skipnz
  7085  0698  2E9A               	goto	u4563
  7086  0699  07E8               	addwf	___flmul@prod+3,f
  7087  069A                     u4563:
  7088  069A  0853               	movf	___flmul@b+2,w
  7089  069B  00D9               	movwf	??___flmul
  7090  069C  0859               	movf	??___flmul,w
  7091  069D  00F2               	movwf	__Umul8_16@multiplicand
  7092  069E  0857               	movf	___flmul@a+2,w
  7093  069F  160A  118A  2321  120A  118A  	fcall	__Umul8_16
  7094  06A4  0873               	movf	?__Umul8_16+1,w
  7095  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  7096  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  7097  06A7  00EA               	movwf	___flmul@temp+1
  7098  06A8  0872               	movf	?__Umul8_16,w
  7099  06A9  00E9               	movwf	___flmul@temp
  7100  06AA                     l3195:
  7101  06AA  0869               	movf	___flmul@temp,w
  7102  06AB  00D9               	movwf	??___flmul
  7103  06AC  086A               	movf	___flmul@temp+1,w
  7104  06AD  00DA               	movwf	??___flmul+1
  7105  06AE  01DB               	clrf	??___flmul+2
  7106  06AF  01DC               	clrf	??___flmul+3
  7107  06B0  3008               	movlw	8
  7108  06B1                     u4575:
  7109  06B1  1003               	clrc
  7110  06B2  0DD9               	rlf	??___flmul,f
  7111  06B3  0DDA               	rlf	??___flmul+1,f
  7112  06B4  0DDB               	rlf	??___flmul+2,f
  7113  06B5  0DDC               	rlf	??___flmul+3,f
  7114  06B6                     u4570:
  7115  06B6  3EFF               	addlw	-1
  7116  06B7  1D03               	skipz
  7117  06B8  2EB1               	goto	u4575
  7118  06B9  0859               	movf	??___flmul,w
  7119  06BA  07E5               	addwf	___flmul@prod,f
  7120  06BB  085A               	movf	??___flmul+1,w
  7121  06BC  1103               	clrz
  7122  06BD  1803               	skipnc
  7123  06BE  3E01               	addlw	1
  7124  06BF  1903               	skipnz
  7125  06C0  2EC2               	goto	u4581
  7126  06C1  07E6               	addwf	___flmul@prod+1,f
  7127  06C2                     u4581:
  7128  06C2  085B               	movf	??___flmul+2,w
  7129  06C3  1103               	clrz
  7130  06C4  1803               	skipnc
  7131  06C5  3E01               	addlw	1
  7132  06C6  1903               	skipnz
  7133  06C7  2EC9               	goto	u4582
  7134  06C8  07E7               	addwf	___flmul@prod+2,f
  7135  06C9                     u4582:
  7136  06C9  085C               	movf	??___flmul+3,w
  7137  06CA  1103               	clrz
  7138  06CB  1803               	skipnc
  7139  06CC  3E01               	addlw	1
  7140  06CD  1903               	skipnz
  7141  06CE  2ED0               	goto	u4583
  7142  06CF  07E8               	addwf	___flmul@prod+3,f
  7143  06D0                     u4583:
  7144  06D0                     l3197:
  7145  06D0  0860               	movf	___flmul@grs,w
  7146  06D1  00D9               	movwf	??___flmul
  7147  06D2  0861               	movf	___flmul@grs+1,w
  7148  06D3  00DA               	movwf	??___flmul+1
  7149  06D4  0862               	movf	___flmul@grs+2,w
  7150  06D5  00DB               	movwf	??___flmul+2
  7151  06D6  0863               	movf	___flmul@grs+3,w
  7152  06D7  00DC               	movwf	??___flmul+3
  7153  06D8  3018               	movlw	24
  7154  06D9                     u4595:
  7155  06D9  1003               	clrc
  7156  06DA  0CDC               	rrf	??___flmul+3,f
  7157  06DB  0CDB               	rrf	??___flmul+2,f
  7158  06DC  0CDA               	rrf	??___flmul+1,f
  7159  06DD  0CD9               	rrf	??___flmul,f
  7160  06DE                     u4590:
  7161  06DE  3EFF               	addlw	-1
  7162  06DF  1D03               	skipz
  7163  06E0  2ED9               	goto	u4595
  7164  06E1  0859               	movf	??___flmul,w
  7165  06E2  07E5               	addwf	___flmul@prod,f
  7166  06E3  085A               	movf	??___flmul+1,w
  7167  06E4  1103               	clrz
  7168  06E5  1803               	skipnc
  7169  06E6  3E01               	addlw	1
  7170  06E7  1903               	skipnz
  7171  06E8  2EEA               	goto	u4601
  7172  06E9  07E6               	addwf	___flmul@prod+1,f
  7173  06EA                     u4601:
  7174  06EA  085B               	movf	??___flmul+2,w
  7175  06EB  1103               	clrz
  7176  06EC  1803               	skipnc
  7177  06ED  3E01               	addlw	1
  7178  06EE  1903               	skipnz
  7179  06EF  2EF1               	goto	u4602
  7180  06F0  07E7               	addwf	___flmul@prod+2,f
  7181  06F1                     u4602:
  7182  06F1  085C               	movf	??___flmul+3,w
  7183  06F2  1103               	clrz
  7184  06F3  1803               	skipnc
  7185  06F4  3E01               	addlw	1
  7186  06F5  1903               	skipnz
  7187  06F6  2EF8               	goto	u4603
  7188  06F7  07E8               	addwf	___flmul@prod+3,f
  7189  06F8                     u4603:
  7190  06F8                     l3199:
  7191  06F8  3008               	movlw	8
  7192  06F9  00D9               	movwf	??___flmul
  7193  06FA                     u4615:
  7194  06FA  1003               	clrc
  7195  06FB  0DE0               	rlf	___flmul@grs,f
  7196  06FC  0DE1               	rlf	___flmul@grs+1,f
  7197  06FD  0DE2               	rlf	___flmul@grs+2,f
  7198  06FE  0DE3               	rlf	___flmul@grs+3,f
  7199  06FF  0BD9               	decfsz	??___flmul,f
  7200  0700  2EFA               	goto	u4615
  7201  0701                     l3201:
  7202  0701  0864               	movf	___flmul@bexp,w
  7203  0702  075F               	addwf	___flmul@aexp,w
  7204  0703  00D9               	movwf	??___flmul
  7205  0704  01DA               	clrf	??___flmul+1
  7206  0705  0DDA               	rlf	??___flmul+1,f
  7207  0706  0859               	movf	??___flmul,w
  7208  0707  3E82               	addlw	130
  7209  0708  00E9               	movwf	___flmul@temp
  7210  0709  085A               	movf	??___flmul+1,w
  7211  070A  1803               	skipnc
  7212  070B  3E01               	addlw	1
  7213  070C  3EFF               	addlw	255
  7214  070D  00EA               	movwf	___flmul@temp+1
  7215  070E  2F2C               	goto	l3213
  7216  070F                     l3203:
  7217  070F  3001               	movlw	1
  7218  0710  00D9               	movwf	??___flmul
  7219  0711                     u4625:
  7220  0711  1003               	clrc
  7221  0712  0DE5               	rlf	___flmul@prod,f
  7222  0713  0DE6               	rlf	___flmul@prod+1,f
  7223  0714  0DE7               	rlf	___flmul@prod+2,f
  7224  0715  0DE8               	rlf	___flmul@prod+3,f
  7225  0716  0BD9               	decfsz	??___flmul,f
  7226  0717  2F11               	goto	u4625
  7227  0718                     l3205:
  7228  0718  1FE3               	btfss	___flmul@grs+3,7
  7229  0719  2F1B               	goto	u4631
  7230  071A  2F1C               	goto	u4630
  7231  071B                     u4631:
  7232  071B  2F1D               	goto	l3209
  7233  071C                     u4630:
  7234  071C                     l3207:
  7235  071C  1465               	bsf	___flmul@prod,0
  7236  071D                     l3209:
  7237  071D  3001               	movlw	1
  7238  071E  00D9               	movwf	??___flmul
  7239  071F                     u4645:
  7240  071F  1003               	clrc
  7241  0720  0DE0               	rlf	___flmul@grs,f
  7242  0721  0DE1               	rlf	___flmul@grs+1,f
  7243  0722  0DE2               	rlf	___flmul@grs+2,f
  7244  0723  0DE3               	rlf	___flmul@grs+3,f
  7245  0724  0BD9               	decfsz	??___flmul,f
  7246  0725  2F1F               	goto	u4645
  7247  0726                     l3211:
  7248  0726  30FF               	movlw	255
  7249  0727  07E9               	addwf	___flmul@temp,f
  7250  0728  1803               	skipnc
  7251  0729  0AEA               	incf	___flmul@temp+1,f
  7252  072A  30FF               	movlw	255
  7253  072B  07EA               	addwf	___flmul@temp+1,f
  7254  072C                     l3213:
  7255  072C  1FE7               	btfss	___flmul@prod+2,7
  7256  072D  2F2F               	goto	u4651
  7257  072E  2F30               	goto	u4650
  7258  072F                     u4651:
  7259  072F  2F0F               	goto	l3203
  7260  0730                     u4650:
  7261  0730                     l3215:
  7262  0730  01DF               	clrf	___flmul@aexp
  7263  0731                     l3217:
  7264  0731  1FE3               	btfss	___flmul@grs+3,7
  7265  0732  2F34               	goto	u4661
  7266  0733  2F35               	goto	u4660
  7267  0734                     u4661:
  7268  0734  2F51               	goto	l3225
  7269  0735                     u4660:
  7270  0735                     l3219:
  7271  0735  30FF               	movlw	255
  7272  0736  0560               	andwf	___flmul@grs,w
  7273  0737  00D9               	movwf	??___flmul
  7274  0738  30FF               	movlw	255
  7275  0739  0561               	andwf	___flmul@grs+1,w
  7276  073A  00DA               	movwf	??___flmul+1
  7277  073B  30FF               	movlw	255
  7278  073C  0562               	andwf	___flmul@grs+2,w
  7279  073D  00DB               	movwf	??___flmul+2
  7280  073E  307F               	movlw	127
  7281  073F  0563               	andwf	___flmul@grs+3,w
  7282  0740  00DC               	movwf	??___flmul+3
  7283  0741  085C               	movf	??___flmul+3,w
  7284  0742  045B               	iorwf	??___flmul+2,w
  7285  0743  045A               	iorwf	??___flmul+1,w
  7286  0744  0459               	iorwf	??___flmul,w
  7287  0745  1903               	skipnz
  7288  0746  2F48               	goto	u4671
  7289  0747  2F49               	goto	u4670
  7290  0748                     u4671:
  7291  0748  2F4C               	goto	l720
  7292  0749                     u4670:
  7293  0749                     l3221:
  7294  0749  01DF               	clrf	___flmul@aexp
  7295  074A  0ADF               	incf	___flmul@aexp,f
  7296  074B  2F51               	goto	l3225
  7297  074C                     l720:
  7298  074C  1C65               	btfss	___flmul@prod,0
  7299  074D  2F4F               	goto	u4681
  7300  074E  2F50               	goto	u4680
  7301  074F                     u4681:
  7302  074F  2F51               	goto	l3225
  7303  0750                     u4680:
  7304  0750  2F49               	goto	l3221
  7305  0751                     l3225:
  7306  0751  085F               	movf	___flmul@aexp,w
  7307  0752  1903               	btfsc	3,2
  7308  0753  2F55               	goto	u4691
  7309  0754  2F56               	goto	u4690
  7310  0755                     u4691:
  7311  0755  2F87               	goto	l3235
  7312  0756                     u4690:
  7313  0756                     l3227:
  7314  0756  3001               	movlw	1
  7315  0757  07E5               	addwf	___flmul@prod,f
  7316  0758  3000               	movlw	0
  7317  0759  1803               	skipnc
  7318  075A  3001               	movlw	1
  7319  075B  07E6               	addwf	___flmul@prod+1,f
  7320  075C  3000               	movlw	0
  7321  075D  1803               	skipnc
  7322  075E  3001               	movlw	1
  7323  075F  07E7               	addwf	___flmul@prod+2,f
  7324  0760  3000               	movlw	0
  7325  0761  1803               	skipnc
  7326  0762  3001               	movlw	1
  7327  0763  07E8               	addwf	___flmul@prod+3,f
  7328  0764                     l3229:
  7329  0764  1C68               	btfss	___flmul@prod+3,0
  7330  0765  2F67               	goto	u4701
  7331  0766  2F68               	goto	u4700
  7332  0767                     u4701:
  7333  0767  2F87               	goto	l3235
  7334  0768                     u4700:
  7335  0768                     l3231:
  7336  0768  0865               	movf	___flmul@prod,w
  7337  0769  00D9               	movwf	??___flmul
  7338  076A  0866               	movf	___flmul@prod+1,w
  7339  076B  00DA               	movwf	??___flmul+1
  7340  076C  0867               	movf	___flmul@prod+2,w
  7341  076D  00DB               	movwf	??___flmul+2
  7342  076E  0868               	movf	___flmul@prod+3,w
  7343  076F  00DC               	movwf	??___flmul+3
  7344  0770  3001               	movlw	1
  7345  0771  00DD               	movwf	??___flmul+4
  7346  0772                     u4715:
  7347  0772  0D5C               	rlf	??___flmul+3,w
  7348  0773  0CDC               	rrf	??___flmul+3,f
  7349  0774  0CDB               	rrf	??___flmul+2,f
  7350  0775  0CDA               	rrf	??___flmul+1,f
  7351  0776  0CD9               	rrf	??___flmul,f
  7352  0777                     u4710:
  7353  0777  0BDD               	decfsz	??___flmul+4,f
  7354  0778  2F72               	goto	u4715
  7355  0779  085C               	movf	??___flmul+3,w
  7356  077A  00E8               	movwf	___flmul@prod+3
  7357  077B  085B               	movf	??___flmul+2,w
  7358  077C  00E7               	movwf	___flmul@prod+2
  7359  077D  085A               	movf	??___flmul+1,w
  7360  077E  00E6               	movwf	___flmul@prod+1
  7361  077F  0859               	movf	??___flmul,w
  7362  0780  00E5               	movwf	___flmul@prod
  7363  0781                     l3233:
  7364  0781  3001               	movlw	1
  7365  0782  07E9               	addwf	___flmul@temp,f
  7366  0783  1803               	skipnc
  7367  0784  0AEA               	incf	___flmul@temp+1,f
  7368  0785  3000               	movlw	0
  7369  0786  07EA               	addwf	___flmul@temp+1,f
  7370  0787                     l3235:
  7371  0787  086A               	movf	___flmul@temp+1,w
  7372  0788  3A80               	xorlw	128
  7373  0789  00FF               	movwf	btemp+1
  7374  078A  3080               	movlw	128
  7375  078B  027F               	subwf	btemp+1,w
  7376  078C  1D03               	skipz
  7377  078D  2F90               	goto	u4725
  7378  078E  30FF               	movlw	255
  7379  078F  0269               	subwf	___flmul@temp,w
  7380  0790                     u4725:
  7381  0790  1C03               	skipc
  7382  0791  2F93               	goto	u4721
  7383  0792  2F94               	goto	u4720
  7384  0793                     u4721:
  7385  0793  2F9F               	goto	l3239
  7386  0794                     u4720:
  7387  0794                     l3237:
  7388  0794  307F               	movlw	127
  7389  0795  1283               	bcf	3,5	;RP0=0, select bank0
  7390  0796  1303               	bcf	3,6	;RP1=0, select bank0
  7391  0797  00E8               	movwf	___flmul@prod+3
  7392  0798  3080               	movlw	128
  7393  0799  00E7               	movwf	___flmul@prod+2
  7394  079A  3000               	movlw	0
  7395  079B  00E6               	movwf	___flmul@prod+1
  7396  079C  3000               	movlw	0
  7397  079D  00E5               	movwf	___flmul@prod
  7398  079E  2FD4               	goto	l726
  7399  079F                     l3239:
  7400  079F  1283               	bcf	3,5	;RP0=0, select bank0
  7401  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  7402  07A1  086A               	movf	___flmul@temp+1,w
  7403  07A2  3A80               	xorlw	128
  7404  07A3  00FF               	movwf	btemp+1
  7405  07A4  3080               	movlw	128
  7406  07A5  027F               	subwf	btemp+1,w
  7407  07A6  1D03               	skipz
  7408  07A7  2FAA               	goto	u4735
  7409  07A8  3001               	movlw	1
  7410  07A9  0269               	subwf	___flmul@temp,w
  7411  07AA                     u4735:
  7412  07AA  1803               	skipnc
  7413  07AB  2FAD               	goto	u4731
  7414  07AC  2FAE               	goto	u4730
  7415  07AD                     u4731:
  7416  07AD  2FBA               	goto	l3245
  7417  07AE                     u4730:
  7418  07AE                     l3241:
  7419  07AE  3000               	movlw	0
  7420  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  7421  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  7422  07B1  00E8               	movwf	___flmul@prod+3
  7423  07B2  3000               	movlw	0
  7424  07B3  00E7               	movwf	___flmul@prod+2
  7425  07B4  3000               	movlw	0
  7426  07B5  00E6               	movwf	___flmul@prod+1
  7427  07B6  3000               	movlw	0
  7428  07B7  00E5               	movwf	___flmul@prod
  7429  07B8                     l3243:
  7430  07B8  01DE               	clrf	___flmul@sign
  7431  07B9  2FD4               	goto	l726
  7432  07BA                     l3245:
  7433  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  7434  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  7435  07BC  0869               	movf	___flmul@temp,w
  7436  07BD  00D9               	movwf	??___flmul
  7437  07BE  0859               	movf	??___flmul,w
  7438  07BF  00E4               	movwf	___flmul@bexp
  7439  07C0  30FF               	movlw	255
  7440  07C1  05E5               	andwf	___flmul@prod,f
  7441  07C2  30FF               	movlw	255
  7442  07C3  05E6               	andwf	___flmul@prod+1,f
  7443  07C4  307F               	movlw	127
  7444  07C5  05E7               	andwf	___flmul@prod+2,f
  7445  07C6  3000               	movlw	0
  7446  07C7  05E8               	andwf	___flmul@prod+3,f
  7447  07C8                     l3247:
  7448  07C8  1C64               	btfss	___flmul@bexp,0
  7449  07C9  2FCB               	goto	u4741
  7450  07CA  2FCC               	goto	u4740
  7451  07CB                     u4741:
  7452  07CB  2FCD               	goto	l3251
  7453  07CC                     u4740:
  7454  07CC                     l3249:
  7455  07CC  17E7               	bsf	___flmul@prod+2,7
  7456  07CD                     l3251:
  7457  07CD  0864               	movf	___flmul@bexp,w
  7458  07CE  00D9               	movwf	??___flmul
  7459  07CF  1003               	clrc
  7460  07D0  0C59               	rrf	??___flmul,w
  7461  07D1  00DA               	movwf	??___flmul+1
  7462  07D2  085A               	movf	??___flmul+1,w
  7463  07D3  00E8               	movwf	___flmul@prod+3
  7464  07D4                     l726:
  7465  07D4  085E               	movf	___flmul@sign,w
  7466  07D5  00D9               	movwf	??___flmul
  7467  07D6  0859               	movf	??___flmul,w
  7468  07D7  04E8               	iorwf	___flmul@prod+3,f
  7469  07D8                     l3253:
  7470  07D8  0868               	movf	___flmul@prod+3,w
  7471  07D9  00D4               	movwf	?___flmul+3
  7472  07DA  0867               	movf	___flmul@prod+2,w
  7473  07DB  00D3               	movwf	?___flmul+2
  7474  07DC  0866               	movf	___flmul@prod+1,w
  7475  07DD  00D2               	movwf	?___flmul+1
  7476  07DE  0865               	movf	___flmul@prod,w
  7477  07DF  00D1               	movwf	?___flmul
  7478  07E0                     l714:
  7479  07E0  0008               	return
  7480  07E1                     __end_of___flmul:
  7481                           
  7482                           	psect	text25
  7483  1321                     __ptext25:	
  7484 ;; *************** function __Umul8_16 *****************
  7485 ;; Defined at:
  7486 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  multiplier      1    wreg     unsigned char 
  7489 ;;  multiplicand    1    2[COMMON] unsigned char 
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;  multiplier      1    4[BANK0 ] unsigned char 
  7492 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  7493 ;;  product         2    0[BANK0 ] unsigned int 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  2    2[COMMON] unsigned int 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         2       0       0       0       0
  7504 ;;      Locals:         0       5       0       0       0
  7505 ;;      Temps:          2       0       0       0       0
  7506 ;;      Totals:         4       5       0       0       0
  7507 ;;Total ram usage:        9 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    1
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		___flmul
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           
  7518                           ;psect for function __Umul8_16
  7519  1321                     __Umul8_16:
  7520                           
  7521                           ;incstack = 0
  7522                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7523                           ;__Umul8_16@multiplier stored from wreg
  7524  1321  1283               	bcf	3,5	;RP0=0, select bank0
  7525  1322  1303               	bcf	3,6	;RP1=0, select bank0
  7526  1323  00A4               	movwf	__Umul8_16@multiplier
  7527  1324                     l2997:
  7528  1324  01A0               	clrf	__Umul8_16@product
  7529  1325  01A1               	clrf	__Umul8_16@product+1
  7530  1326                     l2999:
  7531  1326  0872               	movf	__Umul8_16@multiplicand,w
  7532  1327  00F4               	movwf	??__Umul8_16
  7533  1328  01F5               	clrf	??__Umul8_16+1
  7534  1329  0874               	movf	??__Umul8_16,w
  7535  132A  00A2               	movwf	__Umul8_16@word_mpld
  7536  132B  0875               	movf	??__Umul8_16+1,w
  7537  132C  00A3               	movwf	__Umul8_16@word_mpld+1
  7538  132D                     l3001:
  7539  132D  1C24               	btfss	__Umul8_16@multiplier,0
  7540  132E  2B30               	goto	u4101
  7541  132F  2B31               	goto	u4100
  7542  1330                     u4101:
  7543  1330  2B37               	goto	l733
  7544  1331                     u4100:
  7545  1331                     l3003:
  7546  1331  0822               	movf	__Umul8_16@word_mpld,w
  7547  1332  07A0               	addwf	__Umul8_16@product,f
  7548  1333  1803               	skipnc
  7549  1334  0AA1               	incf	__Umul8_16@product+1,f
  7550  1335  0823               	movf	__Umul8_16@word_mpld+1,w
  7551  1336  07A1               	addwf	__Umul8_16@product+1,f
  7552  1337                     l733:
  7553  1337  3001               	movlw	1
  7554  1338                     u4115:
  7555  1338  1003               	clrc
  7556  1339  0DA2               	rlf	__Umul8_16@word_mpld,f
  7557  133A  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  7558  133B  3EFF               	addlw	-1
  7559  133C  1D03               	skipz
  7560  133D  2B38               	goto	u4115
  7561  133E  1003               	clrc
  7562  133F  0CA4               	rrf	__Umul8_16@multiplier,f
  7563  1340                     l3005:
  7564  1340  0824               	movf	__Umul8_16@multiplier,w
  7565  1341  1D03               	btfss	3,2
  7566  1342  2B44               	goto	u4121
  7567  1343  2B45               	goto	u4120
  7568  1344                     u4121:
  7569  1344  2B2D               	goto	l3001
  7570  1345                     u4120:
  7571  1345                     l3007:
  7572  1345  0821               	movf	__Umul8_16@product+1,w
  7573  1346  00F3               	movwf	?__Umul8_16+1
  7574  1347  0820               	movf	__Umul8_16@product,w
  7575  1348  00F2               	movwf	?__Umul8_16
  7576  1349                     l735:
  7577  1349  0008               	return
  7578  134A                     __end_of__Umul8_16:
  7579                           
  7580                           	psect	text26
  7581  16A0                     __ptext26:	
  7582 ;; *************** function ___flge *****************
  7583 ;; Defined at:
  7584 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  ff1             4    2[COMMON] unsigned int 
  7587 ;;  ff2             4    6[COMMON] unsigned int 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;		None               void
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7599 ;;      Params:         8       0       0       0       0
  7600 ;;      Locals:         0       0       0       0       0
  7601 ;;      Temps:          0       4       0       0       0
  7602 ;;      Totals:         8       4       0       0       0
  7603 ;;Total ram usage:       12 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    1
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_ADC_convert
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           
  7614                           ;psect for function ___flge
  7615  16A0                     ___flge:
  7616  16A0                     l2301:	
  7617                           ;incstack = 0
  7618                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7619                           
  7620  16A0  3000               	movlw	0
  7621  16A1  0572               	andwf	___flge@ff1,w
  7622  16A2  1283               	bcf	3,5	;RP0=0, select bank0
  7623  16A3  1303               	bcf	3,6	;RP1=0, select bank0
  7624  16A4  00A0               	movwf	??___flge
  7625  16A5  3000               	movlw	0
  7626  16A6  0573               	andwf	___flge@ff1+1,w
  7627  16A7  00A1               	movwf	??___flge+1
  7628  16A8  3080               	movlw	128
  7629  16A9  0574               	andwf	___flge@ff1+2,w
  7630  16AA  00A2               	movwf	??___flge+2
  7631  16AB  307F               	movlw	127
  7632  16AC  0575               	andwf	___flge@ff1+3,w
  7633  16AD  00A3               	movwf	??___flge+3
  7634  16AE  0823               	movf	??___flge+3,w
  7635  16AF  0422               	iorwf	??___flge+2,w
  7636  16B0  0421               	iorwf	??___flge+1,w
  7637  16B1  0420               	iorwf	??___flge,w
  7638  16B2  1D03               	skipz
  7639  16B3  2EB5               	goto	u2891
  7640  16B4  2EB6               	goto	u2890
  7641  16B5                     u2891:
  7642  16B5  2EBE               	goto	l499
  7643  16B6                     u2890:
  7644  16B6                     l2303:
  7645  16B6  3000               	movlw	0
  7646  16B7  00F5               	movwf	___flge@ff1+3
  7647  16B8  3000               	movlw	0
  7648  16B9  00F4               	movwf	___flge@ff1+2
  7649  16BA  3000               	movlw	0
  7650  16BB  00F3               	movwf	___flge@ff1+1
  7651  16BC  3000               	movlw	0
  7652  16BD  00F2               	movwf	___flge@ff1
  7653  16BE                     l499:
  7654  16BE  3000               	movlw	0
  7655  16BF  0576               	andwf	___flge@ff2,w
  7656  16C0  00A0               	movwf	??___flge
  7657  16C1  3000               	movlw	0
  7658  16C2  0577               	andwf	___flge@ff2+1,w
  7659  16C3  00A1               	movwf	??___flge+1
  7660  16C4  3080               	movlw	128
  7661  16C5  0578               	andwf	___flge@ff2+2,w
  7662  16C6  00A2               	movwf	??___flge+2
  7663  16C7  307F               	movlw	127
  7664  16C8  0579               	andwf	___flge@ff2+3,w
  7665  16C9  00A3               	movwf	??___flge+3
  7666  16CA  0823               	movf	??___flge+3,w
  7667  16CB  0422               	iorwf	??___flge+2,w
  7668  16CC  0421               	iorwf	??___flge+1,w
  7669  16CD  0420               	iorwf	??___flge,w
  7670  16CE  1D03               	skipz
  7671  16CF  2ED1               	goto	u2901
  7672  16D0  2ED2               	goto	u2900
  7673  16D1                     u2901:
  7674  16D1  2EDA               	goto	l2307
  7675  16D2                     u2900:
  7676  16D2                     l2305:
  7677  16D2  3000               	movlw	0
  7678  16D3  00F9               	movwf	___flge@ff2+3
  7679  16D4  3000               	movlw	0
  7680  16D5  00F8               	movwf	___flge@ff2+2
  7681  16D6  3000               	movlw	0
  7682  16D7  00F7               	movwf	___flge@ff2+1
  7683  16D8  3000               	movlw	0
  7684  16D9  00F6               	movwf	___flge@ff2
  7685  16DA                     l2307:
  7686  16DA  1FF5               	btfss	___flge@ff1+3,7
  7687  16DB  2EDD               	goto	u2911
  7688  16DC  2EDE               	goto	u2910
  7689  16DD                     u2911:
  7690  16DD  2F02               	goto	l2311
  7691  16DE                     u2910:
  7692  16DE                     l2309:
  7693  16DE  3000               	movlw	0
  7694  16DF  00A0               	movwf	??___flge
  7695  16E0  3000               	movlw	0
  7696  16E1  00A1               	movwf	??___flge+1
  7697  16E2  3000               	movlw	0
  7698  16E3  00A2               	movwf	??___flge+2
  7699  16E4  3080               	movlw	128
  7700  16E5  00A3               	movwf	??___flge+3
  7701  16E6  0872               	movf	___flge@ff1,w
  7702  16E7  02A0               	subwf	??___flge,f
  7703  16E8  0873               	movf	___flge@ff1+1,w
  7704  16E9  1C03               	skipc
  7705  16EA  0F73               	incfsz	___flge@ff1+1,w
  7706  16EB  2EED               	goto	u2921
  7707  16EC  2EEE               	goto	u2922
  7708  16ED                     u2921:
  7709  16ED  02A1               	subwf	??___flge+1,f
  7710  16EE                     u2922:
  7711  16EE  0874               	movf	___flge@ff1+2,w
  7712  16EF  1C03               	skipc
  7713  16F0  0F74               	incfsz	___flge@ff1+2,w
  7714  16F1  2EF3               	goto	u2923
  7715  16F2  2EF4               	goto	u2924
  7716  16F3                     u2923:
  7717  16F3  02A2               	subwf	??___flge+2,f
  7718  16F4                     u2924:
  7719  16F4  0875               	movf	___flge@ff1+3,w
  7720  16F5  1C03               	skipc
  7721  16F6  0F75               	incfsz	___flge@ff1+3,w
  7722  16F7  2EF9               	goto	u2925
  7723  16F8  2EFA               	goto	u2926
  7724  16F9                     u2925:
  7725  16F9  02A3               	subwf	??___flge+3,f
  7726  16FA                     u2926:
  7727  16FA  0823               	movf	??___flge+3,w
  7728  16FB  00F5               	movwf	___flge@ff1+3
  7729  16FC  0822               	movf	??___flge+2,w
  7730  16FD  00F4               	movwf	___flge@ff1+2
  7731  16FE  0821               	movf	??___flge+1,w
  7732  16FF  00F3               	movwf	___flge@ff1+1
  7733  1700  0820               	movf	??___flge,w
  7734  1701  00F2               	movwf	___flge@ff1
  7735  1702                     l2311:
  7736  1702  1FF9               	btfss	___flge@ff2+3,7
  7737  1703  2F05               	goto	u2931
  7738  1704  2F06               	goto	u2930
  7739  1705                     u2931:
  7740  1705  2F2A               	goto	l502
  7741  1706                     u2930:
  7742  1706                     l2313:
  7743  1706  3000               	movlw	0
  7744  1707  00A0               	movwf	??___flge
  7745  1708  3000               	movlw	0
  7746  1709  00A1               	movwf	??___flge+1
  7747  170A  3000               	movlw	0
  7748  170B  00A2               	movwf	??___flge+2
  7749  170C  3080               	movlw	128
  7750  170D  00A3               	movwf	??___flge+3
  7751  170E  0876               	movf	___flge@ff2,w
  7752  170F  02A0               	subwf	??___flge,f
  7753  1710  0877               	movf	___flge@ff2+1,w
  7754  1711  1C03               	skipc
  7755  1712  0F77               	incfsz	___flge@ff2+1,w
  7756  1713  2F15               	goto	u2941
  7757  1714  2F16               	goto	u2942
  7758  1715                     u2941:
  7759  1715  02A1               	subwf	??___flge+1,f
  7760  1716                     u2942:
  7761  1716  0878               	movf	___flge@ff2+2,w
  7762  1717  1C03               	skipc
  7763  1718  0F78               	incfsz	___flge@ff2+2,w
  7764  1719  2F1B               	goto	u2943
  7765  171A  2F1C               	goto	u2944
  7766  171B                     u2943:
  7767  171B  02A2               	subwf	??___flge+2,f
  7768  171C                     u2944:
  7769  171C  0879               	movf	___flge@ff2+3,w
  7770  171D  1C03               	skipc
  7771  171E  0F79               	incfsz	___flge@ff2+3,w
  7772  171F  2F21               	goto	u2945
  7773  1720  2F22               	goto	u2946
  7774  1721                     u2945:
  7775  1721  02A3               	subwf	??___flge+3,f
  7776  1722                     u2946:
  7777  1722  0823               	movf	??___flge+3,w
  7778  1723  00F9               	movwf	___flge@ff2+3
  7779  1724  0822               	movf	??___flge+2,w
  7780  1725  00F8               	movwf	___flge@ff2+2
  7781  1726  0821               	movf	??___flge+1,w
  7782  1727  00F7               	movwf	___flge@ff2+1
  7783  1728  0820               	movf	??___flge,w
  7784  1729  00F6               	movwf	___flge@ff2
  7785  172A                     l502:
  7786  172A  3080               	movlw	128
  7787  172B  06F5               	xorwf	___flge@ff1+3,f
  7788  172C  3080               	movlw	128
  7789  172D  06F9               	xorwf	___flge@ff2+3,f
  7790  172E  0879               	movf	___flge@ff2+3,w
  7791  172F  0275               	subwf	___flge@ff1+3,w
  7792  1730  1D03               	skipz
  7793  1731  2F3C               	goto	u2955
  7794  1732  0878               	movf	___flge@ff2+2,w
  7795  1733  0274               	subwf	___flge@ff1+2,w
  7796  1734  1D03               	skipz
  7797  1735  2F3C               	goto	u2955
  7798  1736  0877               	movf	___flge@ff2+1,w
  7799  1737  0273               	subwf	___flge@ff1+1,w
  7800  1738  1D03               	skipz
  7801  1739  2F3C               	goto	u2955
  7802  173A  0876               	movf	___flge@ff2,w
  7803  173B  0272               	subwf	___flge@ff1,w
  7804  173C                     u2955:
  7805  173C  1803               	skipnc
  7806  173D  2F3F               	goto	u2951
  7807  173E  2F40               	goto	u2950
  7808  173F                     u2951:
  7809  173F  2F42               	goto	l2317
  7810  1740                     u2950:
  7811  1740                     l2315:
  7812  1740  1003               	clrc
  7813  1741  2F43               	goto	l503
  7814  1742                     l2317:
  7815  1742  1403               	setc
  7816  1743                     l503:
  7817  1743  0008               	return
  7818  1744                     __end_of___flge:
  7819                           
  7820                           	psect	text27
  7821  0883                     __ptext27:	
  7822 ;; *************** function ___fldiv *****************
  7823 ;; Defined at:
  7824 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  a               4   23[BANK0 ] unsigned int 
  7827 ;;  b               4   27[BANK0 ] unsigned int 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  grs             4   43[BANK0 ] unsigned long 
  7830 ;;  rem             4   36[BANK0 ] unsigned long 
  7831 ;;  new_exp         2   41[BANK0 ] int 
  7832 ;;  aexp            1   48[BANK0 ] unsigned char 
  7833 ;;  bexp            1   47[BANK0 ] unsigned char 
  7834 ;;  sign            1   40[BANK0 ] unsigned char 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  4   23[BANK0 ] unsigned char 
  7837 ;; Registers used:
  7838 ;;		wreg, status,2, status,0, btemp+1
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7844 ;;      Params:         0       8       0       0       0
  7845 ;;      Locals:         0      13       0       0       0
  7846 ;;      Temps:          0       5       0       0       0
  7847 ;;      Totals:         0      26       0       0       0
  7848 ;;Total ram usage:       26 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    1
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		_main
  7855 ;;		_ADC_convert
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           
  7860                           ;psect for function ___fldiv
  7861  0883                     ___fldiv:
  7862  0883                     l2363:	
  7863                           ;incstack = 0
  7864                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7865                           
  7866  0883  1283               	bcf	3,5	;RP0=0, select bank0
  7867  0884  1303               	bcf	3,6	;RP1=0, select bank0
  7868  0885  083E               	movf	___fldiv@b+3,w
  7869  0886  3980               	andlw	128
  7870  0887  00BF               	movwf	??___fldiv
  7871  0888  083F               	movf	??___fldiv,w
  7872  0889  00C8               	movwf	___fldiv@sign
  7873  088A                     l2365:
  7874  088A  083E               	movf	___fldiv@b+3,w
  7875  088B  00BF               	movwf	??___fldiv
  7876  088C  073F               	addwf	??___fldiv,w
  7877  088D  00C0               	movwf	??___fldiv+1
  7878  088E  0840               	movf	??___fldiv+1,w
  7879  088F  00CF               	movwf	___fldiv@bexp
  7880  0890                     l2367:
  7881  0890  1FBD               	btfss	___fldiv@b+2,7
  7882  0891  2893               	goto	u3061
  7883  0892  2894               	goto	u3060
  7884  0893                     u3061:
  7885  0893  2895               	goto	l2371
  7886  0894                     u3060:
  7887  0894                     l2369:
  7888  0894  144F               	bsf	___fldiv@bexp,0
  7889  0895                     l2371:
  7890  0895  084F               	movf	___fldiv@bexp,w
  7891  0896  1903               	btfsc	3,2
  7892  0897  2899               	goto	u3071
  7893  0898  289A               	goto	u3070
  7894  0899                     u3071:
  7895  0899  28AA               	goto	l2381
  7896  089A                     u3070:
  7897  089A                     l2373:
  7898  089A  0A4F               	incf	___fldiv@bexp,w
  7899  089B  1D03               	btfss	3,2
  7900  089C  289E               	goto	u3081
  7901  089D  289F               	goto	u3080
  7902  089E                     u3081:
  7903  089E  28A7               	goto	l2377
  7904  089F                     u3080:
  7905  089F                     l2375:
  7906  089F  3000               	movlw	0
  7907  08A0  00BE               	movwf	___fldiv@b+3
  7908  08A1  3000               	movlw	0
  7909  08A2  00BD               	movwf	___fldiv@b+2
  7910  08A3  3000               	movlw	0
  7911  08A4  00BC               	movwf	___fldiv@b+1
  7912  08A5  3000               	movlw	0
  7913  08A6  00BB               	movwf	___fldiv@b
  7914  08A7                     l2377:
  7915  08A7  17BD               	bsf	___fldiv@b+2,7
  7916  08A8                     l2379:
  7917  08A8  01BE               	clrf	___fldiv@b+3
  7918  08A9  28B2               	goto	l2383
  7919  08AA                     l2381:
  7920  08AA  3000               	movlw	0
  7921  08AB  00BE               	movwf	___fldiv@b+3
  7922  08AC  3000               	movlw	0
  7923  08AD  00BD               	movwf	___fldiv@b+2
  7924  08AE  3000               	movlw	0
  7925  08AF  00BC               	movwf	___fldiv@b+1
  7926  08B0  3000               	movlw	0
  7927  08B1  00BB               	movwf	___fldiv@b
  7928  08B2                     l2383:
  7929  08B2  083A               	movf	___fldiv@a+3,w
  7930  08B3  3980               	andlw	128
  7931  08B4  00BF               	movwf	??___fldiv
  7932  08B5  083F               	movf	??___fldiv,w
  7933  08B6  06C8               	xorwf	___fldiv@sign,f
  7934  08B7                     l2385:
  7935  08B7  083A               	movf	___fldiv@a+3,w
  7936  08B8  00BF               	movwf	??___fldiv
  7937  08B9  073F               	addwf	??___fldiv,w
  7938  08BA  00C0               	movwf	??___fldiv+1
  7939  08BB  0840               	movf	??___fldiv+1,w
  7940  08BC  00D0               	movwf	___fldiv@aexp
  7941  08BD                     l2387:
  7942  08BD  1FB9               	btfss	___fldiv@a+2,7
  7943  08BE  28C0               	goto	u3091
  7944  08BF  28C1               	goto	u3090
  7945  08C0                     u3091:
  7946  08C0  28C2               	goto	l2391
  7947  08C1                     u3090:
  7948  08C1                     l2389:
  7949  08C1  1450               	bsf	___fldiv@aexp,0
  7950  08C2                     l2391:
  7951  08C2  0850               	movf	___fldiv@aexp,w
  7952  08C3  1903               	btfsc	3,2
  7953  08C4  28C6               	goto	u3101
  7954  08C5  28C7               	goto	u3100
  7955  08C6                     u3101:
  7956  08C6  28D7               	goto	l2401
  7957  08C7                     u3100:
  7958  08C7                     l2393:
  7959  08C7  0A50               	incf	___fldiv@aexp,w
  7960  08C8  1D03               	btfss	3,2
  7961  08C9  28CB               	goto	u3111
  7962  08CA  28CC               	goto	u3110
  7963  08CB                     u3111:
  7964  08CB  28D4               	goto	l2397
  7965  08CC                     u3110:
  7966  08CC                     l2395:
  7967  08CC  3000               	movlw	0
  7968  08CD  00BA               	movwf	___fldiv@a+3
  7969  08CE  3000               	movlw	0
  7970  08CF  00B9               	movwf	___fldiv@a+2
  7971  08D0  3000               	movlw	0
  7972  08D1  00B8               	movwf	___fldiv@a+1
  7973  08D2  3000               	movlw	0
  7974  08D3  00B7               	movwf	___fldiv@a
  7975  08D4                     l2397:
  7976  08D4  17B9               	bsf	___fldiv@a+2,7
  7977  08D5                     l2399:
  7978  08D5  01BA               	clrf	___fldiv@a+3
  7979  08D6  28DF               	goto	l674
  7980  08D7                     l2401:
  7981  08D7  3000               	movlw	0
  7982  08D8  00BA               	movwf	___fldiv@a+3
  7983  08D9  3000               	movlw	0
  7984  08DA  00B9               	movwf	___fldiv@a+2
  7985  08DB  3000               	movlw	0
  7986  08DC  00B8               	movwf	___fldiv@a+1
  7987  08DD  3000               	movlw	0
  7988  08DE  00B7               	movwf	___fldiv@a
  7989  08DF                     l674:
  7990  08DF  083A               	movf	___fldiv@a+3,w
  7991  08E0  0439               	iorwf	___fldiv@a+2,w
  7992  08E1  0438               	iorwf	___fldiv@a+1,w
  7993  08E2  0437               	iorwf	___fldiv@a,w
  7994  08E3  1D03               	skipz
  7995  08E4  28E6               	goto	u3121
  7996  08E5  28E7               	goto	u3120
  7997  08E6                     u3121:
  7998  08E6  2900               	goto	l2411
  7999  08E7                     u3120:
  8000  08E7                     l2403:
  8001  08E7  3000               	movlw	0
  8002  08E8  00BE               	movwf	___fldiv@b+3
  8003  08E9  3000               	movlw	0
  8004  08EA  00BD               	movwf	___fldiv@b+2
  8005  08EB  3000               	movlw	0
  8006  08EC  00BC               	movwf	___fldiv@b+1
  8007  08ED  3000               	movlw	0
  8008  08EE  00BB               	movwf	___fldiv@b
  8009  08EF  3080               	movlw	128
  8010  08F0  04BD               	iorwf	___fldiv@b+2,f
  8011  08F1  307F               	movlw	127
  8012  08F2  04BE               	iorwf	___fldiv@b+3,f
  8013  08F3                     l2405:
  8014  08F3  0848               	movf	___fldiv@sign,w
  8015  08F4  00BF               	movwf	??___fldiv
  8016  08F5  083F               	movf	??___fldiv,w
  8017  08F6  04BE               	iorwf	___fldiv@b+3,f
  8018  08F7                     l2407:
  8019  08F7  083E               	movf	___fldiv@b+3,w
  8020  08F8  00BA               	movwf	?___fldiv+3
  8021  08F9  083D               	movf	___fldiv@b+2,w
  8022  08FA  00B9               	movwf	?___fldiv+2
  8023  08FB  083C               	movf	___fldiv@b+1,w
  8024  08FC  00B8               	movwf	?___fldiv+1
  8025  08FD  083B               	movf	___fldiv@b,w
  8026  08FE  00B7               	movwf	?___fldiv
  8027  08FF  2A5F               	goto	l676
  8028  0900                     l2411:
  8029  0900  084F               	movf	___fldiv@bexp,w
  8030  0901  1D03               	btfss	3,2
  8031  0902  2904               	goto	u3131
  8032  0903  2905               	goto	u3130
  8033  0904                     u3131:
  8034  0904  290E               	goto	l2417
  8035  0905                     u3130:
  8036  0905                     l2413:
  8037  0905  3000               	movlw	0
  8038  0906  00BA               	movwf	?___fldiv+3
  8039  0907  3000               	movlw	0
  8040  0908  00B9               	movwf	?___fldiv+2
  8041  0909  3000               	movlw	0
  8042  090A  00B8               	movwf	?___fldiv+1
  8043  090B  3000               	movlw	0
  8044  090C  00B7               	movwf	?___fldiv
  8045  090D  2A5F               	goto	l676
  8046  090E                     l2417:
  8047  090E  084F               	movf	___fldiv@bexp,w
  8048  090F  00BF               	movwf	??___fldiv
  8049  0910  01C0               	clrf	??___fldiv+1
  8050  0911  0840               	movf	??___fldiv+1,w
  8051  0912  00C2               	movwf	??___fldiv+3
  8052  0913  0850               	movf	___fldiv@aexp,w
  8053  0914  023F               	subwf	??___fldiv,w
  8054  0915  00C1               	movwf	??___fldiv+2
  8055  0916  1C03               	skipc
  8056  0917  03C2               	decf	??___fldiv+3,f
  8057  0918  0841               	movf	??___fldiv+2,w
  8058  0919  3E7F               	addlw	127
  8059  091A  00C9               	movwf	___fldiv@new_exp
  8060  091B  0842               	movf	??___fldiv+3,w
  8061  091C  1803               	skipnc
  8062  091D  3E01               	addlw	1
  8063  091E  3E00               	addlw	0
  8064  091F  00CA               	movwf	___fldiv@new_exp+1
  8065  0920                     l2419:
  8066  0920  083E               	movf	___fldiv@b+3,w
  8067  0921  00C7               	movwf	___fldiv@rem+3
  8068  0922  083D               	movf	___fldiv@b+2,w
  8069  0923  00C6               	movwf	___fldiv@rem+2
  8070  0924  083C               	movf	___fldiv@b+1,w
  8071  0925  00C5               	movwf	___fldiv@rem+1
  8072  0926  083B               	movf	___fldiv@b,w
  8073  0927  00C4               	movwf	___fldiv@rem
  8074  0928                     l2421:
  8075  0928  3000               	movlw	0
  8076  0929  00BE               	movwf	___fldiv@b+3
  8077  092A  3000               	movlw	0
  8078  092B  00BD               	movwf	___fldiv@b+2
  8079  092C  3000               	movlw	0
  8080  092D  00BC               	movwf	___fldiv@b+1
  8081  092E  3000               	movlw	0
  8082  092F  00BB               	movwf	___fldiv@b
  8083  0930                     l2423:
  8084  0930  3000               	movlw	0
  8085  0931  00CE               	movwf	___fldiv@grs+3
  8086  0932  3000               	movlw	0
  8087  0933  00CD               	movwf	___fldiv@grs+2
  8088  0934  3000               	movlw	0
  8089  0935  00CC               	movwf	___fldiv@grs+1
  8090  0936  3000               	movlw	0
  8091  0937  00CB               	movwf	___fldiv@grs
  8092  0938                     l2425:
  8093  0938  01D0               	clrf	___fldiv@aexp
  8094  0939  2984               	goto	l2445
  8095  093A                     l2427:
  8096  093A  0850               	movf	___fldiv@aexp,w
  8097  093B  1903               	btfsc	3,2
  8098  093C  293E               	goto	u3141
  8099  093D  293F               	goto	u3140
  8100  093E                     u3141:
  8101  093E  295F               	goto	l2437
  8102  093F                     u3140:
  8103  093F                     l2429:
  8104  093F  3001               	movlw	1
  8105  0940  00BF               	movwf	??___fldiv
  8106  0941                     u3155:
  8107  0941  1003               	clrc
  8108  0942  0DC4               	rlf	___fldiv@rem,f
  8109  0943  0DC5               	rlf	___fldiv@rem+1,f
  8110  0944  0DC6               	rlf	___fldiv@rem+2,f
  8111  0945  0DC7               	rlf	___fldiv@rem+3,f
  8112  0946  0BBF               	decfsz	??___fldiv,f
  8113  0947  2941               	goto	u3155
  8114  0948  3001               	movlw	1
  8115  0949  00BF               	movwf	??___fldiv
  8116  094A                     u3165:
  8117  094A  1003               	clrc
  8118  094B  0DBB               	rlf	___fldiv@b,f
  8119  094C  0DBC               	rlf	___fldiv@b+1,f
  8120  094D  0DBD               	rlf	___fldiv@b+2,f
  8121  094E  0DBE               	rlf	___fldiv@b+3,f
  8122  094F  0BBF               	decfsz	??___fldiv,f
  8123  0950  294A               	goto	u3165
  8124  0951                     l2431:
  8125  0951  1FCE               	btfss	___fldiv@grs+3,7
  8126  0952  2954               	goto	u3171
  8127  0953  2955               	goto	u3170
  8128  0954                     u3171:
  8129  0954  2956               	goto	l2435
  8130  0955                     u3170:
  8131  0955                     l2433:
  8132  0955  143B               	bsf	___fldiv@b,0
  8133  0956                     l2435:
  8134  0956  3001               	movlw	1
  8135  0957  00BF               	movwf	??___fldiv
  8136  0958                     u3185:
  8137  0958  1003               	clrc
  8138  0959  0DCB               	rlf	___fldiv@grs,f
  8139  095A  0DCC               	rlf	___fldiv@grs+1,f
  8140  095B  0DCD               	rlf	___fldiv@grs+2,f
  8141  095C  0DCE               	rlf	___fldiv@grs+3,f
  8142  095D  0BBF               	decfsz	??___fldiv,f
  8143  095E  2958               	goto	u3185
  8144  095F                     l2437:
  8145  095F  083A               	movf	___fldiv@a+3,w
  8146  0960  0247               	subwf	___fldiv@rem+3,w
  8147  0961  1D03               	skipz
  8148  0962  296D               	goto	u3195
  8149  0963  0839               	movf	___fldiv@a+2,w
  8150  0964  0246               	subwf	___fldiv@rem+2,w
  8151  0965  1D03               	skipz
  8152  0966  296D               	goto	u3195
  8153  0967  0838               	movf	___fldiv@a+1,w
  8154  0968  0245               	subwf	___fldiv@rem+1,w
  8155  0969  1D03               	skipz
  8156  096A  296D               	goto	u3195
  8157  096B  0837               	movf	___fldiv@a,w
  8158  096C  0244               	subwf	___fldiv@rem,w
  8159  096D                     u3195:
  8160  096D  1C03               	skipc
  8161  096E  2970               	goto	u3191
  8162  096F  2971               	goto	u3190
  8163  0970                     u3191:
  8164  0970  2980               	goto	l2443
  8165  0971                     u3190:
  8166  0971                     l2439:
  8167  0971  174E               	bsf	___fldiv@grs+3,6
  8168  0972                     l2441:
  8169  0972  0837               	movf	___fldiv@a,w
  8170  0973  02C4               	subwf	___fldiv@rem,f
  8171  0974  0838               	movf	___fldiv@a+1,w
  8172  0975  1C03               	skipc
  8173  0976  0F38               	incfsz	___fldiv@a+1,w
  8174  0977  02C5               	subwf	___fldiv@rem+1,f
  8175  0978  0839               	movf	___fldiv@a+2,w
  8176  0979  1C03               	skipc
  8177  097A  0F39               	incfsz	___fldiv@a+2,w
  8178  097B  02C6               	subwf	___fldiv@rem+2,f
  8179  097C  083A               	movf	___fldiv@a+3,w
  8180  097D  1C03               	skipc
  8181  097E  0F3A               	incfsz	___fldiv@a+3,w
  8182  097F  02C7               	subwf	___fldiv@rem+3,f
  8183  0980                     l2443:
  8184  0980  3001               	movlw	1
  8185  0981  00BF               	movwf	??___fldiv
  8186  0982  083F               	movf	??___fldiv,w
  8187  0983  07D0               	addwf	___fldiv@aexp,f
  8188  0984                     l2445:
  8189  0984  301A               	movlw	26
  8190  0985  0250               	subwf	___fldiv@aexp,w
  8191  0986  1C03               	skipc
  8192  0987  2989               	goto	u3201
  8193  0988  298A               	goto	u3200
  8194  0989                     u3201:
  8195  0989  293A               	goto	l2427
  8196  098A                     u3200:
  8197  098A                     l2447:
  8198  098A  0847               	movf	___fldiv@rem+3,w
  8199  098B  0446               	iorwf	___fldiv@rem+2,w
  8200  098C  0445               	iorwf	___fldiv@rem+1,w
  8201  098D  0444               	iorwf	___fldiv@rem,w
  8202  098E  1903               	skipnz
  8203  098F  2991               	goto	u3211
  8204  0990  2992               	goto	u3210
  8205  0991                     u3211:
  8206  0991  29B1               	goto	l2461
  8207  0992                     u3210:
  8208  0992                     l2449:
  8209  0992  144B               	bsf	___fldiv@grs,0
  8210  0993  29B1               	goto	l2461
  8211  0994                     l2451:
  8212  0994  3001               	movlw	1
  8213  0995  00BF               	movwf	??___fldiv
  8214  0996                     u3225:
  8215  0996  1003               	clrc
  8216  0997  0DBB               	rlf	___fldiv@b,f
  8217  0998  0DBC               	rlf	___fldiv@b+1,f
  8218  0999  0DBD               	rlf	___fldiv@b+2,f
  8219  099A  0DBE               	rlf	___fldiv@b+3,f
  8220  099B  0BBF               	decfsz	??___fldiv,f
  8221  099C  2996               	goto	u3225
  8222  099D                     l2453:
  8223  099D  1FCE               	btfss	___fldiv@grs+3,7
  8224  099E  29A0               	goto	u3231
  8225  099F  29A1               	goto	u3230
  8226  09A0                     u3231:
  8227  09A0  29A2               	goto	l2457
  8228  09A1                     u3230:
  8229  09A1                     l2455:
  8230  09A1  143B               	bsf	___fldiv@b,0
  8231  09A2                     l2457:
  8232  09A2  3001               	movlw	1
  8233  09A3  00BF               	movwf	??___fldiv
  8234  09A4                     u3245:
  8235  09A4  1003               	clrc
  8236  09A5  0DCB               	rlf	___fldiv@grs,f
  8237  09A6  0DCC               	rlf	___fldiv@grs+1,f
  8238  09A7  0DCD               	rlf	___fldiv@grs+2,f
  8239  09A8  0DCE               	rlf	___fldiv@grs+3,f
  8240  09A9  0BBF               	decfsz	??___fldiv,f
  8241  09AA  29A4               	goto	u3245
  8242  09AB                     l2459:
  8243  09AB  30FF               	movlw	255
  8244  09AC  07C9               	addwf	___fldiv@new_exp,f
  8245  09AD  1803               	skipnc
  8246  09AE  0ACA               	incf	___fldiv@new_exp+1,f
  8247  09AF  30FF               	movlw	255
  8248  09B0  07CA               	addwf	___fldiv@new_exp+1,f
  8249  09B1                     l2461:
  8250  09B1  1FBD               	btfss	___fldiv@b+2,7
  8251  09B2  29B4               	goto	u3251
  8252  09B3  29B5               	goto	u3250
  8253  09B4                     u3251:
  8254  09B4  2994               	goto	l2451
  8255  09B5                     u3250:
  8256  09B5                     l2463:
  8257  09B5  01D0               	clrf	___fldiv@aexp
  8258  09B6                     l2465:
  8259  09B6  1FCE               	btfss	___fldiv@grs+3,7
  8260  09B7  29B9               	goto	u3261
  8261  09B8  29BA               	goto	u3260
  8262  09B9                     u3261:
  8263  09B9  29D6               	goto	l2473
  8264  09BA                     u3260:
  8265  09BA                     l2467:
  8266  09BA  30FF               	movlw	255
  8267  09BB  054B               	andwf	___fldiv@grs,w
  8268  09BC  00BF               	movwf	??___fldiv
  8269  09BD  30FF               	movlw	255
  8270  09BE  054C               	andwf	___fldiv@grs+1,w
  8271  09BF  00C0               	movwf	??___fldiv+1
  8272  09C0  30FF               	movlw	255
  8273  09C1  054D               	andwf	___fldiv@grs+2,w
  8274  09C2  00C1               	movwf	??___fldiv+2
  8275  09C3  307F               	movlw	127
  8276  09C4  054E               	andwf	___fldiv@grs+3,w
  8277  09C5  00C2               	movwf	??___fldiv+3
  8278  09C6  0842               	movf	??___fldiv+3,w
  8279  09C7  0441               	iorwf	??___fldiv+2,w
  8280  09C8  0440               	iorwf	??___fldiv+1,w
  8281  09C9  043F               	iorwf	??___fldiv,w
  8282  09CA  1903               	skipnz
  8283  09CB  29CD               	goto	u3271
  8284  09CC  29CE               	goto	u3270
  8285  09CD                     u3271:
  8286  09CD  29D1               	goto	l690
  8287  09CE                     u3270:
  8288  09CE                     l2469:
  8289  09CE  01D0               	clrf	___fldiv@aexp
  8290  09CF  0AD0               	incf	___fldiv@aexp,f
  8291  09D0  29D6               	goto	l2473
  8292  09D1                     l690:
  8293  09D1  1C3B               	btfss	___fldiv@b,0
  8294  09D2  29D4               	goto	u3281
  8295  09D3  29D5               	goto	u3280
  8296  09D4                     u3281:
  8297  09D4  29D6               	goto	l2473
  8298  09D5                     u3280:
  8299  09D5  29CE               	goto	l2469
  8300  09D6                     l2473:
  8301  09D6  0850               	movf	___fldiv@aexp,w
  8302  09D7  1903               	btfsc	3,2
  8303  09D8  29DA               	goto	u3291
  8304  09D9  29DB               	goto	u3290
  8305  09DA                     u3291:
  8306  09DA  2A0C               	goto	l2483
  8307  09DB                     u3290:
  8308  09DB                     l2475:
  8309  09DB  3001               	movlw	1
  8310  09DC  07BB               	addwf	___fldiv@b,f
  8311  09DD  3000               	movlw	0
  8312  09DE  1803               	skipnc
  8313  09DF  3001               	movlw	1
  8314  09E0  07BC               	addwf	___fldiv@b+1,f
  8315  09E1  3000               	movlw	0
  8316  09E2  1803               	skipnc
  8317  09E3  3001               	movlw	1
  8318  09E4  07BD               	addwf	___fldiv@b+2,f
  8319  09E5  3000               	movlw	0
  8320  09E6  1803               	skipnc
  8321  09E7  3001               	movlw	1
  8322  09E8  07BE               	addwf	___fldiv@b+3,f
  8323  09E9                     l2477:
  8324  09E9  1C3E               	btfss	___fldiv@b+3,0
  8325  09EA  29EC               	goto	u3301
  8326  09EB  29ED               	goto	u3300
  8327  09EC                     u3301:
  8328  09EC  2A0C               	goto	l2483
  8329  09ED                     u3300:
  8330  09ED                     l2479:
  8331  09ED  083B               	movf	___fldiv@b,w
  8332  09EE  00BF               	movwf	??___fldiv
  8333  09EF  083C               	movf	___fldiv@b+1,w
  8334  09F0  00C0               	movwf	??___fldiv+1
  8335  09F1  083D               	movf	___fldiv@b+2,w
  8336  09F2  00C1               	movwf	??___fldiv+2
  8337  09F3  083E               	movf	___fldiv@b+3,w
  8338  09F4  00C2               	movwf	??___fldiv+3
  8339  09F5  3001               	movlw	1
  8340  09F6  00C3               	movwf	??___fldiv+4
  8341  09F7                     u3315:
  8342  09F7  0D42               	rlf	??___fldiv+3,w
  8343  09F8  0CC2               	rrf	??___fldiv+3,f
  8344  09F9  0CC1               	rrf	??___fldiv+2,f
  8345  09FA  0CC0               	rrf	??___fldiv+1,f
  8346  09FB  0CBF               	rrf	??___fldiv,f
  8347  09FC                     u3310:
  8348  09FC  0BC3               	decfsz	??___fldiv+4,f
  8349  09FD  29F7               	goto	u3315
  8350  09FE  0842               	movf	??___fldiv+3,w
  8351  09FF  00BE               	movwf	___fldiv@b+3
  8352  0A00  0841               	movf	??___fldiv+2,w
  8353  0A01  00BD               	movwf	___fldiv@b+2
  8354  0A02  0840               	movf	??___fldiv+1,w
  8355  0A03  00BC               	movwf	___fldiv@b+1
  8356  0A04  083F               	movf	??___fldiv,w
  8357  0A05  00BB               	movwf	___fldiv@b
  8358  0A06                     l2481:
  8359  0A06  3001               	movlw	1
  8360  0A07  07C9               	addwf	___fldiv@new_exp,f
  8361  0A08  1803               	skipnc
  8362  0A09  0ACA               	incf	___fldiv@new_exp+1,f
  8363  0A0A  3000               	movlw	0
  8364  0A0B  07CA               	addwf	___fldiv@new_exp+1,f
  8365  0A0C                     l2483:
  8366  0A0C  084A               	movf	___fldiv@new_exp+1,w
  8367  0A0D  3A80               	xorlw	128
  8368  0A0E  00FF               	movwf	btemp+1
  8369  0A0F  3080               	movlw	128
  8370  0A10  027F               	subwf	btemp+1,w
  8371  0A11  1D03               	skipz
  8372  0A12  2A15               	goto	u3325
  8373  0A13  30FF               	movlw	255
  8374  0A14  0249               	subwf	___fldiv@new_exp,w
  8375  0A15                     u3325:
  8376  0A15  1C03               	skipc
  8377  0A16  2A18               	goto	u3321
  8378  0A17  2A19               	goto	u3320
  8379  0A18                     u3321:
  8380  0A18  2A27               	goto	l2487
  8381  0A19                     u3320:
  8382  0A19                     l2485:
  8383  0A19  30FF               	movlw	255
  8384  0A1A  1283               	bcf	3,5	;RP0=0, select bank0
  8385  0A1B  1303               	bcf	3,6	;RP1=0, select bank0
  8386  0A1C  00C9               	movwf	___fldiv@new_exp
  8387  0A1D  3000               	movlw	0
  8388  0A1E  00CA               	movwf	___fldiv@new_exp+1
  8389  0A1F  3000               	movlw	0
  8390  0A20  00BE               	movwf	___fldiv@b+3
  8391  0A21  3000               	movlw	0
  8392  0A22  00BD               	movwf	___fldiv@b+2
  8393  0A23  3000               	movlw	0
  8394  0A24  00BC               	movwf	___fldiv@b+1
  8395  0A25  3000               	movlw	0
  8396  0A26  00BB               	movwf	___fldiv@b
  8397  0A27                     l2487:
  8398  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  8399  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  8400  0A29  084A               	movf	___fldiv@new_exp+1,w
  8401  0A2A  3A80               	xorlw	128
  8402  0A2B  00FF               	movwf	btemp+1
  8403  0A2C  3080               	movlw	128
  8404  0A2D  027F               	subwf	btemp+1,w
  8405  0A2E  1D03               	skipz
  8406  0A2F  2A32               	goto	u3335
  8407  0A30  3001               	movlw	1
  8408  0A31  0249               	subwf	___fldiv@new_exp,w
  8409  0A32                     u3335:
  8410  0A32  1803               	skipnc
  8411  0A33  2A35               	goto	u3331
  8412  0A34  2A36               	goto	u3330
  8413  0A35                     u3331:
  8414  0A35  2A43               	goto	l696
  8415  0A36                     u3330:
  8416  0A36                     l2489:
  8417  0A36  1283               	bcf	3,5	;RP0=0, select bank0
  8418  0A37  1303               	bcf	3,6	;RP1=0, select bank0
  8419  0A38  01C9               	clrf	___fldiv@new_exp
  8420  0A39  01CA               	clrf	___fldiv@new_exp+1
  8421  0A3A                     l2491:
  8422  0A3A  3000               	movlw	0
  8423  0A3B  00BE               	movwf	___fldiv@b+3
  8424  0A3C  3000               	movlw	0
  8425  0A3D  00BD               	movwf	___fldiv@b+2
  8426  0A3E  3000               	movlw	0
  8427  0A3F  00BC               	movwf	___fldiv@b+1
  8428  0A40  3000               	movlw	0
  8429  0A41  00BB               	movwf	___fldiv@b
  8430  0A42                     l2493:
  8431  0A42  01C8               	clrf	___fldiv@sign
  8432  0A43                     l696:
  8433  0A43  1283               	bcf	3,5	;RP0=0, select bank0
  8434  0A44  1303               	bcf	3,6	;RP1=0, select bank0
  8435  0A45  0849               	movf	___fldiv@new_exp,w
  8436  0A46  00BF               	movwf	??___fldiv
  8437  0A47  083F               	movf	??___fldiv,w
  8438  0A48  00CF               	movwf	___fldiv@bexp
  8439  0A49                     l2495:
  8440  0A49  1C4F               	btfss	___fldiv@bexp,0
  8441  0A4A  2A4C               	goto	u3341
  8442  0A4B  2A4D               	goto	u3340
  8443  0A4C                     u3341:
  8444  0A4C  2A4F               	goto	l2499
  8445  0A4D                     u3340:
  8446  0A4D                     l2497:
  8447  0A4D  17BD               	bsf	___fldiv@b+2,7
  8448  0A4E  2A53               	goto	l698
  8449  0A4F                     l2499:
  8450  0A4F  307F               	movlw	127
  8451  0A50  00BF               	movwf	??___fldiv
  8452  0A51  083F               	movf	??___fldiv,w
  8453  0A52  05BD               	andwf	___fldiv@b+2,f
  8454  0A53                     l698:
  8455  0A53  084F               	movf	___fldiv@bexp,w
  8456  0A54  00BF               	movwf	??___fldiv
  8457  0A55  1003               	clrc
  8458  0A56  0C3F               	rrf	??___fldiv,w
  8459  0A57  00C0               	movwf	??___fldiv+1
  8460  0A58  0840               	movf	??___fldiv+1,w
  8461  0A59  00BE               	movwf	___fldiv@b+3
  8462  0A5A  0848               	movf	___fldiv@sign,w
  8463  0A5B  00BF               	movwf	??___fldiv
  8464  0A5C  083F               	movf	??___fldiv,w
  8465  0A5D  04BE               	iorwf	___fldiv@b+3,f
  8466  0A5E  28F7               	goto	l2407
  8467  0A5F                     l676:
  8468  0A5F  0008               	return
  8469  0A60                     __end_of___fldiv:
  8470                           
  8471                           	psect	text28
  8472  1637                     __ptext28:	
  8473 ;; *************** function ___awdiv *****************
  8474 ;; Defined at:
  8475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  divisor         2    2[COMMON] int 
  8478 ;;  dividend        2    4[COMMON] int 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;  quotient        2    2[BANK0 ] int 
  8481 ;;  sign            1    1[BANK0 ] unsigned char 
  8482 ;;  counter         1    0[BANK0 ] unsigned char 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  2    2[COMMON] int 
  8485 ;; Registers used:
  8486 ;;		wreg, status,2, status,0
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8492 ;;      Params:         4       0       0       0       0
  8493 ;;      Locals:         0       4       0       0       0
  8494 ;;      Temps:          1       0       0       0       0
  8495 ;;      Totals:         5       4       0       0       0
  8496 ;;Total ram usage:        9 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:    1
  8499 ;; This function calls:
  8500 ;;		Nothing
  8501 ;; This function is called by:
  8502 ;;		_ADC_convert
  8503 ;;		_division
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           
  8508                           ;psect for function ___awdiv
  8509  1637                     ___awdiv:
  8510  1637                     l3037:	
  8511                           ;incstack = 0
  8512                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8513                           
  8514  1637  1283               	bcf	3,5	;RP0=0, select bank0
  8515  1638  1303               	bcf	3,6	;RP1=0, select bank0
  8516  1639  01A1               	clrf	___awdiv@sign
  8517  163A                     l3039:
  8518  163A  1FF3               	btfss	___awdiv@divisor+1,7
  8519  163B  2E3D               	goto	u4181
  8520  163C  2E3E               	goto	u4180
  8521  163D                     u4181:
  8522  163D  2E45               	goto	l3045
  8523  163E                     u4180:
  8524  163E                     l3041:
  8525  163E  09F2               	comf	___awdiv@divisor,f
  8526  163F  09F3               	comf	___awdiv@divisor+1,f
  8527  1640  0AF2               	incf	___awdiv@divisor,f
  8528  1641  1903               	skipnz
  8529  1642  0AF3               	incf	___awdiv@divisor+1,f
  8530  1643                     l3043:
  8531  1643  01A1               	clrf	___awdiv@sign
  8532  1644  0AA1               	incf	___awdiv@sign,f
  8533  1645                     l3045:
  8534  1645  1FF5               	btfss	___awdiv@dividend+1,7
  8535  1646  2E48               	goto	u4191
  8536  1647  2E49               	goto	u4190
  8537  1648                     u4191:
  8538  1648  2E52               	goto	l3051
  8539  1649                     u4190:
  8540  1649                     l3047:
  8541  1649  09F4               	comf	___awdiv@dividend,f
  8542  164A  09F5               	comf	___awdiv@dividend+1,f
  8543  164B  0AF4               	incf	___awdiv@dividend,f
  8544  164C  1903               	skipnz
  8545  164D  0AF5               	incf	___awdiv@dividend+1,f
  8546  164E                     l3049:
  8547  164E  3001               	movlw	1
  8548  164F  00F6               	movwf	??___awdiv
  8549  1650  0876               	movf	??___awdiv,w
  8550  1651  06A1               	xorwf	___awdiv@sign,f
  8551  1652                     l3051:
  8552  1652  01A2               	clrf	___awdiv@quotient
  8553  1653  01A3               	clrf	___awdiv@quotient+1
  8554  1654                     l3053:
  8555  1654  0872               	movf	___awdiv@divisor,w
  8556  1655  0473               	iorwf	___awdiv@divisor+1,w
  8557  1656  1903               	btfsc	3,2
  8558  1657  2E59               	goto	u4201
  8559  1658  2E5A               	goto	u4200
  8560  1659                     u4201:
  8561  1659  2E91               	goto	l3073
  8562  165A                     u4200:
  8563  165A                     l3055:
  8564  165A  01A0               	clrf	___awdiv@counter
  8565  165B  0AA0               	incf	___awdiv@counter,f
  8566  165C  2E68               	goto	l3061
  8567  165D                     l3057:
  8568  165D  3001               	movlw	1
  8569  165E                     u4215:
  8570  165E  1003               	clrc
  8571  165F  0DF2               	rlf	___awdiv@divisor,f
  8572  1660  0DF3               	rlf	___awdiv@divisor+1,f
  8573  1661  3EFF               	addlw	-1
  8574  1662  1D03               	skipz
  8575  1663  2E5E               	goto	u4215
  8576  1664                     l3059:
  8577  1664  3001               	movlw	1
  8578  1665  00F6               	movwf	??___awdiv
  8579  1666  0876               	movf	??___awdiv,w
  8580  1667  07A0               	addwf	___awdiv@counter,f
  8581  1668                     l3061:
  8582  1668  1FF3               	btfss	___awdiv@divisor+1,7
  8583  1669  2E6B               	goto	u4221
  8584  166A  2E6C               	goto	u4220
  8585  166B                     u4221:
  8586  166B  2E5D               	goto	l3057
  8587  166C                     u4220:
  8588  166C                     l3063:
  8589  166C  3001               	movlw	1
  8590  166D                     u4235:
  8591  166D  1003               	clrc
  8592  166E  0DA2               	rlf	___awdiv@quotient,f
  8593  166F  0DA3               	rlf	___awdiv@quotient+1,f
  8594  1670  3EFF               	addlw	-1
  8595  1671  1D03               	skipz
  8596  1672  2E6D               	goto	u4235
  8597  1673  0873               	movf	___awdiv@divisor+1,w
  8598  1674  0275               	subwf	___awdiv@dividend+1,w
  8599  1675  1D03               	skipz
  8600  1676  2E79               	goto	u4245
  8601  1677  0872               	movf	___awdiv@divisor,w
  8602  1678  0274               	subwf	___awdiv@dividend,w
  8603  1679                     u4245:
  8604  1679  1C03               	skipc
  8605  167A  2E7C               	goto	u4241
  8606  167B  2E7D               	goto	u4240
  8607  167C                     u4241:
  8608  167C  2E84               	goto	l3069
  8609  167D                     u4240:
  8610  167D                     l3065:
  8611  167D  0872               	movf	___awdiv@divisor,w
  8612  167E  02F4               	subwf	___awdiv@dividend,f
  8613  167F  0873               	movf	___awdiv@divisor+1,w
  8614  1680  1C03               	skipc
  8615  1681  03F5               	decf	___awdiv@dividend+1,f
  8616  1682  02F5               	subwf	___awdiv@dividend+1,f
  8617  1683                     l3067:
  8618  1683  1422               	bsf	___awdiv@quotient,0
  8619  1684                     l3069:
  8620  1684  3001               	movlw	1
  8621  1685                     u4255:
  8622  1685  1003               	clrc
  8623  1686  0CF3               	rrf	___awdiv@divisor+1,f
  8624  1687  0CF2               	rrf	___awdiv@divisor,f
  8625  1688  3EFF               	addlw	-1
  8626  1689  1D03               	skipz
  8627  168A  2E85               	goto	u4255
  8628  168B                     l3071:
  8629  168B  3001               	movlw	1
  8630  168C  02A0               	subwf	___awdiv@counter,f
  8631  168D  1D03               	btfss	3,2
  8632  168E  2E90               	goto	u4261
  8633  168F  2E91               	goto	u4260
  8634  1690                     u4261:
  8635  1690  2E6C               	goto	l3063
  8636  1691                     u4260:
  8637  1691                     l3073:
  8638  1691  0821               	movf	___awdiv@sign,w
  8639  1692  1903               	btfsc	3,2
  8640  1693  2E95               	goto	u4271
  8641  1694  2E96               	goto	u4270
  8642  1695                     u4271:
  8643  1695  2E9B               	goto	l3077
  8644  1696                     u4270:
  8645  1696                     l3075:
  8646  1696  09A2               	comf	___awdiv@quotient,f
  8647  1697  09A3               	comf	___awdiv@quotient+1,f
  8648  1698  0AA2               	incf	___awdiv@quotient,f
  8649  1699  1903               	skipnz
  8650  169A  0AA3               	incf	___awdiv@quotient+1,f
  8651  169B                     l3077:
  8652  169B  0823               	movf	___awdiv@quotient+1,w
  8653  169C  00F3               	movwf	?___awdiv+1
  8654  169D  0822               	movf	___awdiv@quotient,w
  8655  169E  00F2               	movwf	?___awdiv
  8656  169F                     l478:
  8657  169F  0008               	return
  8658  16A0                     __end_of___awdiv:
  8659                           
  8660                           	psect	text29
  8661  0800                     __ptext29:	
  8662 ;; *************** function _isr *****************
  8663 ;; Defined at:
  8664 ;;		line 84 in file "Lab04.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;		None
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		None
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8678 ;;      Params:         0       0       0       0       0
  8679 ;;      Locals:         0       0       0       0       0
  8680 ;;      Temps:          2       0       0       0       0
  8681 ;;      Totals:         2       0       0       0       0
  8682 ;;Total ram usage:        2 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; This function calls:
  8685 ;;		Nothing
  8686 ;; This function is called by:
  8687 ;;		Interrupt level 1
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           
  8692                           ;psect for function _isr
  8693  0800                     _isr:
  8694  0800                     i1l144:
  8695  0800  0871               	movf	??_isr+1,w
  8696  0801  008A               	movwf	10
  8697  0802  0E70               	swapf	??_isr,w
  8698  0803  0083               	movwf	3
  8699  0804  0EFE               	swapf	btemp,f
  8700  0805  0E7E               	swapf	btemp,w
  8701  0806  0009               	retfie
  8702  0807                     __end_of_isr:
  8703  007E                     btemp	set	126	;btemp
  8704  007E                     wtemp0	set	126
  8705                           
  8706                           	psect	intentry
  8707  0004                     __pintentry:	
  8708                           ;incstack = 0
  8709                           ; Regs used in _isr: []
  8710                           
  8711  0004                     interrupt_function:
  8712  007E                     saved_w	set	btemp
  8713  0004  00FE               	movwf	btemp
  8714  0005  0E03               	swapf	3,w
  8715  0006  00F0               	movwf	??_isr
  8716  0007  080A               	movf	10,w
  8717  0008  00F1               	movwf	??_isr+1
  8718  0009  120A  158A  2800   	ljmp	_isr
  8719                           
  8720                           	psect	config
  8721                           
  8722                           ;Config register CONFIG1 @ 0x2007
  8723                           ;	Oscillator Selection bits
  8724                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8725                           ;	Watchdog Timer Enable bit
  8726                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8727                           ;	Power-up Timer Enable bit
  8728                           ;	PWRTE = OFF, PWRT disabled
  8729                           ;	RE3/MCLR pin function select bit
  8730                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8731                           ;	Code Protection bit
  8732                           ;	CP = OFF, Program memory code protection is disabled
  8733                           ;	Data Code Protection bit
  8734                           ;	CPD = OFF, Data memory code protection is disabled
  8735                           ;	Brown Out Reset Selection bits
  8736                           ;	BOREN = OFF, BOR disabled
  8737                           ;	Internal External Switchover bit
  8738                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8739                           ;	Fail-Safe Clock Monitor Enabled bit
  8740                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8741                           ;	Low Voltage Programming Enable bit
  8742                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8743                           ;	In-Circuit Debugger Mode bit
  8744                           ;	DEBUG = 0x1, unprogrammed default
  8745  2007                     	org	8199
  8746  2007  20D4               	dw	8404
  8747                           
  8748                           ;Config register CONFIG2 @ 0x2008
  8749                           ;	Brown-out Reset Selection bit
  8750                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8751                           ;	Flash Program Memory Self Write Enable bits
  8752                           ;	WRT = OFF, Write protection off
  8753  2008                     	org	8200
  8754  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     77      77
    BANK1            80     29      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 10
		 -> cont(BANK1[10]), STR_5(CODE[2]), adc1(BANK1[10]), STR_4(CODE[2]), 
		 -> adc0(BANK1[10]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    ADC_convert@data	PTR unsigned char  size(1) Largest target is 10
		 -> cont(BANK1[10]), adc1(BANK1[10]), adc0(BANK1[10]), 


Critical Paths under _main in COMMON

    _main->_division
    _I2C_Master_Init->___lldiv
    _division->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_convert->___flge
    _ADC_convert->___wmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___fladd
    ___flsub->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_convert
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _division->___awdiv
    _ADC_convert->___flmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ADC_convert

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   27297
                                             21 BANK1      8     8      0
                        _ADC_convert
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1647
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1028
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     988
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_convert                                         23    17      6   14612
                                             75 BANK0      2     2      0
                                              0 BANK1     21    15      6
                            ___awdiv
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1082
                                              9 BANK0     14    10      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              8 COMMON     2     2      0
                                              5 BANK0      4     0      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4    1057
                                              2 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             23 BANK0      8     0      8
                            ___fladd
                            ___fltol (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2136
                                              2 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3713
                                             49 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1577
                                             23 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_convert
     ___awdiv
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           ___wmul (ARG)
             ___fltol (ARG)
       ___flsub (ARG)
         ___fladd
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           ___wmul (ARG)
             ___fltol (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     ___flsub
       ___fladd
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     ___fltol
     ___wmul
       ___fltol (ARG)
     ___xxtofl
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___xxtofl (ARG)
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     ___flsub (ARG)
       ___fladd
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     ___fltol (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
   ___fltol
   ___xxtofl
     ___fltol (ARG)
     ___wmul (ARG)
       ___fltol (ARG)
   _division
     ___awdiv
     ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1D      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 10 01:51:31 2021

             ___fldiv@aexp 0050               ___fldiv@bexp 004F                          pc 0002  
             ___fldiv@sign 0048                         l32 1280                         l50 139B  
                       l35 128C                         l51 139E                         l52 13A3  
                       l44 1275                         l29 13DB                         l38 126C  
                       l47 127F               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0027        __Umul8_16@word_mpld 0022                        l201 12BD  
                      l202 12C0                        l203 12C6                        l204 12C7  
                      l212 12B3                        l205 12CD                        l221 14B2  
                      l206 12CE                        l207 12D4                        l215 1299  
                      l224 1568                        l209 12D5                        l233 145A  
                      l227 1414                        l155 1375                        l325 1308  
                      l181 047F                        l149 0CF7                        l502 172A  
                      l503 1743                        l511 0882                        l327 1320  
                      l184 15CE                        l521 0882                        l361 1636  
                      l622 0B6A                        l518 086D                        l631 0CE7  
                      l720 074C                        l624 0B41                        l714 07E0  
                      l618 0AC3                        l643 0C59                        l491 150B  
                      l660 0CDB                        l652 0CB9                        l733 1337  
                      l661 0CE7                        l478 169F                        l726 07D4  
                      l735 1349                        l639 0C35                        l664 12F9  
                      l760 17FF                        l649 0C7B                        l690 09D1  
                      l674 08DF                        l499 16BE                        l771 17C9  
                      l676 0A5F                        l772 17D5                        l764 17AD  
                      l758 1768                        l696 0A43                        l698 0A53  
                      _GIE 005F                        _RC0 0038                        _RC1 0039  
                      _RC2 003A                        _RE0 0048                        _RC5 003D  
                      _RE1 0049                        _isr 0800                        _pot 00B3  
                      fsr0 0004                        indf 0000               ___awmod@sign 0078  
             ___flmul@aexp 005F               ___flmul@bexp 0064               ___flmul@sign 005E  
             ___flmul@temp 0069               ___flmul@prod 0065               ___fltol@exp1 0077  
                     l2001 0AD5                       l2011 0AE9                       l2003 0AD9  
                     l2101 0C62                       l2021 0AFD                       l2013 0AED  
                     l2005 0ADD                       l2111 0C72                       l2103 0C67  
                     l2031 0B0E                       l2023 0B01                       l2015 0AF1  
                     l2007 0AE1                       l3001 132D                       l2121 0C93  
                     l2113 0C78                       l2105 0C69                       l2041 0B54  
                     l2033 0B25                       l2025 0B05                       l2017 0AF5  
                     l2009 0AE5                       l2201 140C                       l3003 1331  
                     l2131 0CCB                       l2123 0C97                       l2107 0C6D  
                     l2051 0B73                       l2043 0B55                       l2035 0B45  
                     l2027 0B09                       l2019 0AF9                       l2203 1411  
                     l3011 13A4                       l2301 16A0                       l3005 1340  
                     l2141 0CE2                       l2133 0CD0                       l2125 0CB5  
                     l2117 0C80                       l2109 0C6E                       l2061 0B9B  
                     l2045 0B5E                       l2037 0B4E                       l2029 0B0D  
                     l3021 13DA                       l3013 13A8                       l2311 1702  
                     l2303 16B6                       l3007 1345                       l2143 0CE6  
                     l2135 0CD1                       l2127 0CBE                       l2119 0C85  
                     l2071 0BB4                       l2063 0BA4                       l2055 0B7C  
                     l2039 0B50                       l2047 0B62                       l3111 0862  
                     l3103 0849                       l3031 1316                       l3023 12FA  
                     l3015 13AB                       l3041 163E                       l2401 08D7  
                     l2313 1706                       l2305 16D2                       l3201 0701  
                     l3121 048D                       l2137 0CD5                       l2129 0CC3  
                     l2081 0C18                       l2065 0BA6                       l2057 0B93  
                     l2049 0B6E                       l2073 0BB9                       l3113 0872  
                     l3105 085B                       l3033 131C                       l3025 12FC  
                     l3017 13D8                       l3051 1652                       l3043 1643  
                     l2403 08E7                       l2411 0900                       l2315 1740  
                     l2307 16DA                       l3211 0726                       l3203 070F  
                     l3131 04A4                       l3123 0491                       l2139 0CD7  
                     l2091 0C4B                       l2075 0BCF                       l2083 0C27  
                     l2067 0BAA                       l2059 0B97                       l3115 0877  
                     l3027 1302                       l2171 1280                       l3019 13D9  
                     l3061 1668                       l3053 1654                       l3045 1645  
                     l3037 1637                       l2421 0928                       l2413 0905  
                     l2405 08F3                       l2317 1742                       l2309 16DE  
                     l3221 0749                       l3205 0718                       l3213 072C  
                     l3141 04BD                       l3133 04A6                       l3125 0492  
                     l3117 0480                       l2093 0C54                       l2085 0C3D  
                     l2077 0C0D                       l2069 0BAB                       l3029 130F  
                     l3301 003C                       l2173 1286                       l2181 12A7  
                     l3071 168B                       l3063 166C                       l3055 165A  
                     l3047 1649                       l3039 163A                       l2431 0951  
                     l2423 0930                       l2407 08F7                       l3231 0768  
                     l3215 0730                       l3207 071C                       l3151 04D2  
                     l3143 04BE                       l3135 04AE                       l3127 0497  
                     l3119 0487                       l2095 0C58                       l2087 0C42  
                     l2079 0C13                       l3311 00BD                       l3303 0055  
                     l2183 12B0                       l2175 129B                       l2191 13F8  
                     l2271 14BF                       l2263 14B3                       l3065 167D  
                     l3057 165D                       l3073 1691                       l3049 164E  
                     l2441 0972                       l2433 0955                       l2425 0938  
                     l2417 090E                       l3241 07AE                       l3233 0781  
                     l3225 0751                       l3217 0731                       l3209 071D  
                     l3161 04ED                       l3153 04DA                       l3145 04C3  
                     l3137 04B3                       l3129 049C                       l2097 0C5D  
                     l3081 0807                       l3321 00DC                       l3305 0094  
                     l3313 00C3                       l2177 129E                       l2193 13FB  
                     l2185 13DD                       l2281 14D8                       l2273 14C3  
                     l2265 14B4                       l3401 0D33                       l3075 1696  
                     l3067 1683                       l3059 1664                       l2451 0994  
                     l2443 0980                       l2435 0956                       l2427 093A  
                     l2419 0920                       l2371 0895                       l2363 0883  
                     l3251 07CD                       l3243 07B8                       l3227 0756  
                     l3235 0787                       l3219 0735                       l3171 056F  
                     l3163 04FD                       l3155 04DF                       l3147 04C8  
                     l3139 04B9                       l2099 0C60                       l3091 0833  
                     l3083 0814                       l3331 0201                       l3323 00FD  
                     l3315 00CC                       l3307 00A1                       l2179 12A4  
                     l2195 1400                       l2187 13E7                       l2291 14F7  
                     l2283 14DC                       l2275 14C8                       l2267 14B8  
                     l3411 0D83                       l3403 0D3C                       l3077 169B  
                     l3069 1684                       l2453 099D                       l2461 09B1  
                     l2429 093F                       l2437 095F                       l2445 0984  
                     l2373 089A                       l2381 08AA                       l2365 088A  
                     l3253 07D8                       l3245 07BA                       l3237 0794  
                     l3229 0764                       l3181 05DD                       l3173 058B  
                     l3165 050A                       l3157 04E4                       l3149 04D0  
                     l2357 12D6                       l3093 083B                       l3341 0229  
                     l3333 0209                       l3325 0103                       l3317 00D2  
                     l3309 00AA                       l2701 1376                       l2197 1403  
                     l2189 13EA                       l2285 14E0                       l2277 14CE  
                     l2293 14FD                       l2269 14BD                       l3261 1351  
                     l3421 0DF1                       l3413 0D8C                       l3405 0D41  
                     l2463 09B5                       l2455 09A1                       l2447 098A  
                     l2439 0971                       l2391 08C2                       l2383 08B2  
                     l2375 089F                       l2367 0890                       l3247 07C8  
                     l3239 079F                       l3191 066D                       l3183 05ED  
                     l3175 05A7                       l3167 0527                       l2359 12DA  
                     l3095 083D                       l3087 081D                       l3351 025D  
                     l3343 0231                       l3335 020F                       l3327 0119  
                     l3319 00D7                       l2711 1397                       l2703 137B  
                     l2199 1409                       l2295 1502                       l2287 14EA  
                     l2279 14D1                       l3271 1360                       l3263 1352  
                     l3431 0E3D                       l3423 0E0A                       l3415 0D98  
                     l3407 0D6F                       l2481 0A06                       l2473 09D6  
                     l2465 09B6                       l2457 09A2                       l2449 0992  
                     l2393 08C7                       l2385 08B7                       l2377 08A7  
                     l2369 0894                       l3249 07CC                       l3193 067D  
                     l3185 060A                       l3177 05B0                       l3169 0543  
                     l3097 0841                       l3089 0832                       l3361 0317  
                     l3353 0273                       l3345 0231                       l3329 01E3  
                     l3337 0213                       l2713 139F                       l2705 1383  
                     l1921 12C4                       l3281 1415                       l2297 1507  
                     l2289 14F0                       l3273 1363                       l3265 1353  
                     l3257 134A                       l3441 0E71                       l3433 0E4B  
                     l3425 0E13                       l3417 0D9D                       l3409 0D7E  
                     l2491 0A3A                       l2475 09DB                       l2483 0A0C  
                     l2467 09BA                       l2459 09AB                       l2395 08CC  
                     l2387 08BD                       l2379 08A8                       l3195 06AA  
                     l3187 0623                       l3179 05C0                       l2651 1760  
                     l3371 0332                       l3363 031D                       l3355 0302  
                     l3347 0236                       l3339 0219                       l3291 0034  
                     l2707 138C                       l1923 12CB                       l3283 141A  
                     l3275 1364                       l3267 1357                       l3259 134E  
                     l3451 0EA7                       l3443 0E7D                       l3435 0E53  
                     l3427 0E28                       l3419 0DE9                       l2493 0A42  
                     l2485 0A19                       l2477 09E9                       l2469 09CE  
                     l2397 08D4                       l2389 08C1                       l3197 06D0  
                     l3189 0640                       l2661 178B                       l2653 1770  
                     l2645 1747                       l3381 0457                       l3373 0353  
                     l3365 0322                       l3357 030A                       l3349 0257  
                     l3293 0034                       l2709 1391                       l1925 12D2  
                     l1917 12B5                       l2741 150C                       l3285 1436  
                     l3277 1365                       l3269 1358                       l3461 0F38  
                     l3453 0EB0                       l3445 0E86                       l3437 0E5C  
                     l3429 0E34                       l2495 0A49                       l2487 0A27  
                     l2479 09ED                       l2399 08D5                       l3199 06F8  
                     l1951 0A60                       l2671 17BF                       l2663 1792  
                     l2647 174C                       l3383 045F                       l3375 0359  
                     l3367 0328                       l3359 0317                       l3295 0036  
                     l1919 12B9                       l2751 128D                       l2743 1512  
                     l3287 143E                       l3391 156A                       l3279 1366  
                     l3471 0FEA                       l3463 0F4A                       l3455 0EBE  
                     l3447 0E92                       l3439 0E68                       l2497 0A4D  
                     l2489 0A36                       l1961 0A77                       l1953 0A67  
                     l2681 17F2                       l2673 17C3                       l2665 1796  
                     l2657 1779                       l2649 1750                       l3385 0465  
                     l3377 036F                       l3369 032D                       l3297 0038  
                     l3289 0021                       l2745 151B                       l2761 147F  
                     l2753 145E                       l3465 0F85                       l3457 0EC5  
                     l3449 0E9B                       l3393 0CE8                       l2499 0A4F  
                     l1971 0A8F                       l1963 0A7C                       l1955 0A6D  
                     l2683 17F6                       l2675 17CD                       l2667 17A4  
                     l2659 177E                       l3379 0439                       l3387 0469  
                     l3299 003C                       l2691 1269                       l2747 152A  
                     l2771 14AA                       l2755 1463                       l2763 1488  
                     l3467 0F97                       l3459 0ECD                       l3395 0D16  
                     l1981 0AA5                       l1973 0A94                       l1965 0A84  
                     l1957 0A71                       l2685 17F7                       l2677 17D7  
                     l2669 17B4                       l3389 046F                       l2693 126D  
                     l2749 1530                       l2765 148E                       l2757 1474  
                     l3469 0FB1                       l3397 0D25                       l1991 0AB9  
                     l1983 0AA6                       l1975 0A9A                       l1967 0A85  
                     l1959 0A72                       l2679 17ED                       l2695 1272  
                     l2767 149F                       l2759 1479                       l3399 0D2A  
                     l1985 0AAB                       l1993 0ABB                       l1977 0A9B  
                     l1969 0A87                       l2689 1264                       l2697 1276  
                     l2769 14A4                       l1995 0AC9                       l1987 0AB0  
                     l1979 0AA1                       l2699 127B                       l1997 0ACD  
                     l1989 0AB8                       l2981 15F5                       l2973 15CF  
                     l1999 0AD1                       l2991 1628                       l2983 15FE  
                     l2975 15E1                       l2985 1610                       l2977 15E4  
                     l2993 162E                       l2987 161E                       l2979 15F1  
                     l2997 1324                       l2989 161F                       l2999 1326  
                     ?_isr 0070                       STR_1 07F1                       STR_2 07F4  
                     STR_3 07F7                       STR_4 07FC                       STR_5 07FA  
                     u2020 12B9                       u2021 12B8                       u2030 12C4  
                     u2031 12C3                       u2200 0AC9                       u2040 12CB  
                     u2201 0AC8                       u2041 12CA                       u2210 0ACD  
                     u2130 0A71                       u2050 12D2                       u2211 0ACC  
                     u2131 0A70                       u2051 12D1                       u3100 08C7  
                     u2300 0B73                       u2220 0B25                       u2140 0A77  
                     u3101 08C6                       u2301 0B72                       u2221 0B24  
                     u2141 0A76                       u3110 08CC                       u2230 0B2E  
                     u2150 0A7C                       u3111 08CB                       u2311 0B85  
                     u2231 0B2C                       u2151 0A7B                       u3200 098A  
                     u3120 08E7                       u2400 0C3D                       u2320 0B97  
                     u2312 0B8C                       u2240 0B2F                       u2160 0A9A  
                     u3201 0989                       u3121 08E6                       u2401 0C3C  
                     u2321 0B96                       u2313 0B93                       u2225 0B21  
                     u2161 0A99                       u3210 0992                       u3130 0905  
                     u2410 0C42                       u2330 0B9B                       u2250 0B45  
                     u2170 0AA5                       u3211 0991                       u3131 0904  
                     u2411 0C41                       u2331 0B9A                       u2251 0B44  
                     u2171 0AA4                       u3300 09ED                       u3140 093F  
                     u3060 0894                       u4100 1331                       u2500 0C85  
                     u2340 0BAA                       u2260 0B54                       u2180 0AAB  
                     u3301 09EC                       u3141 093E                       u3061 0893  
                     u4101 1330                       u2501 0C84                       u2341 0BA9  
                     u2261 0B53                       u2181 0AAA                       u3310 09FC  
                     u3230 09A1                       u3070 089A                       u2510 0C97  
                     u2430 0C58                       u2190 0AB0                       u4030 15E1  
                     u3231 09A0                       u3071 0899                       u2511 0C96  
                     u2431 0C57                       u2191 0AAF                       u4031 15E0  
                     u4200 165A                       u3320 0A19                       u3080 089F  
                     u4120 1345                       u2520 0CA6                       u2440 0C5D  
                     u2360 0BCF                       u2280 0B6A                       u4201 1659  
                     u3321 0A18                       u3225 0996                       u3081 089E  
                     u4121 1344                       u2441 0C5C                       u2425 0C4D  
                     u2361 0BCE                       u2281 0B69                       u3330 0A36  
                     u3250 09B5                       u3170 0955                       u3090 08C1  
                     u2530 0CB5                       u2450 0C67                       u2290 0B6E  
                     u4050 15F5                       u4130 13BB                       u3331 0A35  
                     u3315 09F7                       u3251 09B4                       u3171 0954  
                     u3155 0941                       u3091 08C0                       u4115 1338  
                     u2531 0CB4                       u2451 0C66                       u2371 0BE6  
                     u2363 0BCB                       u2355 0BAD                       u2291 0B6D  
                     u2275 0B57                       u4051 15F4                       u4220 166C  
                     u3340 0A4D                       u3260 09BA                       u2540 0CBE  
                     u2460 0C6D                       u2380 0BFA                       u2372 0BE7  
                     u4300 0841                       u4140 1302                       u4221 166B  
                     u3341 0A4C                       u3325 0A15                       u3261 09B9  
                     u3245 09A4                       u3165 094A                       u2541 0CBD  
                     u2525 0CA1                       u2461 0C6C                       u2381 0BFB  
                     u2373 0BEC                       u4301 0840                       u4141 1301  
                     u4045 15E6                       u3270 09CE                       u3190 0971  
                     u2550 0CC3                       u2470 0C72                       u2390 0C18  
                     u2382 0C00                       u2374 0BED                       u4310 0848  
                     u2630 1286                       u4070 1610                       u4215 165E  
                     u3335 0A32                       u3271 09CD                       u3191 0970  
                     u2551 0CC2                       u2471 0C71                       u2391 0C17  
                     u2383 0C01                       u2375 0BF2                       u4311 0847  
                     u2631 1285                       u4071 160F                       u4135 13B6  
                     u4240 167D                       u3280 09D5                       u4400 049C  
                     u2560 0CD0                       u2480 0C78                       u2376 0BF3  
                     u2640 128C                       u2800 14B8                       u4241 167C  
                     u3281 09D4                       u3185 0958                       u4401 049B  
                     u2561 0CCF                       u2481 0C77                       u2641 128B  
                     u2801 14B7                       u4065 15F7                       u3290 09DB  
                     u4410 04BD                       u2570 0CD5                       u2490 0C7F  
                     u4330 085A                       u4170 131C                       u2810 14C3  
                     u4090 162E                       u4235 166D                       u3291 09DA  
                     u3195 096D                       u4411 04BC                       u2571 0CD4  
                     u2491 0C7E                       u4331 0859                       u4171 131B  
                     u4155 1309                       u2811 14C2                       u4091 162D  
                     u4075 160C                       u4260 1691                       u4180 163E  
                     u2900 16D2                       u4420 04C3                       u2580 0CE6  
                     u4340 0861                       u2820 14CE                       u4261 1690  
                     u4245 1679                       u4181 163D                       u2901 16D1  
                     u4421 04C2                       u2581 0CE5                       u4341 0860  
                     u4325 084A                       u4165 1310                       u2821 14CD  
                     u4085 1620                       u4270 1696                       u4190 1649  
                     u2910 16DE                       u4430 04C8                       u4271 1695  
                     u4255 1685                       u4191 1648                       u2911 16DD  
                     u4511 05CF                       u4431 04C7                       u2655 13ED  
                     u4512 05D6                       u4440 04DF                       u4360 0872  
                     u4280 0814                       u3800 17C3                       u3720 174C  
                     u2840 14E0                       u2921 16ED                       u4601 06EA  
                     u4521 05FC                       u4513 05DD                       u4505 05A9  
                     u4441 04DE                       u4361 0871                       u4281 0813  
                     u3801 17C2                       u3721 174B                       u2841 14DF  
                     u2930 1706                       u2922 16EE                       u4602 06F1  
                     u4522 0603                       u4450 04E4                       u4370 0877  
                     u4290 082B                       u3810 17C9                       u3730 1750  
                     u2850 14EA                       u2931 1705                       u2923 16F3  
                     u4603 06F8                       u4523 060A                       u4451 04E3  
                     u4371 0876                       u4355 0864                       u3811 17C8  
                     u3731 174F                       u2851 14E9                       u2835 14D2  
                     _PEIE 005E                       u2924 16F4                       u4700 0768  
                     u4380 0491                       u3820 17CD                       u3740 1770  
                     u2941 1715                       u2925 16F9                       u4701 0767  
                     u4541 0632                       u4461 0535                       u4381 0490  
                     u3821 17CC                       u3741 176F                       u2950 1740  
                     u2942 1716                       u2926 16FA                       u4710 0777  
                     u4630 071C                       u4542 0639                       u4462 053C  
                     u4390 0497                       u3830 17E2                       u2870 14FD  
                     u2951 173F                       u2943 171B                       u4631 071B  
                     u4615 06FA                       u4551 065F                       u4543 0640  
                     u4535 060C                       u4471 0551                       u4463 0543  
                     u4391 0496                       u4295 0826                       u2871 14FC  
                     u2855 14E6                       u2944 171C                       u4720 0794  
                     u4552 0666                       u4472 0558                       u3840 17F2  
                     u3760 1791                       u4800 00D2                       u2880 1502  
                     u2945 1721                       u4721 0793                       u4625 0711  
                     u4561 068C                       u4553 066D                       u4481 057D  
                     u4473 055F                       u3841 17F1                       u3761 1790  
                     u4801 00D1                       u3905 1496                       u2881 1501  
                     u2865 14F1                       u2946 1722                       u2890 16B6  
                     u4730 07AE                       u4650 0730                       u4570 06B6  
                     u4562 0693                       u4482 0584                       u3850 17F6  
                     u4810 0119                       u2955 173C                       u2891 16B5  
                     u4731 07AD                       u4715 0772                       u4651 072F  
                     u4563 069A                       u4491 0599                       u4483 058B  
                     u3851 17F5                       u3835 17DD                       u3755 1783  
                     u4811 0118                       u4740 07CC                       u4660 0735  
                     u4492 05A0                       u3780 17B3                       u4820 0219  
                     u3860 1397                       u4741 07CB                       u4725 0790  
                     u4661 0734                       u4645 071F                       u4581 06C2  
                     u4493 05A7                       u3781 17B2                       u4821 0218  
                     u3861 1396                       u4670 0749                       u4590 06DE  
                     u4582 06C9                       u4830 0273                       u3870 1463  
                     u4750 1424                       u4735 07AA                       u4671 0748  
                     u4583 06D0                       u4575 06B1                       u3775 17A5  
                     u4831 0272                       u4815 0115                       u3871 1462  
                     u4680 0750                       u4840 0328                       u4760 1448  
                     u4681 074F                       u4841 0327                       u4690 0756  
                     u4850 036F                       u3890 148E                       u4770 145A  
                     u4691 0755                       u4595 06D9                       u3795 17B8  
                     u4851 036E                       u4835 026F                       u3891 148D  
                     u4771 1459                       u4907 0DA5                       u4860 046F  
                     u4780 0055                       u4861 046E                       u4781 0054  
                     u3885 146B                       u4917 0E45                       u4790 00CB  
                     u4855 036B                       u4791 00CA                       u4927 0EB8  
                     u4937 13FD                       u4947 140E                       u4957 1516  
                     u4877 0D1E                       u4967 1525                       u4887 0D49  
                     u4977 1534                       u4897 0D77                       u4987 12AB  
                     _adc0 00C9                       _adc1 00BF          ?_Lcd_Write_String 0077  
                     _cont 00B5                       _main 0CE8                       _full 00AC  
                     _tens 00AF                       btemp 007E              ADC_convert@mu 00E6  
                     start 000C         ??_Lcd_Write_String 0020            ___fldiv@new_exp 0049  
          __end_of_Lcd_Cmd 12B4       __size_of_ADC_convert 0462                      ??_isr 0070  
         ?_I2C_Master_Init 0026           ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070              ___fltol@sign1 0076            __end_of___fladd 0CE8  
                    ?_main 0070            __end_of___fldiv 0A60            __end_of___awdiv 16A0  
          __end_of___awmod 150C            __end_of___flmul 07E1            __end_of___flsub 12FA  
          __end_of___fltol 0883                      _ANSEL 0188            __end_of___lldiv 1637  
          ___awdiv@divisor 0072                      i1l144 0800            ___awdiv@counter 0020  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063                      _conv0 00A4  
                    _conv1 00A0                      _count 00A8                      _valor 007B  
                    _setup 134A                      _units 00AE                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 1569  
         __end_of_Lcd_Port 12D6            __initialization 000F               __end_of_main 1000  
                   ??_main 00E8         __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074  
         ___awdiv@dividend 0074                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0039                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 1800                     ___flge 16A0  
         __end_of_division 15CF                  ??___fladd 0020                     ___wmul 12FA  
                ??___fldiv 003F                  ??___awdiv 0076                  ??___awmod 0076  
                ??___flmul 0059                  ??___flsub 007A                  ??___fltol 0020  
                ??___lldiv 0020           ___awdiv@quotient 0022            ___awmod@divisor 0072  
          ___awmod@counter 0077         __size_of__Umul8_16 0029                     saved_w 007E  
          ADC_convert@data 00DD            ADC_convert@temp 00D9            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021  
               ___flge@ff1 0072                 ___flge@ff2 0076               ___xxtofl@arg 0033  
             ___xxtofl@exp 0032               ___xxtofl@val 0029    __end_of__initialization 001A  
        __end_of_Lcd_Clear 129A                 ___fltol@f1 0072             __pcstackCOMMON 0070  
            __end_of_setup 1376              division@valor 0079             _Lcd_Set_Cursor 145B  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 007A  
               __pbssBANK1 00A0          __end_of__Umul8_16 134A                 __pmaintext 0CE8  
                  ?___flge 0072                    ?___wmul 0025                 __pintentry 0004  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 14B3                  ?___xxtofl 0029  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 07E1                  ?_division 0070  
           _Lcd_Write_Char 13DC                    _Lcd_Cmd 129A              ??_ADC_convert 006B  
          __size_of___flge 00A4                    ___fladd 0A60                    ___fldiv 0883  
                  ___awdiv 1637                    ___awmod 14B3                    ___flmul 0480  
                  ___flsub 12D6                    ___fltol 0807                    ___lldiv 15CF  
          __size_of___wmul 0027            ?_Lcd_Set_Cursor 0076                    __ptext1 134A  
                  __ptext2 13A4                    __ptext3 15CF                    __ptext4 1569  
                  __ptext5 14B3                    __ptext6 1415                    __ptext7 13DC  
                  __ptext8 145B                    __ptext9 150C               __size_of_isr 0007  
               ??___xxtofl 002D           ___awmod@dividend 0074   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E                    _residuo 007A   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 125D     __end_of_Lcd_Write_Char 1415  
     end_of_initialization 001A                 ??_division 0024  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 0025  
         ADC_convert@place 00D7           I2C_Master_Init@c 0026           I2C_Master_Read@a 0072  
                Lcd_Port@a 0072        __end_of_ADC_convert 0480                ___fladd@grs 002B  
            ___xxtofl@sign 0031                  _TRISAbits 0085                  _TRISCbits 0087  
                _TRISEbits 0089                ___fldiv@grs 004B                ___fldiv@rem 0044  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0023  
              ___flmul@grs 0060               ADC_convert@a 00D3               ADC_convert@i 00E2  
             ADC_convert@j 00DB               ADC_convert@x 00DE                  _Lcd_Clear 128D  
           __end_of___flge 1744             __end_of___wmul 1321           _Lcd_Write_String 1415  
      start_initialization 000F                __end_of_isr 0807          __size_of_Lcd_Init 005D  
        __size_of_Lcd_Port 0022          ??_I2C_Master_Init 002A          ??_I2C_Master_Read 0074  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072                _ADC_convert 001E  
               ?_Lcd_Clear 0070                   ??___flge 0020                   ??___wmul 0078  
                __Umul8_16 1321            Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075  
                ___fladd@a 0076                  ___fladd@b 0072                  ___fldiv@a 0037  
                ___fldiv@b 003B                  ___flmul@a 0055                  ___flmul@b 0051  
              __pbssCOMMON 007A                  ___flsub@a 0037                  ___flsub@b 003B  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00D3  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070          __size_of_division 0066  
         _I2C_Master_Start 1264           _I2C_Master_Write 1276           ??_Lcd_Set_Cursor 0077  
                 ?___fladd 0072                   ?___fldiv 0037                   ?___awdiv 0072  
                 ?___awmod 0072                   ?___flmul 0051                   ?___flsub 0037  
                 ?___fltol 0072                   ?___lldiv 0072                 ?__Umul8_16 0072  
                __pstrings 07E1                  _converted 00B2             __size_of_setup 002C  
        interrupt_function 0004             ___wmul@product 0078                  clear_ram0 125C  
                 Lcd_Cmd@a 0075                ??_Lcd_Clear 0076                __stringbase 07F0  
        ___wmul@multiplier 0025           ??_Lcd_Write_Char 0073                _converted02 00B1  
                 _Lcd_Init 150C                   _Lcd_Port 12B4        I2C_Master_Read@temp 0076  
 __end_of_Lcd_Write_String 145B           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0074  
         __size_of___fladd 0288           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0024  
         __size_of___fltol 007C           __size_of___lldiv 0068         __end_of__stringtab 07F1  
          _I2C_Master_Init 13A4            _I2C_Master_Read 1376                   ___xxtofl 1744  
          _I2C_Master_Wait 1280            _I2C_Master_Stop 126D                   _main$956 00EC  
                 __ptext10 128D                   __ptext11 129A                   __ptext20 12FA  
                 __ptext12 12B4                   __ptext21 0807                   __ptext13 1276  
                 __ptext22 12D6                   __ptext14 126D                   __ptext23 0A60  
                 __ptext15 1264                   __ptext24 0480                   __ptext16 1376  
                 __ptext25 1321                   __ptext17 1280                   __ptext26 16A0  
                 __ptext18 001E                   __ptext27 0883                   __ptext19 1744  
                 __ptext28 1637                   __ptext29 0800                   _division 1569  
            __size_of_main 0318                   _hundreds 00B0               ?_ADC_convert 00D3  
 __end_of_I2C_Master_Start 126D   __end_of_I2C_Master_Write 1280         Lcd_Write_Char@temp 0074  
                 intlevel1 0000           ___lldiv@dividend 0076                  stringcode 07EB  
               _OSCCONbits 008F          ADC_convert@digits 00E4    __end_of_I2C_Master_Init 13DC  
  __end_of_I2C_Master_Read 13A4    __end_of_I2C_Master_Wait 128D    __end_of_I2C_Master_Stop 1276  
       Lcd_Set_Cursor@temp 0023     __Umul8_16@multiplicand 0072                _temperature 00B4  
         ___lldiv@quotient 0021          I2C_Master_Write@d 0072                   stringdir 07EB  
                 stringtab 07E1                _SSPCON2bits 0091              ___fladd@signs 0028  
             ___fladd@aexp 0029               ___fladd@bexp 002A       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
