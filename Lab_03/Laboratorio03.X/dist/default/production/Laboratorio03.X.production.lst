

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 03 21:36:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	functab,global,class=ENTRY,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	strings
   387  0400                     __pstrings:
   388  0400                     stringtab:
   389  0400                     __stringtab:
   390  0400                     stringcode:	
   391                           ;	String table - string pointers are 1 byte each
   392                           
   393  0400                     stringdir:
   394  0400  3004               	movlw	high stringdir
   395  0401  008A               	movwf	10
   396  0402  0804               	movf	4,w
   397  0403  0A84               	incf	4,f
   398  0404  0782               	addwf	2,f
   399  0405                     __stringbase:
   400  0405  3400               	retlw	0
   401  0406                     __end_of__stringtab:
   402  0406                     _dpowers:
   403  0406  3401               	retlw	1
   404  0407  3400               	retlw	0
   405  0408  340A               	retlw	10
   406  0409  3400               	retlw	0
   407  040A  3464               	retlw	100
   408  040B  3400               	retlw	0
   409  040C  34E8               	retlw	232
   410  040D  3403               	retlw	3
   411  040E  3410               	retlw	16
   412  040F  3427               	retlw	39
   413  0410                     __end_of_dpowers:
   414  0013                     _SSPBUF	set	19
   415  0014                     _SSPCON	set	20
   416  001F                     _ADCON0bits	set	31
   417  001A                     _RCREG	set	26
   418  0019                     _TXREG	set	25
   419  000C                     _PIR1bits	set	12
   420  0018                     _RCSTAbits	set	24
   421  0008                     _PORTD	set	8
   422  0007                     _PORTC	set	7
   423  0006                     _PORTB	set	6
   424  0007                     _PORTCbits	set	7
   425  0064                     _TXIF	set	100
   426  0065                     _RCIF	set	101
   427  0094                     _SSPSTATbits	set	148
   428  0094                     _SSPSTAT	set	148
   429  009F                     _ADCON1bits	set	159
   430  008F                     _OSCCONbits	set	143
   431  009A                     _SPBRGH	set	154
   432  0099                     _SPBRG	set	153
   433  0098                     _TXSTAbits	set	152
   434  0086                     _TRISB	set	134
   435  043B                     _TRISC3	set	1083
   436  043D                     _TRISC5	set	1085
   437  043A                     _TRISC2	set	1082
   438  0187                     _BAUDCTLbits	set	391
   439  0189                     _ANSELH	set	393
   440  0188                     _ANSEL	set	392
   441  0410                     STR_9:
   442  0410  3449               	retlw	73	;'I'
   443  0411  346E               	retlw	110	;'n'
   444  0412  3467               	retlw	103	;'g'
   445  0413  3472               	retlw	114	;'r'
   446  0414  3465               	retlw	101	;'e'
   447  0415  3473               	retlw	115	;'s'
   448  0416  3461               	retlw	97	;'a'
   449  0417  3472               	retlw	114	;'r'
   450  0418  3420               	retlw	32	;' '
   451  0419  3443               	retlw	67	;'C'
   452  041A  3465               	retlw	101	;'e'
   453  041B  346E               	retlw	110	;'n'
   454  041C  3474               	retlw	116	;'t'
   455  041D  3465               	retlw	101	;'e'
   456  041E  346E               	retlw	110	;'n'
   457  041F  3461               	retlw	97	;'a'
   458  0420  343A               	retlw	58	;':'
   459  0421  3420               	retlw	32	;' '
   460  0422  3452               	retlw	82	;'R'
   461  0423  3461               	retlw	97	;'a'
   462  0424  346E               	retlw	110	;'n'
   463  0425  3467               	retlw	103	;'g'
   464  0426  346F               	retlw	111	;'o'
   465  0427  3428               	retlw	40	;'('
   466  0428  3430               	retlw	48	;'0'
   467  0429  342D               	retlw	45	;'-'
   468  042A  3432               	retlw	50	;'2'
   469  042B  3429               	retlw	41	;')'
   470  042C  340D               	retlw	13
   471  042D  3400               	retlw	0
   472  042E                     STR_12:
   473  042E  3445               	retlw	69	;'E'
   474  042F  346C               	retlw	108	;'l'
   475  0430  3420               	retlw	32	;' '
   476  0431  346E               	retlw	110	;'n'
   477  0432  3475               	retlw	117	;'u'
   478  0433  346D               	retlw	109	;'m'
   479  0434  3465               	retlw	101	;'e'
   480  0435  3472               	retlw	114	;'r'
   481  0436  346F               	retlw	111	;'o'
   482  0437  3420               	retlw	32	;' '
   483  0438  3465               	retlw	101	;'e'
   484  0439  346C               	retlw	108	;'l'
   485  043A  3465               	retlw	101	;'e'
   486  043B  3467               	retlw	103	;'g'
   487  043C  3469               	retlw	105	;'i'
   488  043D  3464               	retlw	100	;'d'
   489  043E  346F               	retlw	111	;'o'
   490  043F  3420               	retlw	32	;' '
   491  0440  3465               	retlw	101	;'e'
   492  0441  3473               	retlw	115	;'s'
   493  0442  343A               	retlw	58	;':'
   494  0443  3420               	retlw	32	;' '
   495  0444  3425               	retlw	37	;'%'
   496  0445  3464               	retlw	100	;'d'
   497  0446  3400               	retlw	0
   498  0447                     STR_11:
   499  0447  3449               	retlw	73	;'I'
   500  0448  346E               	retlw	110	;'n'
   501  0449  3467               	retlw	103	;'g'
   502  044A  3472               	retlw	114	;'r'
   503  044B  3465               	retlw	101	;'e'
   504  044C  3473               	retlw	115	;'s'
   505  044D  3461               	retlw	97	;'a'
   506  044E  3472               	retlw	114	;'r'
   507  044F  3420               	retlw	32	;' '
   508  0450  3455               	retlw	85	;'U'
   509  0451  346E               	retlw	110	;'n'
   510  0452  3469               	retlw	105	;'i'
   511  0453  3464               	retlw	100	;'d'
   512  0454  3461               	retlw	97	;'a'
   513  0455  3464               	retlw	100	;'d'
   514  0456  3465               	retlw	101	;'e'
   515  0457  3473               	retlw	115	;'s'
   516  0458  343A               	retlw	58	;':'
   517  0459  3420               	retlw	32	;' '
   518  045A  340D               	retlw	13
   519  045B  3400               	retlw	0
   520  045C                     STR_5:
   521  045C  340D               	retlw	13
   522  045D  3420               	retlw	32	;' '
   523  045E  3456               	retlw	86	;'V'
   524  045F  3461               	retlw	97	;'a'
   525  0460  346C               	retlw	108	;'l'
   526  0461  346F               	retlw	111	;'o'
   527  0462  3472               	retlw	114	;'r'
   528  0463  3420               	retlw	32	;' '
   529  0464  3464               	retlw	100	;'d'
   530  0465  3465               	retlw	101	;'e'
   531  0466  346C               	retlw	108	;'l'
   532  0467  3420               	retlw	32	;' '
   533  0468  3450               	retlw	80	;'P'
   534  0469  344F               	retlw	79	;'O'
   535  046A  3454               	retlw	84	;'T'
   536  046B  3432               	retlw	50	;'2'
   537  046C  343A               	retlw	58	;':'
   538  046D  3420               	retlw	32	;' '
   539  046E  340D               	retlw	13
   540  046F  3400               	retlw	0
   541  0470                     STR_10:
   542  0470  3449               	retlw	73	;'I'
   543  0471  346E               	retlw	110	;'n'
   544  0472  3467               	retlw	103	;'g'
   545  0473  3472               	retlw	114	;'r'
   546  0474  3465               	retlw	101	;'e'
   547  0475  3473               	retlw	115	;'s'
   548  0476  3461               	retlw	97	;'a'
   549  0477  3472               	retlw	114	;'r'
   550  0478  3420               	retlw	32	;' '
   551  0479  3444               	retlw	68	;'D'
   552  047A  3465               	retlw	101	;'e'
   553  047B  3463               	retlw	99	;'c'
   554  047C  3465               	retlw	101	;'e'
   555  047D  346E               	retlw	110	;'n'
   556  047E  3461               	retlw	97	;'a'
   557  047F  3473               	retlw	115	;'s'
   558  0480  343A               	retlw	58	;':'
   559  0481  3420               	retlw	32	;' '
   560  0482  340D               	retlw	13
   561  0483  3400               	retlw	0
   562  0484                     STR_1:
   563  0484  340D               	retlw	13
   564  0485  3420               	retlw	32	;' '
   565  0486  3456               	retlw	86	;'V'
   566  0487  3461               	retlw	97	;'a'
   567  0488  346C               	retlw	108	;'l'
   568  0489  346F               	retlw	111	;'o'
   569  048A  3472               	retlw	114	;'r'
   570  048B  3420               	retlw	32	;' '
   571  048C  3464               	retlw	100	;'d'
   572  048D  3465               	retlw	101	;'e'
   573  048E  346C               	retlw	108	;'l'
   574  048F  3420               	retlw	32	;' '
   575  0490  3450               	retlw	80	;'P'
   576  0491  344F               	retlw	79	;'O'
   577  0492  3454               	retlw	84	;'T'
   578  0493  3431               	retlw	49	;'1'
   579  0494  343A               	retlw	58	;':'
   580  0495  340D               	retlw	13
   581  0496  3400               	retlw	0
   582  0497                     STR_2:
   583  0497  3420               	retlw	32	;' '
   584  0498  3420               	retlw	32	;' '
   585  0499  3400               	retlw	0
   586  049A                     STR_3:
   587  049A  3420               	retlw	32	;' '
   588  049B  3456               	retlw	86	;'V'
   589  049C  3400               	retlw	0
   590  046E                     
   591                           	psect	cinit
   592  000F                     start_initialization:	
   593                           ; #config settings
   594                           
   595  000F                     __initialization:
   596                           
   597                           ; Clear objects allocated to COMMON
   598  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   599  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   600                           
   601                           ; Clear objects allocated to BANK0
   602  0011  1283               	bcf	3,5	;RP0=0, select bank0
   603  0012  1303               	bcf	3,6	;RP1=0, select bank0
   604  0013  01EA               	clrf	__pbssBANK0& (0+127)
   605  0014  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   606  0015  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   607                           
   608                           ; Clear objects allocated to BANK1
   609  0016  1683               	bsf	3,5	;RP0=1, select bank1
   610  0017  1303               	bcf	3,6	;RP1=0, select bank1
   611  0018  01A0               	clrf	__pbssBANK1& (0+127)
   612  0019  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   613  001A  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   614  001B  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   615  001C  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   616  001D  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   617  001E  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   618  001F  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   619  0020  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   620  0021  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   621  0022                     end_of_initialization:	
   622                           ;End of C runtime variable initialization code
   623                           
   624  0022                     __end_of__initialization:
   625  0022  0183               	clrf	3
   626  0023  120A  118A  2DF4   	ljmp	_main	;jump to C main() function
   627                           
   628                           	psect	bssCOMMON
   629  007A                     __pbssCOMMON:
   630  007A                     _tens:
   631  007A                     	ds	1
   632  007B                     _hundreds:
   633  007B                     	ds	1
   634                           
   635                           	psect	bssBANK0
   636  006A                     __pbssBANK0:
   637  006A                     _cen:
   638  006A                     	ds	1
   639  006B                     _residuo:
   640  006B                     	ds	1
   641  006C                     _units:
   642  006C                     	ds	1
   643                           
   644                           	psect	bssBANK1
   645  00A0                     __pbssBANK1:
   646  00A0                     _full:
   647  00A0                     	ds	2
   648  00A2                     _contador:
   649  00A2                     	ds	2
   650  00A4                     _con:
   651  00A4                     	ds	1
   652  00A5                     _var:
   653  00A5                     	ds	1
   654  00A6                     _uni:
   655  00A6                     	ds	1
   656  00A7                     _dec:
   657  00A7                     	ds	1
   658  00A8                     _pot2:
   659  00A8                     	ds	1
   660  00A9                     _pot1:
   661  00A9                     	ds	1
   662                           
   663                           	psect	cstackBANK1
   664  00AA                     __pcstackBANK1:
   665  00AA                     ??_mensaje:
   666                           
   667                           ; 1 bytes @ 0x0
   668  00AA                     	ds	5
   669                           
   670                           	psect	cstackCOMMON
   671  0070                     __pcstackCOMMON:
   672  0070                     ?_isdigit:
   673  0070                     ?_setup:	
   674                           ; 1 bit 
   675                           
   676  0070                     ?_spiWrite:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_spiRead:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_mensaje:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_isr:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ??_isr:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_main:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_division:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_spiReceiveWait:	
   698                           ; 1 bytes @ 0x0
   699                           
   700                           
   701                           ; 1 bytes @ 0x0
   702  0070                     	ds	2
   703  0072                     ??_spiWrite:
   704  0072                     ??_spiRead:	
   705                           ; 1 bytes @ 0x2
   706                           
   707  0072                     ?_spiInit:	
   708                           ; 1 bytes @ 0x2
   709                           
   710  0072                     ?_strcat:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0072                     ??_isdigit:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     ?_putch:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     ??_spiReceiveWait:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     ?___wmul:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     ?___awdiv:	
   726                           ; 2 bytes @ 0x2
   727                           
   728  0072                     ?___awmod:	
   729                           ; 2 bytes @ 0x2
   730                           
   731  0072                     ?___lwdiv:	
   732                           ; 2 bytes @ 0x2
   733                           
   734  0072                     putch@data:	
   735                           ; 2 bytes @ 0x2
   736                           
   737  0072                     spiInit@sDataSample:	
   738                           ; 1 bytes @ 0x2
   739                           
   740  0072                     spiWrite@dat:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0072                     _isdigit$1037:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0072                     strcat@from:	
   747                           ; 1 bytes @ 0x2
   748                           
   749  0072                     ___wmul@multiplier:	
   750                           ; 1 bytes @ 0x2
   751                           
   752  0072                     ___awdiv@divisor:	
   753                           ; 2 bytes @ 0x2
   754                           
   755  0072                     ___awmod@divisor:	
   756                           ; 2 bytes @ 0x2
   757                           
   758  0072                     ___lwdiv@divisor:	
   759                           ; 2 bytes @ 0x2
   760                           
   761                           
   762                           ; 2 bytes @ 0x2
   763  0072                     	ds	1
   764  0073                     ??_strcat:
   765  0073                     ??_putch:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0073                     spiInit@sClockIdle:	
   769                           ; 1 bytes @ 0x3
   770                           
   771  0073                     isdigit@c:	
   772                           ; 1 bytes @ 0x3
   773                           
   774                           
   775                           ; 1 bytes @ 0x3
   776  0073                     	ds	1
   777  0074                     spiInit@sTransmitEdge:
   778  0074                     strcat@to:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     ___wmul@multiplicand:	
   782                           ; 1 bytes @ 0x4
   783                           
   784  0074                     ___awdiv@dividend:	
   785                           ; 2 bytes @ 0x4
   786                           
   787  0074                     ___awmod@dividend:	
   788                           ; 2 bytes @ 0x4
   789                           
   790  0074                     ___lwdiv@dividend:	
   791                           ; 2 bytes @ 0x4
   792                           
   793                           
   794                           ; 2 bytes @ 0x4
   795  0074                     	ds	1
   796  0075                     ??_spiInit:
   797  0075                     spiInit@sType:	
   798                           ; 1 bytes @ 0x5
   799                           
   800  0075                     strcat@cp:	
   801                           ; 1 bytes @ 0x5
   802                           
   803                           
   804                           ; 1 bytes @ 0x5
   805  0075                     	ds	1
   806  0076                     ??_setup:
   807  0076                     ??___wmul:	
   808                           ; 1 bytes @ 0x6
   809                           
   810  0076                     ??___awdiv:	
   811                           ; 1 bytes @ 0x6
   812                           
   813  0076                     ??___awmod:	
   814                           ; 1 bytes @ 0x6
   815                           
   816  0076                     ??___lwdiv:	
   817                           ; 1 bytes @ 0x6
   818                           
   819  0076                     ___wmul@product:	
   820                           ; 1 bytes @ 0x6
   821                           
   822                           
   823                           ; 2 bytes @ 0x6
   824  0076                     	ds	1
   825  0077                     ___awmod@counter:
   826  0077                     ___lwdiv@quotient:	
   827                           ; 1 bytes @ 0x7
   828                           
   829                           
   830                           ; 2 bytes @ 0x7
   831  0077                     	ds	1
   832  0078                     ?_atoi:
   833  0078                     ___awmod@sign:	
   834                           ; 2 bytes @ 0x8
   835                           
   836                           
   837                           ; 1 bytes @ 0x8
   838  0078                     	ds	1
   839  0079                     division@valor:
   840  0079                     ___lwdiv@counter:	
   841                           ; 1 bytes @ 0x9
   842                           
   843                           
   844                           ; 1 bytes @ 0x9
   845  0079                     	ds	1
   846                           
   847                           	psect	cstackBANK0
   848  0020                     __pcstackBANK0:
   849  0020                     ??_atoi:
   850  0020                     ?___lwmod:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ___awdiv@counter:	
   854                           ; 2 bytes @ 0x0
   855                           
   856  0020                     ___lwmod@divisor:	
   857                           ; 1 bytes @ 0x0
   858                           
   859                           
   860                           ; 2 bytes @ 0x0
   861  0020                     	ds	1
   862  0021                     ___awdiv@sign:
   863                           
   864                           ; 1 bytes @ 0x1
   865  0021                     	ds	1
   866  0022                     atoi@sign:
   867  0022                     ___awdiv@quotient:	
   868                           ; 1 bytes @ 0x2
   869                           
   870  0022                     ___lwmod@dividend:	
   871                           ; 2 bytes @ 0x2
   872                           
   873                           
   874                           ; 2 bytes @ 0x2
   875  0022                     	ds	1
   876  0023                     atoi@a:
   877                           
   878                           ; 2 bytes @ 0x3
   879  0023                     	ds	1
   880  0024                     ??_division:
   881  0024                     ??___lwmod:	
   882                           ; 1 bytes @ 0x4
   883                           
   884                           
   885                           ; 1 bytes @ 0x4
   886  0024                     	ds	1
   887  0025                     ___lwmod@counter:
   888  0025                     atoi@s:	
   889                           ; 1 bytes @ 0x5
   890                           
   891                           
   892                           ; 1 bytes @ 0x5
   893  0025                     	ds	1
   894  0026                     ?__doprnt:
   895  0026                     __doprnt@f:	
   896                           ; 2 bytes @ 0x6
   897                           
   898                           
   899                           ; 1 bytes @ 0x6
   900  0026                     	ds	1
   901  0027                     __doprnt@ap:
   902                           
   903                           ; 1 bytes @ 0x7
   904  0027                     	ds	1
   905  0028                     ??__doprnt:
   906                           
   907                           ; 1 bytes @ 0x8
   908  0028                     	ds	3
   909  002B                     __doprnt@flag:
   910                           
   911                           ; 1 bytes @ 0xB
   912  002B                     	ds	1
   913  002C                     __doprnt@prec:
   914                           
   915                           ; 1 bytes @ 0xC
   916  002C                     	ds	1
   917  002D                     __doprnt@val:
   918                           
   919                           ; 2 bytes @ 0xD
   920  002D                     	ds	2
   921  002F                     __doprnt@c:
   922                           
   923                           ; 1 bytes @ 0xF
   924  002F                     	ds	1
   925  0030                     __doprnt@pb:
   926                           
   927                           ; 1 bytes @ 0x10
   928  0030                     	ds	1
   929  0031                     ?_printf:
   930  0031                     ?_sprintf:	
   931                           ; 2 bytes @ 0x11
   932                           
   933  0031                     sprintf@f:	
   934                           ; 2 bytes @ 0x11
   935                           
   936                           
   937                           ; 1 bytes @ 0x11
   938  0031                     	ds	2
   939  0033                     ??_printf:
   940                           
   941                           ; 1 bytes @ 0x13
   942  0033                     	ds	1
   943  0034                     ??_sprintf:
   944                           
   945                           ; 1 bytes @ 0x14
   946  0034                     	ds	1
   947  0035                     printf@ap:
   948                           
   949                           ; 1 bytes @ 0x15
   950  0035                     	ds	1
   951  0036                     printf@f:
   952  0036                     sprintf@wh:	
   953                           ; 1 bytes @ 0x16
   954                           
   955                           
   956                           ; 1 bytes @ 0x16
   957  0036                     	ds	1
   958  0037                     sprintf@ap:
   959  0037                     printf@pb:	
   960                           ; 1 bytes @ 0x17
   961                           
   962                           
   963                           ; 2 bytes @ 0x17
   964  0037                     	ds	1
   965  0038                     sprintf@pb:
   966                           
   967                           ; 2 bytes @ 0x18
   968  0038                     	ds	2
   969  003A                     ?_concat:
   970  003A                     concat@a:	
   971                           ; 2 bytes @ 0x1A
   972                           
   973                           
   974                           ; 2 bytes @ 0x1A
   975  003A                     	ds	2
   976  003C                     concat@b:
   977                           
   978                           ; 2 bytes @ 0x1C
   979  003C                     	ds	2
   980  003E                     ??_concat:
   981                           
   982                           ; 1 bytes @ 0x1E
   983  003E                     	ds	1
   984  003F                     concat@s2:
   985                           
   986                           ; 20 bytes @ 0x1F
   987  003F                     	ds	20
   988  0053                     concat@s1:
   989                           
   990                           ; 20 bytes @ 0x33
   991  0053                     	ds	20
   992  0067                     concat@c:
   993                           
   994                           ; 2 bytes @ 0x47
   995  0067                     	ds	2
   996  0069                     ??_main:
   997                           
   998                           ; 1 bytes @ 0x49
   999  0069                     	ds	1
  1000                           
  1001                           	psect	maintext
  1002  05F4                     __pmaintext:	
  1003 ;;
  1004 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1005 ;;
  1006 ;; *************** function _main *****************
  1007 ;; Defined at:
  1008 ;;		line 81 in file "Lab03.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : B00/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0
  1024 ;;      Temps:          0       1       0       0       0
  1025 ;;      Totals:         0       1       0       0       0
  1026 ;;Total ram usage:        1 bytes
  1027 ;; Hardware stack levels required when called:    6
  1028 ;; This function calls:
  1029 ;;		_mensaje
  1030 ;;		_setup
  1031 ;;		_spiRead
  1032 ;;		_spiWrite
  1033 ;; This function is called by:
  1034 ;;		Startup code after reset
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _main
  1040  05F4                     _main:
  1041  05F4                     l2284:	
  1042                           ;incstack = 0
  1043                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1044                           
  1045                           
  1046                           ;Lab03.c: 83:     setup();
  1047  05F4  120A  118A  2768  120A  118A  	fcall	_setup
  1048  05F9                     l2286:
  1049                           
  1050                           ;Lab03.c: 87:     {;Lab03.c: 90:     PORTCbits.RC2 = 0;
  1051  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1052  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1053  05FB  1107               	bcf	7,2	;volatile
  1054  05FC                     l2288:
  1055                           
  1056                           ;Lab03.c: 91:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1057  05FC  30C7               	movlw	199
  1058  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1059  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1060  05FF  00E9               	movwf	??_main
  1061  0600                     u1787:
  1062  0600  2E01               	nop2
  1063  0601  0BE9               	decfsz	??_main,f
  1064  0602  2E00               	goto	u1787
  1065  0603  2E04               	nop2
  1066  0604                     l2290:
  1067                           
  1068                           ;Lab03.c: 93:        spiWrite(0x0A);
  1069  0604  300A               	movlw	10
  1070  0605  120A  118A  23F8  120A  118A  	fcall	_spiWrite
  1071  060A                     l2292:
  1072                           
  1073                           ;Lab03.c: 94:        pot1 = spiRead();
  1074  060A  120A  118A  23D8  120A  118A  	fcall	_spiRead
  1075  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0611  00E9               	movwf	??_main
  1078  0612  0869               	movf	??_main,w
  1079  0613  1683               	bsf	3,5	;RP0=1, select bank1
  1080  0614  1303               	bcf	3,6	;RP1=0, select bank1
  1081  0615  00A9               	movwf	_pot1^(0+128)
  1082  0616                     l2294:
  1083                           
  1084                           ;Lab03.c: 95:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1085  0616  30C7               	movlw	199
  1086  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0619  00E9               	movwf	??_main
  1089  061A                     u1797:
  1090  061A  2E1B               	nop2
  1091  061B  0BE9               	decfsz	??_main,f
  1092  061C  2E1A               	goto	u1797
  1093  061D  2E1E               	nop2
  1094                           
  1095                           ;Lab03.c: 96:        spiWrite(0x0A);
  1096  061E  300A               	movlw	10
  1097  061F  120A  118A  23F8  120A  118A  	fcall	_spiWrite
  1098                           
  1099                           ;Lab03.c: 97:        pot2 = spiRead();
  1100  0624  120A  118A  23D8  120A  118A  	fcall	_spiRead
  1101  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1102  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1103  062B  00E9               	movwf	??_main
  1104  062C  0869               	movf	??_main,w
  1105  062D  1683               	bsf	3,5	;RP0=1, select bank1
  1106  062E  1303               	bcf	3,6	;RP1=0, select bank1
  1107  062F  00A8               	movwf	_pot2^(0+128)
  1108  0630                     l2296:
  1109                           
  1110                           ;Lab03.c: 98:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1111  0630  30C7               	movlw	199
  1112  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0633  00E9               	movwf	??_main
  1115  0634                     u1807:
  1116  0634  2E35               	nop2
  1117  0635  0BE9               	decfsz	??_main,f
  1118  0636  2E34               	goto	u1807
  1119  0637  2E38               	nop2
  1120  0638                     l2298:
  1121                           
  1122                           ;Lab03.c: 101:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1123  0638  30C7               	movlw	199
  1124  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1125  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1126  063B  00E9               	movwf	??_main
  1127  063C                     u1817:
  1128  063C  2E3D               	nop2
  1129  063D  0BE9               	decfsz	??_main,f
  1130  063E  2E3C               	goto	u1817
  1131  063F  2E40               	nop2
  1132  0640                     l2300:
  1133                           
  1134                           ;Lab03.c: 102:        PORTCbits.RC2 = 1;
  1135  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0642  1507               	bsf	7,2	;volatile
  1138  0643                     l2302:
  1139                           
  1140                           ;Lab03.c: 103:        mensaje();
  1141  0643  120A  118A  202F  120A  118A  	fcall	_mensaje
  1142  0648                     l2304:
  1143                           
  1144                           ;Lab03.c: 105:        PORTB = full;
  1145  0648  1683               	bsf	3,5	;RP0=1, select bank1
  1146  0649  1303               	bcf	3,6	;RP1=0, select bank1
  1147  064A  0820               	movf	_full^(0+128),w
  1148  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1149  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1150  064D  0086               	movwf	6	;volatile
  1151  064E  2DF9               	goto	l2286
  1152  064F  120A  118A  280C   	ljmp	start
  1153  0652                     __end_of_main:
  1154                           
  1155                           	psect	text1
  1156  03F8                     __ptext1:	
  1157 ;; *************** function _spiWrite *****************
  1158 ;; Defined at:
  1159 ;;		line 34 in file "SPI.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  dat             1    wreg     unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  dat             1    2[COMMON] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         1       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         1       0       0       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _spiWrite
  1189  03F8                     _spiWrite:
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _spiWrite: [wreg]
  1193                           ;spiWrite@dat stored from wreg
  1194  03F8  00F2               	movwf	spiWrite@dat
  1195  03F9                     l1830:
  1196                           
  1197                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1198  03F9  0872               	movf	spiWrite@dat,w
  1199  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1200  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1201  03FC  0093               	movwf	19	;volatile
  1202  03FD                     l181:
  1203  03FD  0008               	return
  1204  03FE                     __end_of_spiWrite:
  1205                           
  1206                           	psect	text2
  1207  03D8                     __ptext2:	
  1208 ;; *************** function _spiRead *****************
  1209 ;; Defined at:
  1210 ;;		line 47 in file "SPI.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      unsigned char 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0
  1227 ;;      Totals:         0       0       0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    2
  1231 ;; This function calls:
  1232 ;;		_spiReceiveWait
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _spiRead
  1240  03D8                     _spiRead:
  1241  03D8                     l1832:	
  1242                           ;incstack = 0
  1243                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1244                           
  1245                           
  1246                           ;SPI.c: 49:     spiReceiveWait();
  1247  03D8  120A  118A  23EA  120A  118A  	fcall	_spiReceiveWait
  1248  03DD                     l1834:
  1249                           
  1250                           ;SPI.c: 50:     return(SSPBUF);
  1251  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1252  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1253  03DF  0813               	movf	19,w	;volatile
  1254  03E0                     l189:
  1255  03E0  0008               	return
  1256  03E1                     __end_of_spiRead:
  1257                           
  1258                           	psect	text3
  1259  03EA                     __ptext3:	
  1260 ;; *************** function _spiReceiveWait *****************
  1261 ;; Defined at:
  1262 ;;		line 29 in file "SPI.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		None
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0
  1279 ;;      Totals:         0       0       0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    1
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_spiRead
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _spiReceiveWait
  1292  03EA                     _spiReceiveWait:
  1293  03EA                     l1788:	
  1294                           ;incstack = 0
  1295                           ; Regs used in _spiReceiveWait: []
  1296                           
  1297  03EA                     l175:	
  1298                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1299                           
  1300  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  1301  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  1302  03EC  1C14               	btfss	20,0	;volatile
  1303  03ED  2BEF               	goto	u1271
  1304  03EE  2BF0               	goto	u1270
  1305  03EF                     u1271:
  1306  03EF  2BEA               	goto	l175
  1307  03F0                     u1270:
  1308  03F0                     l178:
  1309  03F0  0008               	return
  1310  03F1                     __end_of_spiReceiveWait:
  1311                           
  1312                           	psect	text4
  1313  0768                     __ptext4:	
  1314 ;; *************** function _setup *****************
  1315 ;; Defined at:
  1316 ;;		line 114 in file "Lab03.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0, pclath, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0
  1333 ;;      Totals:         0       0       0       0       0
  1334 ;;Total ram usage:        0 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    2
  1337 ;; This function calls:
  1338 ;;		_spiInit
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _setup
  1346  0768                     _setup:
  1347  0768                     l1790:	
  1348                           ;incstack = 0
  1349                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1350                           
  1351                           
  1352                           ;Lab03.c: 116:     ANSEL = 0;
  1353  0768  1683               	bsf	3,5	;RP0=1, select bank3
  1354  0769  1703               	bsf	3,6	;RP1=1, select bank3
  1355  076A  0188               	clrf	8	;volatile
  1356                           
  1357                           ;Lab03.c: 117:     ANSELH = 0;
  1358  076B  0189               	clrf	9	;volatile
  1359  076C                     l1792:
  1360                           
  1361                           ;Lab03.c: 118:     TRISC2 = 0;
  1362  076C  1683               	bsf	3,5	;RP0=1, select bank1
  1363  076D  1303               	bcf	3,6	;RP1=0, select bank1
  1364  076E  1107               	bcf	7,2	;volatile
  1365                           
  1366                           ;Lab03.c: 119:     TRISB = 0;
  1367  076F  0186               	clrf	6	;volatile
  1368                           
  1369                           ;Lab03.c: 120:     PORTB = 0;
  1370  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0772  0186               	clrf	6	;volatile
  1373                           
  1374                           ;Lab03.c: 121:     PORTC = 0;
  1375  0773  0187               	clrf	7	;volatile
  1376                           
  1377                           ;Lab03.c: 122:     PORTD = 0;
  1378  0774  0188               	clrf	8	;volatile
  1379  0775                     l1794:
  1380                           
  1381                           ;Lab03.c: 123:     PORTCbits.RC2 = 1;
  1382  0775  1507               	bsf	7,2	;volatile
  1383  0776                     l1796:
  1384                           
  1385                           ;Lab03.c: 124:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE,
  1386  0776  01F2               	clrf	spiInit@sDataSample
  1387  0777  01F3               	clrf	spiInit@sClockIdle
  1388  0778  01F4               	clrf	spiInit@sTransmitEdge
  1389  0779  3020               	movlw	32
  1390  077A  120A  118A  23C2  120A  118A  	fcall	_spiInit
  1391  077F                     l1798:
  1392                           
  1393                           ;Lab03.c: 128:     TXSTAbits.SYNC = 0;
  1394  077F  1683               	bsf	3,5	;RP0=1, select bank1
  1395  0780  1303               	bcf	3,6	;RP1=0, select bank1
  1396  0781  1218               	bcf	24,4	;volatile
  1397  0782                     l1800:
  1398                           
  1399                           ;Lab03.c: 129:     TXSTAbits.BRGH = 1;
  1400  0782  1518               	bsf	24,2	;volatile
  1401  0783                     l1802:
  1402                           
  1403                           ;Lab03.c: 130:     BAUDCTLbits.BRG16 = 0;
  1404  0783  1683               	bsf	3,5	;RP0=1, select bank3
  1405  0784  1703               	bsf	3,6	;RP1=1, select bank3
  1406  0785  1187               	bcf	7,3	;volatile
  1407  0786                     l1804:
  1408                           
  1409                           ;Lab03.c: 132:     SPBRG = 25;
  1410  0786  3019               	movlw	25
  1411  0787  1683               	bsf	3,5	;RP0=1, select bank1
  1412  0788  1303               	bcf	3,6	;RP1=0, select bank1
  1413  0789  0099               	movwf	25	;volatile
  1414  078A                     l1806:
  1415                           
  1416                           ;Lab03.c: 133:     SPBRGH = 1;
  1417  078A  3001               	movlw	1
  1418  078B  009A               	movwf	26	;volatile
  1419  078C                     l1808:
  1420                           
  1421                           ;Lab03.c: 135:     RCSTAbits.SPEN = 1;
  1422  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1423  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1424  078E  1798               	bsf	24,7	;volatile
  1425  078F                     l1810:
  1426                           
  1427                           ;Lab03.c: 136:     RCSTAbits.RX9 = 0;
  1428  078F  1318               	bcf	24,6	;volatile
  1429  0790                     l1812:
  1430                           
  1431                           ;Lab03.c: 137:     RCSTAbits.CREN = 1;
  1432  0790  1618               	bsf	24,4	;volatile
  1433  0791                     l1814:
  1434                           
  1435                           ;Lab03.c: 138:     TXSTAbits.TX9 = 0;
  1436  0791  1683               	bsf	3,5	;RP0=1, select bank1
  1437  0792  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0793  1318               	bcf	24,6	;volatile
  1439  0794                     l1816:
  1440                           
  1441                           ;Lab03.c: 140:     TXSTAbits.TXEN = 1;
  1442  0794  1698               	bsf	24,5	;volatile
  1443  0795                     l1818:
  1444                           
  1445                           ;Lab03.c: 142:     PIR1bits.RCIF = 0;
  1446  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0797  128C               	bcf	12,5	;volatile
  1449  0798                     l1820:
  1450                           
  1451                           ;Lab03.c: 143:     PIR1bits.TXIF = 0;
  1452  0798  120C               	bcf	12,4	;volatile
  1453  0799                     l1822:
  1454                           
  1455                           ;Lab03.c: 146:     OSCCONbits.IRCF0 = 0;
  1456  0799  1683               	bsf	3,5	;RP0=1, select bank1
  1457  079A  1303               	bcf	3,6	;RP1=0, select bank1
  1458  079B  120F               	bcf	15,4	;volatile
  1459  079C                     l1824:
  1460                           
  1461                           ;Lab03.c: 147:     OSCCONbits.IRCF1 = 1;
  1462  079C  168F               	bsf	15,5	;volatile
  1463  079D                     l1826:
  1464                           
  1465                           ;Lab03.c: 148:     OSCCONbits.IRCF2 = 1;
  1466  079D  170F               	bsf	15,6	;volatile
  1467  079E                     l1828:
  1468                           
  1469                           ;Lab03.c: 149:     OSCCONbits.SCS = 1;
  1470  079E  140F               	bsf	15,0	;volatile
  1471  079F                     l102:
  1472  079F  0008               	return
  1473  07A0                     __end_of_setup:
  1474                           
  1475                           	psect	text5
  1476  03C2                     __ptext5:	
  1477 ;; *************** function _spiInit *****************
  1478 ;; Defined at:
  1479 ;;		line 12 in file "SPI.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  sType           1    wreg     enum E1264
  1482 ;;  sDataSample     1    2[COMMON] enum E1272
  1483 ;;  sClockIdle      1    3[COMMON] enum E1276
  1484 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  sType           1    5[COMMON] enum E1264
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         3       0       0       0       0
  1497 ;;      Locals:         1       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0
  1499 ;;      Totals:         4       0       0       0       0
  1500 ;;Total ram usage:        4 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_setup
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _spiInit
  1512  03C2                     _spiInit:
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1516                           ;spiInit@sType stored from wreg
  1517  03C2  00F5               	movwf	spiInit@sType
  1518  03C3                     l1750:
  1519                           
  1520                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1521  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1522  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1523  03C5  1287               	bcf	7,5	;volatile
  1524                           
  1525                           ;SPI.c: 15:     if(sType & 0b00000100)
  1526  03C6  1D75               	btfss	spiInit@sType,2
  1527  03C7  2BC9               	goto	u1261
  1528  03C8  2BCA               	goto	u1260
  1529  03C9                     u1261:
  1530  03C9  2BCE               	goto	l1756
  1531  03CA                     u1260:
  1532  03CA                     l1752:
  1533                           
  1534                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1535  03CA  0874               	movf	spiInit@sTransmitEdge,w
  1536  03CB  0094               	movwf	20	;volatile
  1537  03CC                     l1754:
  1538                           
  1539                           ;SPI.c: 18:         TRISC3 = 1;
  1540  03CC  1587               	bsf	7,3	;volatile
  1541                           
  1542                           ;SPI.c: 19:     }
  1543  03CD  2BD2               	goto	l171
  1544  03CE                     l1756:
  1545                           
  1546                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1547  03CE  0872               	movf	spiInit@sDataSample,w
  1548  03CF  0474               	iorwf	spiInit@sTransmitEdge,w
  1549  03D0  0094               	movwf	20	;volatile
  1550  03D1                     l1758:
  1551                           
  1552                           ;SPI.c: 23:         TRISC3 = 0;
  1553  03D1  1187               	bcf	7,3	;volatile
  1554  03D2                     l171:	
  1555                           ;SPI.c: 24:     }
  1556                           
  1557                           
  1558                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1559  03D2  0875               	movf	spiInit@sType,w
  1560  03D3  0473               	iorwf	spiInit@sClockIdle,w
  1561  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1562  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1563  03D6  0094               	movwf	20	;volatile
  1564  03D7                     l172:
  1565  03D7  0008               	return
  1566  03D8                     __end_of_spiInit:
  1567                           
  1568                           	psect	text6
  1569  002F                     __ptext6:	
  1570 ;; *************** function _mensaje *****************
  1571 ;; Defined at:
  1572 ;;		line 163 in file "Lab03.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0
  1588 ;;      Temps:          0       0       5       0       0
  1589 ;;      Totals:         0       0       5       0       0
  1590 ;;Total ram usage:        5 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    5
  1593 ;; This function calls:
  1594 ;;		_concat
  1595 ;;		_division
  1596 ;;		_printf
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _mensaje
  1604  002F                     _mensaje:
  1605  002F                     l2188:	
  1606                           ;incstack = 0
  1607                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1608                           
  1609                           
  1610                           ;Lab03.c: 164:     division(pot1);
  1611  002F  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0030  1303               	bcf	3,6	;RP1=0, select bank1
  1613  0031  0829               	movf	_pot1^(0+128),w
  1614  0032  120A  118A  2520  120A  118A  	fcall	_division
  1615  0037                     l2190:
  1616                           
  1617                           ;Lab03.c: 165:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1618  0037  3002               	movlw	2
  1619  0038  1683               	bsf	3,5	;RP0=1, select bank1
  1620  0039  1303               	bcf	3,6	;RP1=0, select bank1
  1621  003A  00AC               	movwf	(??_mensaje^(0+128)+2)
  1622  003B  3045               	movlw	69
  1623  003C  00AB               	movwf	(??_mensaje^(0+128)+1)
  1624  003D  30A9               	movlw	169
  1625  003E  00AA               	movwf	??_mensaje^(0+128)
  1626  003F                     u1827:
  1627  003F  0BAA               	decfsz	??_mensaje^(0+128),f
  1628  0040  283F               	goto	u1827
  1629  0041  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1630  0042  283F               	goto	u1827
  1631  0043  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1632  0044  283F               	goto	u1827
  1633  0045                     l2192:
  1634                           
  1635                           ;Lab03.c: 166:     printf("\r Valor del POT1:\r");
  1636  0045  307F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1637  0046  120A  118A  23A7  120A  118A  	fcall	_printf
  1638  004B                     l2194:
  1639                           
  1640                           ;Lab03.c: 167:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1641  004B  3002               	movlw	2
  1642  004C  1683               	bsf	3,5	;RP0=1, select bank1
  1643  004D  1303               	bcf	3,6	;RP1=0, select bank1
  1644  004E  00AC               	movwf	(??_mensaje^(0+128)+2)
  1645  004F  3045               	movlw	69
  1646  0050  00AB               	movwf	(??_mensaje^(0+128)+1)
  1647  0051  30A9               	movlw	169
  1648  0052  00AA               	movwf	??_mensaje^(0+128)
  1649  0053                     u1837:
  1650  0053  0BAA               	decfsz	??_mensaje^(0+128),f
  1651  0054  2853               	goto	u1837
  1652  0055  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1653  0056  2853               	goto	u1837
  1654  0057  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1655  0058  2853               	goto	u1837
  1656  0059                     l2196:
  1657                           
  1658                           ;Lab03.c: 168:     printf("  ");
  1659  0059  3092               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1660  005A  120A  118A  23A7  120A  118A  	fcall	_printf
  1661  005F                     l2198:
  1662                           
  1663                           ;Lab03.c: 169:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1664  005F  3002               	movlw	2
  1665  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1666  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1667  0062  00AC               	movwf	(??_mensaje^(0+128)+2)
  1668  0063  3045               	movlw	69
  1669  0064  00AB               	movwf	(??_mensaje^(0+128)+1)
  1670  0065  30A9               	movlw	169
  1671  0066  00AA               	movwf	??_mensaje^(0+128)
  1672  0067                     u1847:
  1673  0067  0BAA               	decfsz	??_mensaje^(0+128),f
  1674  0068  2867               	goto	u1847
  1675  0069  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1676  006A  2867               	goto	u1847
  1677  006B  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1678  006C  2867               	goto	u1847
  1679  006D                     l2200:
  1680                           
  1681                           ;Lab03.c: 170:     TXREG = hundreds;
  1682  006D  087B               	movf	_hundreds,w
  1683  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1684  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0070  0099               	movwf	25	;volatile
  1686  0071                     l2202:
  1687                           
  1688                           ;Lab03.c: 171:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1689  0071  3002               	movlw	2
  1690  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1691  0073  1303               	bcf	3,6	;RP1=0, select bank1
  1692  0074  00AC               	movwf	(??_mensaje^(0+128)+2)
  1693  0075  3045               	movlw	69
  1694  0076  00AB               	movwf	(??_mensaje^(0+128)+1)
  1695  0077  30A9               	movlw	169
  1696  0078  00AA               	movwf	??_mensaje^(0+128)
  1697  0079                     u1857:
  1698  0079  0BAA               	decfsz	??_mensaje^(0+128),f
  1699  007A  2879               	goto	u1857
  1700  007B  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1701  007C  2879               	goto	u1857
  1702  007D  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1703  007E  2879               	goto	u1857
  1704  007F                     l2204:
  1705                           
  1706                           ;Lab03.c: 172:     TXREG = 46;
  1707  007F  302E               	movlw	46
  1708  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1709  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0082  0099               	movwf	25	;volatile
  1711  0083                     l2206:
  1712                           
  1713                           ;Lab03.c: 173:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1714  0083  3002               	movlw	2
  1715  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0086  00AC               	movwf	(??_mensaje^(0+128)+2)
  1718  0087  3045               	movlw	69
  1719  0088  00AB               	movwf	(??_mensaje^(0+128)+1)
  1720  0089  30A9               	movlw	169
  1721  008A  00AA               	movwf	??_mensaje^(0+128)
  1722  008B                     u1867:
  1723  008B  0BAA               	decfsz	??_mensaje^(0+128),f
  1724  008C  288B               	goto	u1867
  1725  008D  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1726  008E  288B               	goto	u1867
  1727  008F  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1728  0090  288B               	goto	u1867
  1729  0091                     l2208:
  1730                           
  1731                           ;Lab03.c: 174:     TXREG = tens;
  1732  0091  087A               	movf	_tens,w
  1733  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0094  0099               	movwf	25	;volatile
  1736  0095                     l2210:
  1737                           
  1738                           ;Lab03.c: 175:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1739  0095  3002               	movlw	2
  1740  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0098  00AC               	movwf	(??_mensaje^(0+128)+2)
  1743  0099  3045               	movlw	69
  1744  009A  00AB               	movwf	(??_mensaje^(0+128)+1)
  1745  009B  30A9               	movlw	169
  1746  009C  00AA               	movwf	??_mensaje^(0+128)
  1747  009D                     u1877:
  1748  009D  0BAA               	decfsz	??_mensaje^(0+128),f
  1749  009E  289D               	goto	u1877
  1750  009F  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1751  00A0  289D               	goto	u1877
  1752  00A1  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1753  00A2  289D               	goto	u1877
  1754  00A3                     l2212:
  1755                           
  1756                           ;Lab03.c: 176:     TXREG = units;
  1757  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1758  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1759  00A5  086C               	movf	_units,w
  1760  00A6  0099               	movwf	25	;volatile
  1761  00A7                     l2214:
  1762                           
  1763                           ;Lab03.c: 177:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1764  00A7  3002               	movlw	2
  1765  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1766  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1767  00AA  00AC               	movwf	(??_mensaje^(0+128)+2)
  1768  00AB  3045               	movlw	69
  1769  00AC  00AB               	movwf	(??_mensaje^(0+128)+1)
  1770  00AD  30A9               	movlw	169
  1771  00AE  00AA               	movwf	??_mensaje^(0+128)
  1772  00AF                     u1887:
  1773  00AF  0BAA               	decfsz	??_mensaje^(0+128),f
  1774  00B0  28AF               	goto	u1887
  1775  00B1  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1776  00B2  28AF               	goto	u1887
  1777  00B3  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1778  00B4  28AF               	goto	u1887
  1779  00B5                     l2216:
  1780                           
  1781                           ;Lab03.c: 178:     printf(" V");
  1782  00B5  3095               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1783  00B6  120A  118A  23A7  120A  118A  	fcall	_printf
  1784  00BB                     l2218:
  1785                           
  1786                           ;Lab03.c: 179:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1787  00BB  3002               	movlw	2
  1788  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1789  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1790  00BE  00AC               	movwf	(??_mensaje^(0+128)+2)
  1791  00BF  3045               	movlw	69
  1792  00C0  00AB               	movwf	(??_mensaje^(0+128)+1)
  1793  00C1  30A9               	movlw	169
  1794  00C2  00AA               	movwf	??_mensaje^(0+128)
  1795  00C3                     u1897:
  1796  00C3  0BAA               	decfsz	??_mensaje^(0+128),f
  1797  00C4  28C3               	goto	u1897
  1798  00C5  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1799  00C6  28C3               	goto	u1897
  1800  00C7  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1801  00C8  28C3               	goto	u1897
  1802  00C9                     l2220:
  1803                           
  1804                           ;Lab03.c: 180:     printf("\r");
  1805  00C9  3069               	movlw	(low (((STR_5+18)-__stringbase)| (0+32768)))& (0+255)
  1806  00CA  120A  118A  23A7  120A  118A  	fcall	_printf
  1807                           
  1808                           ;Lab03.c: 183:     division(pot2);
  1809  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1810  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1811  00D1  0828               	movf	_pot2^(0+128),w
  1812  00D2  120A  118A  2520  120A  118A  	fcall	_division
  1813  00D7                     l2222:
  1814                           
  1815                           ;Lab03.c: 184:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1816  00D7  3002               	movlw	2
  1817  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1818  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  1819  00DA  00AC               	movwf	(??_mensaje^(0+128)+2)
  1820  00DB  3045               	movlw	69
  1821  00DC  00AB               	movwf	(??_mensaje^(0+128)+1)
  1822  00DD  30A9               	movlw	169
  1823  00DE  00AA               	movwf	??_mensaje^(0+128)
  1824  00DF                     u1907:
  1825  00DF  0BAA               	decfsz	??_mensaje^(0+128),f
  1826  00E0  28DF               	goto	u1907
  1827  00E1  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1828  00E2  28DF               	goto	u1907
  1829  00E3  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1830  00E4  28DF               	goto	u1907
  1831  00E5                     l2224:
  1832                           
  1833                           ;Lab03.c: 185:     printf("\r Valor del POT2: \r");
  1834  00E5  3057               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1835  00E6  120A  118A  23A7  120A  118A  	fcall	_printf
  1836  00EB                     l2226:
  1837                           
  1838                           ;Lab03.c: 186:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1839  00EB  3002               	movlw	2
  1840  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1841  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1842  00EE  00AC               	movwf	(??_mensaje^(0+128)+2)
  1843  00EF  3045               	movlw	69
  1844  00F0  00AB               	movwf	(??_mensaje^(0+128)+1)
  1845  00F1  30A9               	movlw	169
  1846  00F2  00AA               	movwf	??_mensaje^(0+128)
  1847  00F3                     u1917:
  1848  00F3  0BAA               	decfsz	??_mensaje^(0+128),f
  1849  00F4  28F3               	goto	u1917
  1850  00F5  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1851  00F6  28F3               	goto	u1917
  1852  00F7  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1853  00F8  28F3               	goto	u1917
  1854  00F9                     l2228:
  1855                           
  1856                           ;Lab03.c: 187:     printf("  ");
  1857  00F9  3092               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1858  00FA  120A  118A  23A7  120A  118A  	fcall	_printf
  1859  00FF                     l2230:
  1860                           
  1861                           ;Lab03.c: 188:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1862  00FF  3002               	movlw	2
  1863  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0102  00AC               	movwf	(??_mensaje^(0+128)+2)
  1866  0103  3045               	movlw	69
  1867  0104  00AB               	movwf	(??_mensaje^(0+128)+1)
  1868  0105  30A9               	movlw	169
  1869  0106  00AA               	movwf	??_mensaje^(0+128)
  1870  0107                     u1927:
  1871  0107  0BAA               	decfsz	??_mensaje^(0+128),f
  1872  0108  2907               	goto	u1927
  1873  0109  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1874  010A  2907               	goto	u1927
  1875  010B  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1876  010C  2907               	goto	u1927
  1877  010D                     l2232:
  1878                           
  1879                           ;Lab03.c: 189:     TXREG = hundreds;
  1880  010D  087B               	movf	_hundreds,w
  1881  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1882  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0110  0099               	movwf	25	;volatile
  1884  0111                     l2234:
  1885                           
  1886                           ;Lab03.c: 190:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1887  0111  3002               	movlw	2
  1888  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0114  00AC               	movwf	(??_mensaje^(0+128)+2)
  1891  0115  3045               	movlw	69
  1892  0116  00AB               	movwf	(??_mensaje^(0+128)+1)
  1893  0117  30A9               	movlw	169
  1894  0118  00AA               	movwf	??_mensaje^(0+128)
  1895  0119                     u1937:
  1896  0119  0BAA               	decfsz	??_mensaje^(0+128),f
  1897  011A  2919               	goto	u1937
  1898  011B  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1899  011C  2919               	goto	u1937
  1900  011D  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1901  011E  2919               	goto	u1937
  1902  011F                     l2236:
  1903                           
  1904                           ;Lab03.c: 191:     TXREG = 46;
  1905  011F  302E               	movlw	46
  1906  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0122  0099               	movwf	25	;volatile
  1909  0123                     l2238:
  1910                           
  1911                           ;Lab03.c: 192:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1912  0123  3002               	movlw	2
  1913  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1914  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1915  0126  00AC               	movwf	(??_mensaje^(0+128)+2)
  1916  0127  3045               	movlw	69
  1917  0128  00AB               	movwf	(??_mensaje^(0+128)+1)
  1918  0129  30A9               	movlw	169
  1919  012A  00AA               	movwf	??_mensaje^(0+128)
  1920  012B                     u1947:
  1921  012B  0BAA               	decfsz	??_mensaje^(0+128),f
  1922  012C  292B               	goto	u1947
  1923  012D  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1924  012E  292B               	goto	u1947
  1925  012F  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1926  0130  292B               	goto	u1947
  1927  0131                     l2240:
  1928                           
  1929                           ;Lab03.c: 193:     TXREG = tens;
  1930  0131  087A               	movf	_tens,w
  1931  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0134  0099               	movwf	25	;volatile
  1934  0135                     l2242:
  1935                           
  1936                           ;Lab03.c: 194:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1937  0135  3002               	movlw	2
  1938  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1939  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1940  0138  00AC               	movwf	(??_mensaje^(0+128)+2)
  1941  0139  3045               	movlw	69
  1942  013A  00AB               	movwf	(??_mensaje^(0+128)+1)
  1943  013B  30A9               	movlw	169
  1944  013C  00AA               	movwf	??_mensaje^(0+128)
  1945  013D                     u1957:
  1946  013D  0BAA               	decfsz	??_mensaje^(0+128),f
  1947  013E  293D               	goto	u1957
  1948  013F  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1949  0140  293D               	goto	u1957
  1950  0141  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1951  0142  293D               	goto	u1957
  1952  0143                     l2244:
  1953                           
  1954                           ;Lab03.c: 195:     TXREG = units;
  1955  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0145  086C               	movf	_units,w
  1958  0146  0099               	movwf	25	;volatile
  1959  0147                     l2246:
  1960                           
  1961                           ;Lab03.c: 196:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1962  0147  3002               	movlw	2
  1963  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1965  014A  00AC               	movwf	(??_mensaje^(0+128)+2)
  1966  014B  3045               	movlw	69
  1967  014C  00AB               	movwf	(??_mensaje^(0+128)+1)
  1968  014D  30A9               	movlw	169
  1969  014E  00AA               	movwf	??_mensaje^(0+128)
  1970  014F                     u1967:
  1971  014F  0BAA               	decfsz	??_mensaje^(0+128),f
  1972  0150  294F               	goto	u1967
  1973  0151  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1974  0152  294F               	goto	u1967
  1975  0153  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1976  0154  294F               	goto	u1967
  1977  0155                     l2248:
  1978                           
  1979                           ;Lab03.c: 197:     printf(" V");
  1980  0155  3095               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1981  0156  120A  118A  23A7  120A  118A  	fcall	_printf
  1982  015B                     l2250:
  1983                           
  1984                           ;Lab03.c: 198:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1985  015B  3002               	movlw	2
  1986  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1987  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1988  015E  00AC               	movwf	(??_mensaje^(0+128)+2)
  1989  015F  3045               	movlw	69
  1990  0160  00AB               	movwf	(??_mensaje^(0+128)+1)
  1991  0161  30A9               	movlw	169
  1992  0162  00AA               	movwf	??_mensaje^(0+128)
  1993  0163                     u1977:
  1994  0163  0BAA               	decfsz	??_mensaje^(0+128),f
  1995  0164  2963               	goto	u1977
  1996  0165  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1997  0166  2963               	goto	u1977
  1998  0167  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1999  0168  2963               	goto	u1977
  2000  0169                     l2252:
  2001                           
  2002                           ;Lab03.c: 199:     printf("\r");
  2003  0169  3069               	movlw	(low (((STR_5+18)-__stringbase)| (0+32768)))& (0+255)
  2004  016A  120A  118A  23A7  120A  118A  	fcall	_printf
  2005  016F                     l2254:
  2006                           
  2007                           ;Lab03.c: 201:     printf("Ingresar Centena: Rango(0-2)\r");
  2008  016F  300B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2009  0170  120A  118A  23A7  120A  118A  	fcall	_printf
  2010  0175                     l109:
  2011  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0177  1E8C               	btfss	12,5	;volatile
  2014  0178  297A               	goto	u1691
  2015  0179  297B               	goto	u1690
  2016  017A                     u1691:
  2017  017A  2975               	goto	l109
  2018  017B                     u1690:
  2019  017B                     l2256:
  2020                           
  2021                           ;Lab03.c: 204:         cen = RCREG -48;
  2022  017B  081A               	movf	26,w	;volatile
  2023  017C  3ED0               	addlw	208
  2024  017D  1683               	bsf	3,5	;RP0=1, select bank1
  2025  017E  1303               	bcf	3,6	;RP1=0, select bank1
  2026  017F  00AA               	movwf	??_mensaje^(0+128)
  2027  0180  082A               	movf	??_mensaje^(0+128),w
  2028  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0183  00EA               	movwf	_cen
  2031  0184                     l2258:	
  2032                           ;Lab03.c: 206:        while(RCREG > '2'){
  2033                           
  2034                           
  2035                           ;Lab03.c: 206:        while(RCREG > '2'){
  2036  0184  3033               	movlw	51
  2037  0185  021A               	subwf	26,w	;volatile
  2038  0186  1803               	skipnc
  2039  0187  2989               	goto	u1701
  2040  0188  298A               	goto	u1700
  2041  0189                     u1701:
  2042  0189  2975               	goto	l109
  2043  018A                     u1700:
  2044  018A                     l2260:
  2045                           
  2046                           ;Lab03.c: 210:     printf("Ingresar Decenas: \r");
  2047  018A  306B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2048  018B  120A  118A  23A7  120A  118A  	fcall	_printf
  2049  0190                     l116:
  2050  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0192  1E8C               	btfss	12,5	;volatile
  2053  0193  2995               	goto	u1711
  2054  0194  2996               	goto	u1710
  2055  0195                     u1711:
  2056  0195  2990               	goto	l116
  2057  0196                     u1710:
  2058  0196                     l2262:
  2059                           
  2060                           ;Lab03.c: 213:          dec = RCREG -48;
  2061  0196  081A               	movf	26,w	;volatile
  2062  0197  3ED0               	addlw	208
  2063  0198  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0199  1303               	bcf	3,6	;RP1=0, select bank1
  2065  019A  00AA               	movwf	??_mensaje^(0+128)
  2066  019B  082A               	movf	??_mensaje^(0+128),w
  2067  019C  00A7               	movwf	_dec^(0+128)
  2068                           
  2069                           ;Lab03.c: 215:         if(cen == 2){
  2070  019D  3002               	movlw	2
  2071  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2072  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2073  01A0  066A               	xorwf	_cen,w
  2074  01A1  1D03               	btfss	3,2
  2075  01A2  29A4               	goto	u1721
  2076  01A3  29A5               	goto	u1720
  2077  01A4                     u1721:
  2078  01A4  29AB               	goto	l2268
  2079  01A5                     u1720:
  2080  01A5                     l2266:
  2081                           
  2082                           ;Lab03.c: 216:            while(RCREG > '5'){
  2083  01A5  3036               	movlw	54
  2084  01A6  021A               	subwf	26,w	;volatile
  2085  01A7  1803               	skipnc
  2086  01A8  29AA               	goto	u1731
  2087  01A9  29AB               	goto	u1730
  2088  01AA                     u1731:
  2089  01AA  2990               	goto	l116
  2090  01AB                     u1730:
  2091  01AB                     l2268:
  2092                           
  2093                           ;Lab03.c: 221:     printf("Ingresar Unidades: \r");
  2094  01AB  3042               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2095  01AC  120A  118A  23A7  120A  118A  	fcall	_printf
  2096  01B1                     l124:
  2097  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2098  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2099  01B3  1E8C               	btfss	12,5	;volatile
  2100  01B4  29B6               	goto	u1741
  2101  01B5  29B7               	goto	u1740
  2102  01B6                     u1741:
  2103  01B6  29B1               	goto	l124
  2104  01B7                     u1740:
  2105  01B7                     l2270:
  2106                           
  2107                           ;Lab03.c: 224:         uni = RCREG - 48;
  2108  01B7  081A               	movf	26,w	;volatile
  2109  01B8  3ED0               	addlw	208
  2110  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  2111  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  2112  01BB  00AA               	movwf	??_mensaje^(0+128)
  2113  01BC  082A               	movf	??_mensaje^(0+128),w
  2114  01BD  00A6               	movwf	_uni^(0+128)
  2115                           
  2116                           ;Lab03.c: 226:        if(cen == 2 && dec == 5){
  2117  01BE  3002               	movlw	2
  2118  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2119  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2120  01C1  066A               	xorwf	_cen,w
  2121  01C2  1D03               	btfss	3,2
  2122  01C3  29C5               	goto	u1751
  2123  01C4  29C6               	goto	u1750
  2124  01C5                     u1751:
  2125  01C5  29D6               	goto	l2278
  2126  01C6                     u1750:
  2127  01C6                     l2272:
  2128  01C6  3005               	movlw	5
  2129  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2130  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2131  01C9  0627               	xorwf	_dec^(0+128),w
  2132  01CA  1D03               	btfss	3,2
  2133  01CB  29CD               	goto	u1761
  2134  01CC  29CE               	goto	u1760
  2135  01CD                     u1761:
  2136  01CD  29D6               	goto	l2278
  2137  01CE                     u1760:
  2138  01CE                     l2276:
  2139                           
  2140                           ;Lab03.c: 227:            while(RCREG > '5'){
  2141  01CE  3036               	movlw	54
  2142  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2143  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2144  01D1  021A               	subwf	26,w	;volatile
  2145  01D2  1803               	skipnc
  2146  01D3  29D5               	goto	u1771
  2147  01D4  29D6               	goto	u1770
  2148  01D5                     u1771:
  2149  01D5  29B1               	goto	l124
  2150  01D6                     u1770:
  2151  01D6                     l2278:
  2152                           
  2153                           ;Lab03.c: 231:       con = concat(cen, dec);
  2154  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2155  01D7  086A               	movf	_cen,w
  2156  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2157  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2158  01DA  00AA               	movwf	??_mensaje^(0+128)
  2159  01DB  01AB               	clrf	(??_mensaje^(0+128)+1)
  2160  01DC  082A               	movf	??_mensaje^(0+128),w
  2161  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2162  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2163  01DF  00BA               	movwf	concat@a
  2164  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2165  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2166  01E2  082B               	movf	(??_mensaje+1)^(0+128),w
  2167  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2168  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2169  01E5  00BB               	movwf	concat@a+1
  2170  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2171  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2172  01E8  0827               	movf	_dec^(0+128),w
  2173  01E9  00AC               	movwf	(??_mensaje+2)^(0+128)
  2174  01EA  01AD               	clrf	((??_mensaje+2)^(0+128)+1)
  2175  01EB  082C               	movf	(??_mensaje+2)^(0+128),w
  2176  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2177  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2178  01EE  00BC               	movwf	concat@b
  2179  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2180  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2181  01F1  082D               	movf	(??_mensaje+3)^(0+128),w
  2182  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2183  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2184  01F4  00BD               	movwf	concat@b+1
  2185  01F5  120A  118A  26EF  120A  118A  	fcall	_concat
  2186  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2187  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2188  01FC  083A               	movf	?_concat,w
  2189  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2190  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2191  01FF  00AE               	movwf	(??_mensaje+4)^(0+128)
  2192  0200  082E               	movf	(??_mensaje+4)^(0+128),w
  2193  0201  00A4               	movwf	_con^(0+128)
  2194                           
  2195                           ;Lab03.c: 232:       full = concat(con, uni);
  2196  0202  0824               	movf	_con^(0+128),w
  2197  0203  00AA               	movwf	??_mensaje^(0+128)
  2198  0204  01AB               	clrf	(??_mensaje^(0+128)+1)
  2199  0205  082A               	movf	??_mensaje^(0+128),w
  2200  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0208  00BA               	movwf	concat@a
  2203  0209  1683               	bsf	3,5	;RP0=1, select bank1
  2204  020A  1303               	bcf	3,6	;RP1=0, select bank1
  2205  020B  082B               	movf	(??_mensaje+1)^(0+128),w
  2206  020C  1283               	bcf	3,5	;RP0=0, select bank0
  2207  020D  1303               	bcf	3,6	;RP1=0, select bank0
  2208  020E  00BB               	movwf	concat@a+1
  2209  020F  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0210  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0211  0826               	movf	_uni^(0+128),w
  2212  0212  00AC               	movwf	(??_mensaje+2)^(0+128)
  2213  0213  01AD               	clrf	((??_mensaje+2)^(0+128)+1)
  2214  0214  082C               	movf	(??_mensaje+2)^(0+128),w
  2215  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0217  00BC               	movwf	concat@b
  2218  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2220  021A  082D               	movf	(??_mensaje+3)^(0+128),w
  2221  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2222  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2223  021D  00BD               	movwf	concat@b+1
  2224  021E  120A  118A  26EF  120A  118A  	fcall	_concat
  2225  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0225  083B               	movf	?_concat+1,w
  2228  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0228  00A1               	movwf	(_full+1)^(0+128)
  2231  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2232  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2233  022B  083A               	movf	?_concat,w
  2234  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2235  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2236  022E  00A0               	movwf	_full^(0+128)
  2237  022F                     l2280:
  2238                           
  2239                           ;Lab03.c: 233:       _delay((unsigned long)((250)*(4000000/4000.0)));
  2240  022F  3002               	movlw	2
  2241  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0231  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0232  00AC               	movwf	(??_mensaje^(0+128)+2)
  2244  0233  3045               	movlw	69
  2245  0234  00AB               	movwf	(??_mensaje^(0+128)+1)
  2246  0235  30A9               	movlw	169
  2247  0236  00AA               	movwf	??_mensaje^(0+128)
  2248  0237                     u1987:
  2249  0237  0BAA               	decfsz	??_mensaje^(0+128),f
  2250  0238  2A37               	goto	u1987
  2251  0239  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  2252  023A  2A37               	goto	u1987
  2253  023B  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  2254  023C  2A37               	goto	u1987
  2255  023D                     l2282:
  2256                           
  2257                           ;Lab03.c: 234:     printf("El numero elegido es: %d", full);
  2258  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2259  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2260  023F  0821               	movf	(_full+1)^(0+128),w
  2261  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0242  00B2               	movwf	?_printf+1
  2264  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2266  0245  0820               	movf	_full^(0+128),w
  2267  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0248  00B1               	movwf	?_printf
  2270  0249  3029               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2271  024A  120A  118A  23A7  120A  118A  	fcall	_printf
  2272  024F                     l131:
  2273  024F  0008               	return
  2274  0250                     __end_of_mensaje:
  2275                           
  2276                           	psect	text7
  2277  03A7                     __ptext7:	
  2278 ;; *************** function _printf *****************
  2279 ;; Defined at:
  2280 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  f               1    wreg     PTR const unsigned char 
  2283 ;;		 -> STR_12(25), STR_11(21), STR_10(20), STR_9(30), 
  2284 ;;		 -> STR_8(2), STR_7(3), STR_6(3), STR_5(20), 
  2285 ;;		 -> STR_4(2), STR_3(3), STR_2(3), STR_1(19), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  2288 ;;		 -> STR_12(25), STR_11(21), STR_10(20), STR_9(30), 
  2289 ;;		 -> STR_8(2), STR_7(3), STR_6(3), STR_5(20), 
  2290 ;;		 -> STR_4(2), STR_3(3), STR_2(3), STR_1(19), 
  2291 ;;  pb              2   23[BANK0 ] struct __prbuf
  2292 ;;  ap              1   21[BANK0 ] PTR void [1]
  2293 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  2   17[BANK0 ] int 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2303 ;;      Params:         0       2       0       0       0
  2304 ;;      Locals:         0       4       0       0       0
  2305 ;;      Temps:          0       2       0       0       0
  2306 ;;      Totals:         0       8       0       0       0
  2307 ;;Total ram usage:        8 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    3
  2310 ;; This function calls:
  2311 ;;		__doprnt
  2312 ;; This function is called by:
  2313 ;;		_mensaje
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _printf
  2319  03A7                     _printf:
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2323                           ;printf@f stored from wreg
  2324  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2325  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2326  03A9  00B6               	movwf	printf@f
  2327  03AA                     l2168:
  2328  03AA  01B7               	clrf	printf@pb
  2329  03AB                     l2170:
  2330  03AB  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2331  03AC  00B3               	movwf	??_printf
  2332  03AD  0833               	movf	??_printf,w
  2333  03AE  00B8               	movwf	low ((printf@pb| 0+1))
  2334  03AF                     l2172:
  2335  03AF  3031               	movlw	(low (?_printf| 0))& (0+255)
  2336  03B0  00B3               	movwf	??_printf
  2337  03B1  0833               	movf	??_printf,w
  2338  03B2  00B5               	movwf	printf@ap
  2339  03B3                     l2174:
  2340                           
  2341                           ;	Return value of _printf is never used
  2342  03B3  0836               	movf	printf@f,w
  2343  03B4  00B3               	movwf	??_printf
  2344  03B5  0833               	movf	??_printf,w
  2345  03B6  00A6               	movwf	__doprnt@f
  2346  03B7  3035               	movlw	(low (printf@ap| 0))& (0+255)
  2347  03B8  00B4               	movwf	??_printf+1
  2348  03B9  0834               	movf	??_printf+1,w
  2349  03BA  00A7               	movwf	__doprnt@ap
  2350  03BB  3037               	movlw	(low (printf@pb| 0))& (0+255)
  2351  03BC  120A  118A  2250  120A  118A  	fcall	__doprnt
  2352  03C1                     l752:
  2353  03C1  0008               	return
  2354  03C2                     __end_of_printf:
  2355                           
  2356                           	psect	text8
  2357  0520                     __ptext8:	
  2358 ;; *************** function _division *****************
  2359 ;; Defined at:
  2360 ;;		line 152 in file "Lab03.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  valor           1    wreg     unsigned char 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  valor           1    9[COMMON] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      unsigned char 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2374 ;;      Params:         0       0       0       0       0
  2375 ;;      Locals:         1       0       0       0       0
  2376 ;;      Temps:          0       3       0       0       0
  2377 ;;      Totals:         1       3       0       0       0
  2378 ;;Total ram usage:        4 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    2
  2381 ;; This function calls:
  2382 ;;		___awdiv
  2383 ;;		___awmod
  2384 ;; This function is called by:
  2385 ;;		_mensaje
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function _division
  2391  0520                     _division:
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2395                           ;division@valor stored from wreg
  2396  0520  00F9               	movwf	division@valor
  2397  0521                     l2160:
  2398                           
  2399                           ;Lab03.c: 153:     hundreds = valor/50;
  2400  0521  3032               	movlw	50
  2401  0522  00F2               	movwf	___awdiv@divisor
  2402  0523  3000               	movlw	0
  2403  0524  00F3               	movwf	___awdiv@divisor+1
  2404  0525  0879               	movf	division@valor,w
  2405  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0528  00A4               	movwf	??_division
  2408  0529  01A5               	clrf	??_division+1
  2409  052A  0824               	movf	??_division,w
  2410  052B  00F4               	movwf	___awdiv@dividend
  2411  052C  0825               	movf	??_division+1,w
  2412  052D  00F5               	movwf	___awdiv@dividend+1
  2413  052E  120A  118A  258B  120A  118A  	fcall	___awdiv
  2414  0533  0872               	movf	?___awdiv,w
  2415  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0536  00A6               	movwf	??_division+2
  2418  0537  0826               	movf	??_division+2,w
  2419  0538  00FB               	movwf	_hundreds
  2420                           
  2421                           ;Lab03.c: 154:     residuo = valor%100;
  2422  0539  3064               	movlw	100
  2423  053A  00F2               	movwf	___awmod@divisor
  2424  053B  3000               	movlw	0
  2425  053C  00F3               	movwf	___awmod@divisor+1
  2426  053D  0879               	movf	division@valor,w
  2427  053E  00A4               	movwf	??_division
  2428  053F  01A5               	clrf	??_division+1
  2429  0540  0824               	movf	??_division,w
  2430  0541  00F4               	movwf	___awmod@dividend
  2431  0542  0825               	movf	??_division+1,w
  2432  0543  00F5               	movwf	___awmod@dividend+1
  2433  0544  120A  118A  2652  120A  118A  	fcall	___awmod
  2434  0549  0872               	movf	?___awmod,w
  2435  054A  1283               	bcf	3,5	;RP0=0, select bank0
  2436  054B  1303               	bcf	3,6	;RP1=0, select bank0
  2437  054C  00A6               	movwf	??_division+2
  2438  054D  0826               	movf	??_division+2,w
  2439  054E  00EB               	movwf	_residuo
  2440                           
  2441                           ;Lab03.c: 155:     tens = residuo/10;
  2442  054F  300A               	movlw	10
  2443  0550  00F2               	movwf	___awdiv@divisor
  2444  0551  3000               	movlw	0
  2445  0552  00F3               	movwf	___awdiv@divisor+1
  2446  0553  086B               	movf	_residuo,w
  2447  0554  00A4               	movwf	??_division
  2448  0555  01A5               	clrf	??_division+1
  2449  0556  0824               	movf	??_division,w
  2450  0557  00F4               	movwf	___awdiv@dividend
  2451  0558  0825               	movf	??_division+1,w
  2452  0559  00F5               	movwf	___awdiv@dividend+1
  2453  055A  120A  118A  258B  120A  118A  	fcall	___awdiv
  2454  055F  0872               	movf	?___awdiv,w
  2455  0560  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0561  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0562  00A6               	movwf	??_division+2
  2458  0563  0826               	movf	??_division+2,w
  2459  0564  00FA               	movwf	_tens
  2460                           
  2461                           ;Lab03.c: 156:     units = residuo%10;
  2462  0565  300A               	movlw	10
  2463  0566  00F2               	movwf	___awmod@divisor
  2464  0567  3000               	movlw	0
  2465  0568  00F3               	movwf	___awmod@divisor+1
  2466  0569  086B               	movf	_residuo,w
  2467  056A  00A4               	movwf	??_division
  2468  056B  01A5               	clrf	??_division+1
  2469  056C  0824               	movf	??_division,w
  2470  056D  00F4               	movwf	___awmod@dividend
  2471  056E  0825               	movf	??_division+1,w
  2472  056F  00F5               	movwf	___awmod@dividend+1
  2473  0570  120A  118A  2652  120A  118A  	fcall	___awmod
  2474  0575  0872               	movf	?___awmod,w
  2475  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0578  00A6               	movwf	??_division+2
  2478  0579  0826               	movf	??_division+2,w
  2479  057A  00EC               	movwf	_units
  2480  057B                     l2162:
  2481                           
  2482                           ;Lab03.c: 158:     hundreds = hundreds + 48;
  2483  057B  087B               	movf	_hundreds,w
  2484  057C  3E30               	addlw	48
  2485  057D  00A4               	movwf	??_division
  2486  057E  0824               	movf	??_division,w
  2487  057F  00FB               	movwf	_hundreds
  2488  0580                     l2164:
  2489                           
  2490                           ;Lab03.c: 159:     tens = tens + 48;
  2491  0580  087A               	movf	_tens,w
  2492  0581  3E30               	addlw	48
  2493  0582  00A4               	movwf	??_division
  2494  0583  0824               	movf	??_division,w
  2495  0584  00FA               	movwf	_tens
  2496  0585                     l2166:
  2497                           
  2498                           ;Lab03.c: 160:     units = units + 48;
  2499  0585  086C               	movf	_units,w
  2500  0586  3E30               	addlw	48
  2501  0587  00A4               	movwf	??_division
  2502  0588  0824               	movf	??_division,w
  2503  0589  00EC               	movwf	_units
  2504  058A                     l105:
  2505  058A  0008               	return
  2506  058B                     __end_of_division:
  2507                           
  2508                           	psect	text9
  2509  0652                     __ptext9:	
  2510 ;; *************** function ___awmod *****************
  2511 ;; Defined at:
  2512 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  divisor         2    2[COMMON] int 
  2515 ;;  dividend        2    4[COMMON] int 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  sign            1    8[COMMON] unsigned char 
  2518 ;;  counter         1    7[COMMON] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2    2[COMMON] int 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2528 ;;      Params:         4       0       0       0       0
  2529 ;;      Locals:         2       0       0       0       0
  2530 ;;      Temps:          1       0       0       0       0
  2531 ;;      Totals:         7       0       0       0       0
  2532 ;;Total ram usage:        7 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_division
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           
  2543                           ;psect for function ___awmod
  2544  0652                     ___awmod:
  2545  0652                     l1712:	
  2546                           ;incstack = 0
  2547                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2548                           
  2549  0652  01F8               	clrf	___awmod@sign
  2550  0653                     l1714:
  2551  0653  1FF5               	btfss	___awmod@dividend+1,7
  2552  0654  2E56               	goto	u1171
  2553  0655  2E57               	goto	u1170
  2554  0656                     u1171:
  2555  0656  2E5E               	goto	l1720
  2556  0657                     u1170:
  2557  0657                     l1716:
  2558  0657  09F4               	comf	___awmod@dividend,f
  2559  0658  09F5               	comf	___awmod@dividend+1,f
  2560  0659  0AF4               	incf	___awmod@dividend,f
  2561  065A  1903               	skipnz
  2562  065B  0AF5               	incf	___awmod@dividend+1,f
  2563  065C                     l1718:
  2564  065C  01F8               	clrf	___awmod@sign
  2565  065D  0AF8               	incf	___awmod@sign,f
  2566  065E                     l1720:
  2567  065E  1FF3               	btfss	___awmod@divisor+1,7
  2568  065F  2E61               	goto	u1181
  2569  0660  2E62               	goto	u1180
  2570  0661                     u1181:
  2571  0661  2E67               	goto	l1724
  2572  0662                     u1180:
  2573  0662                     l1722:
  2574  0662  09F2               	comf	___awmod@divisor,f
  2575  0663  09F3               	comf	___awmod@divisor+1,f
  2576  0664  0AF2               	incf	___awmod@divisor,f
  2577  0665  1903               	skipnz
  2578  0666  0AF3               	incf	___awmod@divisor+1,f
  2579  0667                     l1724:
  2580  0667  0872               	movf	___awmod@divisor,w
  2581  0668  0473               	iorwf	___awmod@divisor+1,w
  2582  0669  1903               	btfsc	3,2
  2583  066A  2E6C               	goto	u1191
  2584  066B  2E6D               	goto	u1190
  2585  066C                     u1191:
  2586  066C  2E9C               	goto	l1742
  2587  066D                     u1190:
  2588  066D                     l1726:
  2589  066D  01F7               	clrf	___awmod@counter
  2590  066E  0AF7               	incf	___awmod@counter,f
  2591  066F  2E7B               	goto	l1732
  2592  0670                     l1728:
  2593  0670  3001               	movlw	1
  2594  0671                     u1205:
  2595  0671  1003               	clrc
  2596  0672  0DF2               	rlf	___awmod@divisor,f
  2597  0673  0DF3               	rlf	___awmod@divisor+1,f
  2598  0674  3EFF               	addlw	-1
  2599  0675  1D03               	skipz
  2600  0676  2E71               	goto	u1205
  2601  0677                     l1730:
  2602  0677  3001               	movlw	1
  2603  0678  00F6               	movwf	??___awmod
  2604  0679  0876               	movf	??___awmod,w
  2605  067A  07F7               	addwf	___awmod@counter,f
  2606  067B                     l1732:
  2607  067B  1FF3               	btfss	___awmod@divisor+1,7
  2608  067C  2E7E               	goto	u1211
  2609  067D  2E7F               	goto	u1210
  2610  067E                     u1211:
  2611  067E  2E70               	goto	l1728
  2612  067F                     u1210:
  2613  067F                     l1734:
  2614  067F  0873               	movf	___awmod@divisor+1,w
  2615  0680  0275               	subwf	___awmod@dividend+1,w
  2616  0681  1D03               	skipz
  2617  0682  2E85               	goto	u1225
  2618  0683  0872               	movf	___awmod@divisor,w
  2619  0684  0274               	subwf	___awmod@dividend,w
  2620  0685                     u1225:
  2621  0685  1C03               	skipc
  2622  0686  2E88               	goto	u1221
  2623  0687  2E89               	goto	u1220
  2624  0688                     u1221:
  2625  0688  2E8F               	goto	l1738
  2626  0689                     u1220:
  2627  0689                     l1736:
  2628  0689  0872               	movf	___awmod@divisor,w
  2629  068A  02F4               	subwf	___awmod@dividend,f
  2630  068B  0873               	movf	___awmod@divisor+1,w
  2631  068C  1C03               	skipc
  2632  068D  03F5               	decf	___awmod@dividend+1,f
  2633  068E  02F5               	subwf	___awmod@dividend+1,f
  2634  068F                     l1738:
  2635  068F  3001               	movlw	1
  2636  0690                     u1235:
  2637  0690  1003               	clrc
  2638  0691  0CF3               	rrf	___awmod@divisor+1,f
  2639  0692  0CF2               	rrf	___awmod@divisor,f
  2640  0693  3EFF               	addlw	-1
  2641  0694  1D03               	skipz
  2642  0695  2E90               	goto	u1235
  2643  0696                     l1740:
  2644  0696  3001               	movlw	1
  2645  0697  02F7               	subwf	___awmod@counter,f
  2646  0698  1D03               	btfss	3,2
  2647  0699  2E9B               	goto	u1241
  2648  069A  2E9C               	goto	u1240
  2649  069B                     u1241:
  2650  069B  2E7F               	goto	l1734
  2651  069C                     u1240:
  2652  069C                     l1742:
  2653  069C  0878               	movf	___awmod@sign,w
  2654  069D  1903               	btfsc	3,2
  2655  069E  2EA0               	goto	u1251
  2656  069F  2EA1               	goto	u1250
  2657  06A0                     u1251:
  2658  06A0  2EA6               	goto	l1746
  2659  06A1                     u1250:
  2660  06A1                     l1744:
  2661  06A1  09F4               	comf	___awmod@dividend,f
  2662  06A2  09F5               	comf	___awmod@dividend+1,f
  2663  06A3  0AF4               	incf	___awmod@dividend,f
  2664  06A4  1903               	skipnz
  2665  06A5  0AF5               	incf	___awmod@dividend+1,f
  2666  06A6                     l1746:
  2667  06A6  0875               	movf	___awmod@dividend+1,w
  2668  06A7  00F3               	movwf	?___awmod+1
  2669  06A8  0874               	movf	___awmod@dividend,w
  2670  06A9  00F2               	movwf	?___awmod
  2671  06AA                     l441:
  2672  06AA  0008               	return
  2673  06AB                     __end_of___awmod:
  2674                           
  2675                           	psect	text10
  2676  058B                     __ptext10:	
  2677 ;; *************** function ___awdiv *****************
  2678 ;; Defined at:
  2679 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  divisor         2    2[COMMON] int 
  2682 ;;  dividend        2    4[COMMON] int 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  quotient        2    2[BANK0 ] int 
  2685 ;;  sign            1    1[BANK0 ] unsigned char 
  2686 ;;  counter         1    0[BANK0 ] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  2    2[COMMON] int 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         4       0       0       0       0
  2697 ;;      Locals:         0       4       0       0       0
  2698 ;;      Temps:          1       0       0       0       0
  2699 ;;      Totals:         5       4       0       0       0
  2700 ;;Total ram usage:        9 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_division
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function ___awdiv
  2712  058B                     ___awdiv:
  2713  058B                     l2116:	
  2714                           ;incstack = 0
  2715                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2716                           
  2717  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2718  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2719  058D  01A1               	clrf	___awdiv@sign
  2720  058E                     l2118:
  2721  058E  1FF3               	btfss	___awdiv@divisor+1,7
  2722  058F  2D91               	goto	u1591
  2723  0590  2D92               	goto	u1590
  2724  0591                     u1591:
  2725  0591  2D99               	goto	l2124
  2726  0592                     u1590:
  2727  0592                     l2120:
  2728  0592  09F2               	comf	___awdiv@divisor,f
  2729  0593  09F3               	comf	___awdiv@divisor+1,f
  2730  0594  0AF2               	incf	___awdiv@divisor,f
  2731  0595  1903               	skipnz
  2732  0596  0AF3               	incf	___awdiv@divisor+1,f
  2733  0597                     l2122:
  2734  0597  01A1               	clrf	___awdiv@sign
  2735  0598  0AA1               	incf	___awdiv@sign,f
  2736  0599                     l2124:
  2737  0599  1FF5               	btfss	___awdiv@dividend+1,7
  2738  059A  2D9C               	goto	u1601
  2739  059B  2D9D               	goto	u1600
  2740  059C                     u1601:
  2741  059C  2DA6               	goto	l2130
  2742  059D                     u1600:
  2743  059D                     l2126:
  2744  059D  09F4               	comf	___awdiv@dividend,f
  2745  059E  09F5               	comf	___awdiv@dividend+1,f
  2746  059F  0AF4               	incf	___awdiv@dividend,f
  2747  05A0  1903               	skipnz
  2748  05A1  0AF5               	incf	___awdiv@dividend+1,f
  2749  05A2                     l2128:
  2750  05A2  3001               	movlw	1
  2751  05A3  00F6               	movwf	??___awdiv
  2752  05A4  0876               	movf	??___awdiv,w
  2753  05A5  06A1               	xorwf	___awdiv@sign,f
  2754  05A6                     l2130:
  2755  05A6  01A2               	clrf	___awdiv@quotient
  2756  05A7  01A3               	clrf	___awdiv@quotient+1
  2757  05A8                     l2132:
  2758  05A8  0872               	movf	___awdiv@divisor,w
  2759  05A9  0473               	iorwf	___awdiv@divisor+1,w
  2760  05AA  1903               	btfsc	3,2
  2761  05AB  2DAD               	goto	u1611
  2762  05AC  2DAE               	goto	u1610
  2763  05AD                     u1611:
  2764  05AD  2DE5               	goto	l2152
  2765  05AE                     u1610:
  2766  05AE                     l2134:
  2767  05AE  01A0               	clrf	___awdiv@counter
  2768  05AF  0AA0               	incf	___awdiv@counter,f
  2769  05B0  2DBC               	goto	l2140
  2770  05B1                     l2136:
  2771  05B1  3001               	movlw	1
  2772  05B2                     u1625:
  2773  05B2  1003               	clrc
  2774  05B3  0DF2               	rlf	___awdiv@divisor,f
  2775  05B4  0DF3               	rlf	___awdiv@divisor+1,f
  2776  05B5  3EFF               	addlw	-1
  2777  05B6  1D03               	skipz
  2778  05B7  2DB2               	goto	u1625
  2779  05B8                     l2138:
  2780  05B8  3001               	movlw	1
  2781  05B9  00F6               	movwf	??___awdiv
  2782  05BA  0876               	movf	??___awdiv,w
  2783  05BB  07A0               	addwf	___awdiv@counter,f
  2784  05BC                     l2140:
  2785  05BC  1FF3               	btfss	___awdiv@divisor+1,7
  2786  05BD  2DBF               	goto	u1631
  2787  05BE  2DC0               	goto	u1630
  2788  05BF                     u1631:
  2789  05BF  2DB1               	goto	l2136
  2790  05C0                     u1630:
  2791  05C0                     l2142:
  2792  05C0  3001               	movlw	1
  2793  05C1                     u1645:
  2794  05C1  1003               	clrc
  2795  05C2  0DA2               	rlf	___awdiv@quotient,f
  2796  05C3  0DA3               	rlf	___awdiv@quotient+1,f
  2797  05C4  3EFF               	addlw	-1
  2798  05C5  1D03               	skipz
  2799  05C6  2DC1               	goto	u1645
  2800  05C7  0873               	movf	___awdiv@divisor+1,w
  2801  05C8  0275               	subwf	___awdiv@dividend+1,w
  2802  05C9  1D03               	skipz
  2803  05CA  2DCD               	goto	u1655
  2804  05CB  0872               	movf	___awdiv@divisor,w
  2805  05CC  0274               	subwf	___awdiv@dividend,w
  2806  05CD                     u1655:
  2807  05CD  1C03               	skipc
  2808  05CE  2DD0               	goto	u1651
  2809  05CF  2DD1               	goto	u1650
  2810  05D0                     u1651:
  2811  05D0  2DD8               	goto	l2148
  2812  05D1                     u1650:
  2813  05D1                     l2144:
  2814  05D1  0872               	movf	___awdiv@divisor,w
  2815  05D2  02F4               	subwf	___awdiv@dividend,f
  2816  05D3  0873               	movf	___awdiv@divisor+1,w
  2817  05D4  1C03               	skipc
  2818  05D5  03F5               	decf	___awdiv@dividend+1,f
  2819  05D6  02F5               	subwf	___awdiv@dividend+1,f
  2820  05D7                     l2146:
  2821  05D7  1422               	bsf	___awdiv@quotient,0
  2822  05D8                     l2148:
  2823  05D8  3001               	movlw	1
  2824  05D9                     u1665:
  2825  05D9  1003               	clrc
  2826  05DA  0CF3               	rrf	___awdiv@divisor+1,f
  2827  05DB  0CF2               	rrf	___awdiv@divisor,f
  2828  05DC  3EFF               	addlw	-1
  2829  05DD  1D03               	skipz
  2830  05DE  2DD9               	goto	u1665
  2831  05DF                     l2150:
  2832  05DF  3001               	movlw	1
  2833  05E0  02A0               	subwf	___awdiv@counter,f
  2834  05E1  1D03               	btfss	3,2
  2835  05E2  2DE4               	goto	u1671
  2836  05E3  2DE5               	goto	u1670
  2837  05E4                     u1671:
  2838  05E4  2DC0               	goto	l2142
  2839  05E5                     u1670:
  2840  05E5                     l2152:
  2841  05E5  0821               	movf	___awdiv@sign,w
  2842  05E6  1903               	btfsc	3,2
  2843  05E7  2DE9               	goto	u1681
  2844  05E8  2DEA               	goto	u1680
  2845  05E9                     u1681:
  2846  05E9  2DEF               	goto	l2156
  2847  05EA                     u1680:
  2848  05EA                     l2154:
  2849  05EA  09A2               	comf	___awdiv@quotient,f
  2850  05EB  09A3               	comf	___awdiv@quotient+1,f
  2851  05EC  0AA2               	incf	___awdiv@quotient,f
  2852  05ED  1903               	skipnz
  2853  05EE  0AA3               	incf	___awdiv@quotient+1,f
  2854  05EF                     l2156:
  2855  05EF  0823               	movf	___awdiv@quotient+1,w
  2856  05F0  00F3               	movwf	?___awdiv+1
  2857  05F1  0822               	movf	___awdiv@quotient,w
  2858  05F2  00F2               	movwf	?___awdiv
  2859  05F3                     l428:
  2860  05F3  0008               	return
  2861  05F4                     __end_of___awdiv:
  2862                           
  2863                           	psect	text11
  2864  06EF                     __ptext11:	
  2865 ;; *************** function _concat *****************
  2866 ;; Defined at:
  2867 ;;		line 243 in file "Lab03.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  a               2   26[BANK0 ] int 
  2870 ;;  b               2   28[BANK0 ] int 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  s1             20   51[BANK0 ] unsigned char [20]
  2873 ;;  s2             20   31[BANK0 ] unsigned char [20]
  2874 ;;  c               2   71[BANK0 ] int 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2   26[BANK0 ] int 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       4       0       0       0
  2885 ;;      Locals:         0      42       0       0       0
  2886 ;;      Temps:          0       1       0       0       0
  2887 ;;      Totals:         0      47       0       0       0
  2888 ;;Total ram usage:       47 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    4
  2891 ;; This function calls:
  2892 ;;		_atoi
  2893 ;;		_sprintf
  2894 ;;		_strcat
  2895 ;; This function is called by:
  2896 ;;		_mensaje
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _concat
  2902  06EF                     _concat:
  2903  06EF                     l2178:	
  2904                           ;incstack = 0
  2905                           ; Regs used in _concat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2906                           
  2907                           
  2908                           ;Lab03.c: 243: int concat(int a, int b);Lab03.c: 244: {;Lab03.c: 246:     char s1[20];;L
      +                          ab03.c: 247:     char s2[20];;Lab03.c: 251:     sprintf(s1, "%d", a);
  2909  06EF  303F               	movlw	(low (((STR_12+22)-__stringbase)| (0+32768)))& (0+255)
  2910  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2911  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2912  06F2  00BE               	movwf	??_concat
  2913  06F3  083E               	movf	??_concat,w
  2914  06F4  00B1               	movwf	sprintf@f
  2915  06F5  083B               	movf	concat@a+1,w
  2916  06F6  00B3               	movwf	?_sprintf+2
  2917  06F7  083A               	movf	concat@a,w
  2918  06F8  00B2               	movwf	?_sprintf+1
  2919  06F9  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2920  06FA  120A  118A  2386  120A  118A  	fcall	_sprintf
  2921                           
  2922                           ;Lab03.c: 252:     sprintf(s2, "%d", b);
  2923  06FF  303F               	movlw	(low (((STR_12+22)-__stringbase)| (0+32768)))& (0+255)
  2924  0700  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0701  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0702  00BE               	movwf	??_concat
  2927  0703  083E               	movf	??_concat,w
  2928  0704  00B1               	movwf	sprintf@f
  2929  0705  083D               	movf	concat@b+1,w
  2930  0706  00B3               	movwf	?_sprintf+2
  2931  0707  083C               	movf	concat@b,w
  2932  0708  00B2               	movwf	?_sprintf+1
  2933  0709  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2934  070A  120A  118A  2386  120A  118A  	fcall	_sprintf
  2935  070F                     l2180:
  2936                           
  2937                           ;Lab03.c: 256:     strcat(s1, s2);
  2938  070F  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2939  0710  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0711  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0712  00BE               	movwf	??_concat
  2942  0713  083E               	movf	??_concat,w
  2943  0714  00F2               	movwf	strcat@from
  2944  0715  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2945  0716  120A  118A  27A0  120A  118A  	fcall	_strcat
  2946  071B                     l2182:
  2947                           
  2948                           ;Lab03.c: 260:     int c = atoi(s1);
  2949  071B  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2950  071C  120A  118A  249D  120A  118A  	fcall	_atoi
  2951  0721  0879               	movf	?_atoi+1,w
  2952  0722  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0723  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0724  00E8               	movwf	concat@c+1
  2955  0725  0878               	movf	?_atoi,w
  2956  0726  00E7               	movwf	concat@c
  2957  0727                     l2184:
  2958                           
  2959                           ;Lab03.c: 263:     return c;
  2960  0727  0868               	movf	concat@c+1,w
  2961  0728  00BB               	movwf	?_concat+1
  2962  0729  0867               	movf	concat@c,w
  2963  072A  00BA               	movwf	?_concat
  2964  072B                     l140:
  2965  072B  0008               	return
  2966  072C                     __end_of_concat:
  2967                           
  2968                           	psect	text12
  2969  07A0                     __ptext12:	
  2970 ;; *************** function _strcat *****************
  2971 ;; Defined at:
  2972 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  to              1    wreg     PTR unsigned char 
  2975 ;;		 -> concat@s1(20), 
  2976 ;;  from            1    2[COMMON] PTR const unsigned char 
  2977 ;;		 -> concat@s2(20), 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  to              1    4[COMMON] PTR unsigned char 
  2980 ;;		 -> concat@s1(20), 
  2981 ;;  cp              1    5[COMMON] PTR unsigned char 
  2982 ;;		 -> concat@s1(20), 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      PTR unsigned char 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         1       0       0       0       0
  2993 ;;      Locals:         2       0       0       0       0
  2994 ;;      Temps:          1       0       0       0       0
  2995 ;;      Totals:         4       0       0       0       0
  2996 ;;Total ram usage:        4 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    1
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_concat
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _strcat
  3008  07A0                     _strcat:
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  3012                           ;strcat@to stored from wreg
  3013  07A0  00F4               	movwf	strcat@to
  3014  07A1                     l1624:
  3015  07A1  0874               	movf	strcat@to,w
  3016  07A2  00F3               	movwf	??_strcat
  3017  07A3  0873               	movf	??_strcat,w
  3018  07A4  00F5               	movwf	strcat@cp
  3019  07A5  2FAA               	goto	l1628
  3020  07A6                     l1626:
  3021  07A6  3001               	movlw	1
  3022  07A7  00F3               	movwf	??_strcat
  3023  07A8  0873               	movf	??_strcat,w
  3024  07A9  07F5               	addwf	strcat@cp,f
  3025  07AA                     l1628:
  3026  07AA  0875               	movf	strcat@cp,w
  3027  07AB  0084               	movwf	4
  3028  07AC  1383               	bcf	3,7	;select IRP bank0
  3029  07AD  0800               	movf	0,w
  3030  07AE  1D03               	btfss	3,2
  3031  07AF  2FB1               	goto	u991
  3032  07B0  2FB2               	goto	u990
  3033  07B1                     u991:
  3034  07B1  2FA6               	goto	l1626
  3035  07B2                     u990:
  3036  07B2  2FBB               	goto	l1632
  3037  07B3                     l1630:
  3038  07B3  3001               	movlw	1
  3039  07B4  00F3               	movwf	??_strcat
  3040  07B5  0873               	movf	??_strcat,w
  3041  07B6  07F5               	addwf	strcat@cp,f
  3042  07B7  3001               	movlw	1
  3043  07B8  00F3               	movwf	??_strcat
  3044  07B9  0873               	movf	??_strcat,w
  3045  07BA  07F2               	addwf	strcat@from,f
  3046  07BB                     l1632:
  3047  07BB  0872               	movf	strcat@from,w
  3048  07BC  0084               	movwf	4
  3049  07BD  0800               	movf	0,w
  3050  07BE  00F3               	movwf	??_strcat
  3051  07BF  0875               	movf	strcat@cp,w
  3052  07C0  0084               	movwf	4
  3053  07C1  0873               	movf	??_strcat,w
  3054  07C2  0080               	movwf	0
  3055  07C3  0800               	movf	0,w
  3056  07C4  1D03               	btfss	3,2
  3057  07C5  2FC7               	goto	u1001
  3058  07C6  2FC8               	goto	u1000
  3059  07C7                     u1001:
  3060  07C7  2FB3               	goto	l1630
  3061  07C8                     u1000:
  3062  07C8                     l806:
  3063  07C8  0008               	return
  3064  07C9                     __end_of_strcat:
  3065                           
  3066                           	psect	text13
  3067  0386                     __ptext13:	
  3068 ;; *************** function _sprintf *****************
  3069 ;; Defined at:
  3070 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  wh              1    wreg     PTR unsigned char 
  3073 ;;		 -> concat@s2(20), concat@s1(20), 
  3074 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  3075 ;;		 -> STR_14(3), STR_13(3), 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  3078 ;;		 -> concat@s2(20), concat@s1(20), 
  3079 ;;  pb              2   24[BANK0 ] struct __prbuf
  3080 ;;  ap              1   23[BANK0 ] PTR void [1]
  3081 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  2   17[BANK0 ] int 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         0       3       0       0       0
  3092 ;;      Locals:         0       4       0       0       0
  3093 ;;      Temps:          0       2       0       0       0
  3094 ;;      Totals:         0       9       0       0       0
  3095 ;;Total ram usage:        9 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    3
  3098 ;; This function calls:
  3099 ;;		__doprnt
  3100 ;; This function is called by:
  3101 ;;		_concat
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _sprintf
  3107  0386                     _sprintf:
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3111                           ;sprintf@wh stored from wreg
  3112  0386  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0387  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0388  00B6               	movwf	sprintf@wh
  3115  0389                     l2070:
  3116  0389  0836               	movf	sprintf@wh,w
  3117  038A  00B4               	movwf	??_sprintf
  3118  038B  0834               	movf	??_sprintf,w
  3119  038C  00B8               	movwf	sprintf@pb
  3120  038D                     l2072:
  3121  038D  01B9               	clrf	low ((sprintf@pb| 0+1))
  3122  038E                     l2074:
  3123  038E  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3124  038F  00B4               	movwf	??_sprintf
  3125  0390  0834               	movf	??_sprintf,w
  3126  0391  00B7               	movwf	sprintf@ap
  3127  0392                     l2076:
  3128  0392  0831               	movf	sprintf@f,w
  3129  0393  00B4               	movwf	??_sprintf
  3130  0394  0834               	movf	??_sprintf,w
  3131  0395  00A6               	movwf	__doprnt@f
  3132  0396  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  3133  0397  00B5               	movwf	??_sprintf+1
  3134  0398  0835               	movf	??_sprintf+1,w
  3135  0399  00A7               	movwf	__doprnt@ap
  3136  039A  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  3137  039B  120A  118A  2250  120A  118A  	fcall	__doprnt
  3138  03A0                     l2078:
  3139  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  3140  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  3141  03A2  0838               	movf	sprintf@pb,w
  3142  03A3  0084               	movwf	4
  3143  03A4  1383               	bcf	3,7	;select IRP bank0
  3144  03A5  0180               	clrf	0
  3145  03A6                     l797:
  3146  03A6  0008               	return
  3147  03A7                     __end_of_sprintf:
  3148                           
  3149                           	psect	text14
  3150  0250                     __ptext14:	
  3151 ;; *************** function __doprnt *****************
  3152 ;; Defined at:
  3153 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  pb              1    wreg     PTR struct __prbuf
  3156 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3157 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  3158 ;;		 -> STR_14(3), STR_13(3), STR_12(25), STR_11(21), 
  3159 ;;		 -> STR_10(20), STR_9(30), STR_8(2), STR_7(3), 
  3160 ;;		 -> STR_6(3), STR_5(20), STR_4(2), STR_3(3), 
  3161 ;;		 -> STR_2(3), STR_1(19), 
  3162 ;;  ap              1    7[BANK0 ] PTR PTR void 
  3163 ;;		 -> sprintf@ap(1), printf@ap(1), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  3166 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3167 ;;  tmpval          4    0        struct .
  3168 ;;  val             2   13[BANK0 ] unsigned int 
  3169 ;;  cp              2    0        PTR const unsigned char 
  3170 ;;  len             2    0        unsigned int 
  3171 ;;  c               1   15[BANK0 ] unsigned char 
  3172 ;;  prec            1   12[BANK0 ] char 
  3173 ;;  flag            1   11[BANK0 ] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  2    6[BANK0 ] int 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       2       0       0       0
  3184 ;;      Locals:         0       6       0       0       0
  3185 ;;      Temps:          0       3       0       0       0
  3186 ;;      Totals:         0      11       0       0       0
  3187 ;;Total ram usage:       11 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    2
  3190 ;; This function calls:
  3191 ;;		Absolute function
  3192 ;;		___lwdiv
  3193 ;;		___lwmod
  3194 ;;		_putch
  3195 ;; This function is called by:
  3196 ;;		_printf
  3197 ;;		_sprintf
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function __doprnt
  3203  0250                     __doprnt:
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3207                           ;__doprnt@pb stored from wreg
  3208  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0252  00B0               	movwf	__doprnt@pb
  3211  0253                     l1998:
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3214  0253  2B6F               	goto	l2060
  3215  0254                     l2000:
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3218  0254  3025               	movlw	37
  3219  0255  062F               	xorwf	__doprnt@c,w
  3220  0256  1903               	btfsc	3,2
  3221  0257  2A59               	goto	u1431
  3222  0258  2A5A               	goto	u1430
  3223  0259                     u1431:
  3224  0259  2A80               	goto	l2010
  3225  025A                     u1430:
  3226  025A                     l2002:
  3227  025A  0A30               	incf	__doprnt@pb,w
  3228  025B  0084               	movwf	4
  3229  025C  1383               	bcf	3,7	;select IRP bank0
  3230  025D  0800               	movf	0,w
  3231  025E  1903               	btfsc	3,2
  3232  025F  2A61               	goto	u1441
  3233  0260  2A62               	goto	u1440
  3234  0261                     u1441:
  3235  0261  2A71               	goto	l2006
  3236  0262                     u1440:
  3237  0262                     l2004:
  3238  0262  082F               	movf	__doprnt@c,w
  3239  0263  00A8               	movwf	??__doprnt
  3240  0264  0828               	movf	??__doprnt,w
  3241  0265  00F2               	movwf	putch@data
  3242  0266  0A30               	incf	__doprnt@pb,w
  3243  0267  0084               	movwf	4
  3244  0268  0800               	movf	0,w
  3245  0269  120A  118A  2026  120A  118A  	fcall	fptable
  3246  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3247  026F  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0270  2A53               	goto	l1998
  3249  0271                     l2006:
  3250  0271  082F               	movf	__doprnt@c,w
  3251  0272  00A8               	movwf	??__doprnt
  3252  0273  0830               	movf	__doprnt@pb,w
  3253  0274  0084               	movwf	4
  3254  0275  0800               	movf	0,w
  3255  0276  0084               	movwf	4
  3256  0277  0828               	movf	??__doprnt,w
  3257  0278  0080               	movwf	0
  3258  0279                     l2008:
  3259  0279  3001               	movlw	1
  3260  027A  00A8               	movwf	??__doprnt
  3261  027B  0830               	movf	__doprnt@pb,w
  3262  027C  0084               	movwf	4
  3263  027D  0828               	movf	??__doprnt,w
  3264  027E  0780               	addwf	0,f
  3265  027F  2A53               	goto	l1998
  3266  0280                     l2010:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3269  0280  01AB               	clrf	__doprnt@flag
  3270  0281                     l2014:	
  3271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3272                           
  3273  0281  3001               	movlw	1
  3274  0282  07A6               	addwf	__doprnt@f,f
  3275  0283  30FF               	movlw	-1
  3276  0284  0726               	addwf	__doprnt@f,w
  3277  0285  0084               	movwf	4
  3278  0286  120A  118A  2400  120A  118A  	fcall	stringdir
  3279  028B  00AF               	movwf	__doprnt@c
  3280  028C  00A8               	movwf	??__doprnt
  3281  028D  01A9               	clrf	??__doprnt+1
  3282                           
  3283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3284                           ; Switch size 1, requested type "simple"
  3285                           ; Number of cases is 1, Range of values is 0 to 0
  3286                           ; switch strategies available:
  3287                           ; Name         Instructions Cycles
  3288                           ; simple_byte            4     3 (average)
  3289                           ; direct_byte           11     8 (fixed)
  3290                           ; jumptable            260     6 (fixed)
  3291                           ;	Chosen strategy is simple_byte
  3292  028E  0829               	movf	??__doprnt+1,w
  3293  028F  3A00               	xorlw	0	; case 0
  3294  0290  1903               	skipnz
  3295  0291  2A93               	goto	l2326
  3296  0292  2B6F               	goto	l2060
  3297  0293                     l2326:
  3298                           
  3299                           ; Switch size 1, requested type "simple"
  3300                           ; Number of cases is 3, Range of values is 0 to 105
  3301                           ; switch strategies available:
  3302                           ; Name         Instructions Cycles
  3303                           ; simple_byte           10     6 (average)
  3304                           ; jumptable            260     6 (fixed)
  3305                           ;	Chosen strategy is simple_byte
  3306  0293  0828               	movf	??__doprnt,w
  3307  0294  3A00               	xorlw	0	; case 0
  3308  0295  1903               	skipnz
  3309  0296  2B83               	goto	l2062
  3310  0297  3A64               	xorlw	100	; case 100
  3311  0298  1903               	skipnz
  3312  0299  2A9E               	goto	l2016
  3313  029A  3A0D               	xorlw	13	; case 105
  3314  029B  1903               	skipnz
  3315  029C  2A9E               	goto	l2016
  3316  029D  2B6F               	goto	l2060
  3317  029E                     l2016:
  3318                           
  3319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3320  029E  0827               	movf	__doprnt@ap,w
  3321  029F  0084               	movwf	4
  3322  02A0  1383               	bcf	3,7	;select IRP bank0
  3323  02A1  0800               	movf	0,w
  3324  02A2  00A8               	movwf	??__doprnt
  3325  02A3  3002               	movlw	2
  3326  02A4  0780               	addwf	0,f
  3327  02A5  0828               	movf	??__doprnt,w
  3328  02A6  0084               	movwf	4
  3329  02A7  0800               	movf	0,w
  3330  02A8  00AD               	movwf	__doprnt@val
  3331  02A9  0A84               	incf	4,f
  3332  02AA  0800               	movf	0,w
  3333  02AB  00AE               	movwf	__doprnt@val+1
  3334  02AC                     l2018:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3337  02AC  1FAE               	btfss	__doprnt@val+1,7
  3338  02AD  2AAF               	goto	u1451
  3339  02AE  2AB0               	goto	u1450
  3340  02AF                     u1451:
  3341  02AF  2AB9               	goto	l2024
  3342  02B0                     u1450:
  3343  02B0                     l2020:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3346  02B0  3003               	movlw	3
  3347  02B1  00A8               	movwf	??__doprnt
  3348  02B2  0828               	movf	??__doprnt,w
  3349  02B3  04AB               	iorwf	__doprnt@flag,f
  3350  02B4                     l2022:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3353  02B4  09AD               	comf	__doprnt@val,f
  3354  02B5  09AE               	comf	__doprnt@val+1,f
  3355  02B6  0AAD               	incf	__doprnt@val,f
  3356  02B7  1903               	skipnz
  3357  02B8  0AAE               	incf	__doprnt@val+1,f
  3358  02B9                     l2024:
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3361  02B9  01AF               	clrf	__doprnt@c
  3362  02BA  0AAF               	incf	__doprnt@c,f
  3363  02BB                     l2030:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3366  02BB  082F               	movf	__doprnt@c,w
  3367  02BC  00A8               	movwf	??__doprnt
  3368  02BD  0728               	addwf	??__doprnt,w
  3369  02BE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3370  02BF  0084               	movwf	4
  3371  02C0  120A  118A  2400  120A  118A  	fcall	stringdir
  3372  02C5  00A9               	movwf	??__doprnt+1
  3373  02C6  120A  118A  2400  120A  118A  	fcall	stringdir
  3374  02CB  00AA               	movwf	??__doprnt+2
  3375  02CC  082A               	movf	??__doprnt+2,w
  3376  02CD  022E               	subwf	__doprnt@val+1,w
  3377  02CE  1D03               	skipz
  3378  02CF  2AD2               	goto	u1465
  3379  02D0  0829               	movf	??__doprnt+1,w
  3380  02D1  022D               	subwf	__doprnt@val,w
  3381  02D2                     u1465:
  3382  02D2  1803               	skipnc
  3383  02D3  2AD5               	goto	u1461
  3384  02D4  2AD6               	goto	u1460
  3385  02D5                     u1461:
  3386  02D5  2AD7               	goto	l2034
  3387  02D6                     u1460:
  3388  02D6  2AE1               	goto	l2036
  3389  02D7                     l2034:
  3390  02D7  3001               	movlw	1
  3391  02D8  00A8               	movwf	??__doprnt
  3392  02D9  0828               	movf	??__doprnt,w
  3393  02DA  07AF               	addwf	__doprnt@c,f
  3394  02DB  3005               	movlw	5
  3395  02DC  062F               	xorwf	__doprnt@c,w
  3396  02DD  1D03               	btfss	3,2
  3397  02DE  2AE0               	goto	u1471
  3398  02DF  2AE1               	goto	u1470
  3399  02E0                     u1471:
  3400  02E0  2ABB               	goto	l2030
  3401  02E1                     u1470:
  3402  02E1                     l2036:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3405  02E1  082B               	movf	__doprnt@flag,w
  3406  02E2  3903               	andlw	3
  3407  02E3  1903               	btfsc	3,2
  3408  02E4  2AE6               	goto	u1481
  3409  02E5  2AE7               	goto	u1480
  3410  02E6                     u1481:
  3411  02E6  2B0A               	goto	l2046
  3412  02E7                     u1480:
  3413  02E7                     l2038:
  3414  02E7  0A30               	incf	__doprnt@pb,w
  3415  02E8  0084               	movwf	4
  3416  02E9  1383               	bcf	3,7	;select IRP bank0
  3417  02EA  0800               	movf	0,w
  3418  02EB  1903               	btfsc	3,2
  3419  02EC  2AEE               	goto	u1491
  3420  02ED  2AEF               	goto	u1490
  3421  02EE                     u1491:
  3422  02EE  2AFC               	goto	l2042
  3423  02EF                     u1490:
  3424  02EF                     l2040:
  3425  02EF  302D               	movlw	45
  3426  02F0  00A8               	movwf	??__doprnt
  3427  02F1  0828               	movf	??__doprnt,w
  3428  02F2  00F2               	movwf	putch@data
  3429  02F3  0A30               	incf	__doprnt@pb,w
  3430  02F4  0084               	movwf	4
  3431  02F5  0800               	movf	0,w
  3432  02F6  120A  118A  2026  120A  118A  	fcall	fptable
  3433  02FB  2B0A               	goto	l2046
  3434  02FC                     l2042:
  3435  02FC  302D               	movlw	45
  3436  02FD  00A8               	movwf	??__doprnt
  3437  02FE  0830               	movf	__doprnt@pb,w
  3438  02FF  0084               	movwf	4
  3439  0300  0800               	movf	0,w
  3440  0301  0084               	movwf	4
  3441  0302  0828               	movf	??__doprnt,w
  3442  0303  0080               	movwf	0
  3443  0304                     l2044:
  3444  0304  3001               	movlw	1
  3445  0305  00A8               	movwf	??__doprnt
  3446  0306  0830               	movf	__doprnt@pb,w
  3447  0307  0084               	movwf	4
  3448  0308  0828               	movf	??__doprnt,w
  3449  0309  0780               	addwf	0,f
  3450  030A                     l2046:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3453  030A  1283               	bcf	3,5	;RP0=0, select bank0
  3454  030B  1303               	bcf	3,6	;RP1=0, select bank0
  3455  030C  082F               	movf	__doprnt@c,w
  3456  030D  00A8               	movwf	??__doprnt
  3457  030E  0828               	movf	??__doprnt,w
  3458  030F  00AC               	movwf	__doprnt@prec
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3461  0310  2B64               	goto	l2058
  3462  0311                     l2048:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3465  0311  300A               	movlw	10
  3466  0312  00A0               	movwf	___lwmod@divisor
  3467  0313  3000               	movlw	0
  3468  0314  00A1               	movwf	___lwmod@divisor+1
  3469  0315  082C               	movf	__doprnt@prec,w
  3470  0316  00A8               	movwf	??__doprnt
  3471  0317  0728               	addwf	??__doprnt,w
  3472  0318  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3473  0319  0084               	movwf	4
  3474  031A  120A  118A  2400  120A  118A  	fcall	stringdir
  3475  031F  00F2               	movwf	___lwdiv@divisor
  3476  0320  120A  118A  2400  120A  118A  	fcall	stringdir
  3477  0325  00F3               	movwf	___lwdiv@divisor+1
  3478  0326  082E               	movf	__doprnt@val+1,w
  3479  0327  00F5               	movwf	___lwdiv@dividend+1
  3480  0328  082D               	movf	__doprnt@val,w
  3481  0329  00F4               	movwf	___lwdiv@dividend
  3482  032A  120A  118A  26AB  120A  118A  	fcall	___lwdiv
  3483  032F  0873               	movf	?___lwdiv+1,w
  3484  0330  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0331  1303               	bcf	3,6	;RP1=0, select bank0
  3486  0332  00A3               	movwf	___lwmod@dividend+1
  3487  0333  0872               	movf	?___lwdiv,w
  3488  0334  00A2               	movwf	___lwmod@dividend
  3489  0335  120A  118A  272C  120A  118A  	fcall	___lwmod
  3490  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3491  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3492  033C  0820               	movf	?___lwmod,w
  3493  033D  3E30               	addlw	48
  3494  033E  00A9               	movwf	??__doprnt+1
  3495  033F  0829               	movf	??__doprnt+1,w
  3496  0340  00AF               	movwf	__doprnt@c
  3497  0341                     l2050:
  3498  0341  0A30               	incf	__doprnt@pb,w
  3499  0342  0084               	movwf	4
  3500  0343  1383               	bcf	3,7	;select IRP bank0
  3501  0344  0800               	movf	0,w
  3502  0345  1903               	btfsc	3,2
  3503  0346  2B48               	goto	u1501
  3504  0347  2B49               	goto	u1500
  3505  0348                     u1501:
  3506  0348  2B56               	goto	l2054
  3507  0349                     u1500:
  3508  0349                     l2052:
  3509  0349  082F               	movf	__doprnt@c,w
  3510  034A  00A8               	movwf	??__doprnt
  3511  034B  0828               	movf	??__doprnt,w
  3512  034C  00F2               	movwf	putch@data
  3513  034D  0A30               	incf	__doprnt@pb,w
  3514  034E  0084               	movwf	4
  3515  034F  0800               	movf	0,w
  3516  0350  120A  118A  2026  120A  118A  	fcall	fptable
  3517  0355  2B64               	goto	l2058
  3518  0356                     l2054:
  3519  0356  082F               	movf	__doprnt@c,w
  3520  0357  00A8               	movwf	??__doprnt
  3521  0358  0830               	movf	__doprnt@pb,w
  3522  0359  0084               	movwf	4
  3523  035A  0800               	movf	0,w
  3524  035B  0084               	movwf	4
  3525  035C  0828               	movf	??__doprnt,w
  3526  035D  0080               	movwf	0
  3527  035E                     l2056:
  3528  035E  3001               	movlw	1
  3529  035F  00A8               	movwf	??__doprnt
  3530  0360  0830               	movf	__doprnt@pb,w
  3531  0361  0084               	movwf	4
  3532  0362  0828               	movf	??__doprnt,w
  3533  0363  0780               	addwf	0,f
  3534  0364                     l2058:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3537  0364  30FF               	movlw	255
  3538  0365  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0366  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0367  00A8               	movwf	??__doprnt
  3541  0368  0828               	movf	??__doprnt,w
  3542  0369  07AC               	addwf	__doprnt@prec,f
  3543  036A  0A2C               	incf	__doprnt@prec,w
  3544  036B  1D03               	btfss	3,2
  3545  036C  2B6E               	goto	u1511
  3546  036D  2B6F               	goto	u1510
  3547  036E                     u1511:
  3548  036E  2B11               	goto	l2048
  3549  036F                     u1510:
  3550  036F                     l2060:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3553  036F  3001               	movlw	1
  3554  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3555  0371  1303               	bcf	3,6	;RP1=0, select bank0
  3556  0372  07A6               	addwf	__doprnt@f,f
  3557  0373  30FF               	movlw	-1
  3558  0374  0726               	addwf	__doprnt@f,w
  3559  0375  0084               	movwf	4
  3560  0376  120A  118A  2400  120A  118A  	fcall	stringdir
  3561  037B  00A8               	movwf	??__doprnt
  3562  037C  0828               	movf	??__doprnt,w
  3563  037D  00AF               	movwf	__doprnt@c
  3564  037E  082F               	movf	__doprnt@c,w
  3565  037F  1D03               	btfss	3,2
  3566  0380  2B82               	goto	u1521
  3567  0381  2B83               	goto	u1520
  3568  0382                     u1521:
  3569  0382  2A54               	goto	l2000
  3570  0383                     u1520:
  3571  0383                     l2062:
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3574  0383  01A6               	clrf	?__doprnt
  3575  0384  01A7               	clrf	?__doprnt+1
  3576  0385                     l790:
  3577  0385  0008               	return
  3578  0386                     __end_of__doprnt:
  3579                           
  3580                           	psect	text15
  3581  03E1                     __ptext15:	
  3582 ;; *************** function _putch *****************
  3583 ;; Defined at:
  3584 ;;		line 237 in file "Lab03.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  data            1    2[COMMON] unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         1       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         1       0       0       0       0
  3602 ;;Total ram usage:        1 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_printf
  3609 ;;		__doprnt
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _putch
  3615  03E1                     _putch:
  3616  03E1                     l1460:	
  3617                           ;incstack = 0
  3618                           ; Regs used in _putch: [wreg]
  3619                           
  3620  03E1                     l134:	
  3621                           ;Lab03.c: 238:     while(TXIF == 0);
  3622                           
  3623  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  3624  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  3625  03E3  1E0C               	btfss	12,4	;volatile
  3626  03E4  2BE6               	goto	u691
  3627  03E5  2BE7               	goto	u690
  3628  03E6                     u691:
  3629  03E6  2BE1               	goto	l134
  3630  03E7                     u690:
  3631  03E7                     l1462:
  3632                           
  3633                           ;Lab03.c: 239:     TXREG = data;
  3634  03E7  0872               	movf	putch@data,w
  3635  03E8  0099               	movwf	25	;volatile
  3636  03E9                     l137:
  3637  03E9  0008               	return
  3638  03EA                     __end_of_putch:
  3639                           
  3640                           	psect	text16
  3641  072C                     __ptext16:	
  3642 ;; *************** function ___lwmod *****************
  3643 ;; Defined at:
  3644 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  divisor         2    0[BANK0 ] unsigned int 
  3647 ;;  dividend        2    2[BANK0 ] unsigned int 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  counter         1    5[BANK0 ] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  2    0[BANK0 ] unsigned int 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3659 ;;      Params:         0       4       0       0       0
  3660 ;;      Locals:         0       1       0       0       0
  3661 ;;      Temps:          0       1       0       0       0
  3662 ;;      Totals:         0       6       0       0       0
  3663 ;;Total ram usage:        6 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		__doprnt
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           
  3674                           ;psect for function ___lwmod
  3675  072C                     ___lwmod:
  3676  072C                     l1976:	
  3677                           ;incstack = 0
  3678                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3679                           
  3680  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3681  072D  1303               	bcf	3,6	;RP1=0, select bank0
  3682  072E  0820               	movf	___lwmod@divisor,w
  3683  072F  0421               	iorwf	___lwmod@divisor+1,w
  3684  0730  1903               	btfsc	3,2
  3685  0731  2F33               	goto	u1371
  3686  0732  2F34               	goto	u1370
  3687  0733                     u1371:
  3688  0733  2F63               	goto	l1994
  3689  0734                     u1370:
  3690  0734                     l1978:
  3691  0734  01A5               	clrf	___lwmod@counter
  3692  0735  0AA5               	incf	___lwmod@counter,f
  3693  0736  2F42               	goto	l1984
  3694  0737                     l1980:
  3695  0737  3001               	movlw	1
  3696  0738                     u1385:
  3697  0738  1003               	clrc
  3698  0739  0DA0               	rlf	___lwmod@divisor,f
  3699  073A  0DA1               	rlf	___lwmod@divisor+1,f
  3700  073B  3EFF               	addlw	-1
  3701  073C  1D03               	skipz
  3702  073D  2F38               	goto	u1385
  3703  073E                     l1982:
  3704  073E  3001               	movlw	1
  3705  073F  00A4               	movwf	??___lwmod
  3706  0740  0824               	movf	??___lwmod,w
  3707  0741  07A5               	addwf	___lwmod@counter,f
  3708  0742                     l1984:
  3709  0742  1FA1               	btfss	___lwmod@divisor+1,7
  3710  0743  2F45               	goto	u1391
  3711  0744  2F46               	goto	u1390
  3712  0745                     u1391:
  3713  0745  2F37               	goto	l1980
  3714  0746                     u1390:
  3715  0746                     l1986:
  3716  0746  0821               	movf	___lwmod@divisor+1,w
  3717  0747  0223               	subwf	___lwmod@dividend+1,w
  3718  0748  1D03               	skipz
  3719  0749  2F4C               	goto	u1405
  3720  074A  0820               	movf	___lwmod@divisor,w
  3721  074B  0222               	subwf	___lwmod@dividend,w
  3722  074C                     u1405:
  3723  074C  1C03               	skipc
  3724  074D  2F4F               	goto	u1401
  3725  074E  2F50               	goto	u1400
  3726  074F                     u1401:
  3727  074F  2F56               	goto	l1990
  3728  0750                     u1400:
  3729  0750                     l1988:
  3730  0750  0820               	movf	___lwmod@divisor,w
  3731  0751  02A2               	subwf	___lwmod@dividend,f
  3732  0752  0821               	movf	___lwmod@divisor+1,w
  3733  0753  1C03               	skipc
  3734  0754  03A3               	decf	___lwmod@dividend+1,f
  3735  0755  02A3               	subwf	___lwmod@dividend+1,f
  3736  0756                     l1990:
  3737  0756  3001               	movlw	1
  3738  0757                     u1415:
  3739  0757  1003               	clrc
  3740  0758  0CA1               	rrf	___lwmod@divisor+1,f
  3741  0759  0CA0               	rrf	___lwmod@divisor,f
  3742  075A  3EFF               	addlw	-1
  3743  075B  1D03               	skipz
  3744  075C  2F57               	goto	u1415
  3745  075D                     l1992:
  3746  075D  3001               	movlw	1
  3747  075E  02A5               	subwf	___lwmod@counter,f
  3748  075F  1D03               	btfss	3,2
  3749  0760  2F62               	goto	u1421
  3750  0761  2F63               	goto	u1420
  3751  0762                     u1421:
  3752  0762  2F46               	goto	l1986
  3753  0763                     u1420:
  3754  0763                     l1994:
  3755  0763  0823               	movf	___lwmod@dividend+1,w
  3756  0764  00A1               	movwf	?___lwmod+1
  3757  0765  0822               	movf	___lwmod@dividend,w
  3758  0766  00A0               	movwf	?___lwmod
  3759  0767                     l557:
  3760  0767  0008               	return
  3761  0768                     __end_of___lwmod:
  3762                           
  3763                           	psect	text17
  3764  06AB                     __ptext17:	
  3765 ;; *************** function ___lwdiv *****************
  3766 ;; Defined at:
  3767 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  divisor         2    2[COMMON] unsigned int 
  3770 ;;  dividend        2    4[COMMON] unsigned int 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  quotient        2    7[COMMON] unsigned int 
  3773 ;;  counter         1    9[COMMON] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2    2[COMMON] unsigned int 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         4       0       0       0       0
  3784 ;;      Locals:         3       0       0       0       0
  3785 ;;      Temps:          1       0       0       0       0
  3786 ;;      Totals:         8       0       0       0       0
  3787 ;;Total ram usage:        8 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    1
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		__doprnt
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function ___lwdiv
  3799  06AB                     ___lwdiv:
  3800  06AB                     l1466:	
  3801                           ;incstack = 0
  3802                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3803                           
  3804  06AB  01F7               	clrf	___lwdiv@quotient
  3805  06AC  01F8               	clrf	___lwdiv@quotient+1
  3806  06AD                     l1468:
  3807  06AD  0872               	movf	___lwdiv@divisor,w
  3808  06AE  0473               	iorwf	___lwdiv@divisor+1,w
  3809  06AF  1903               	btfsc	3,2
  3810  06B0  2EB2               	goto	u701
  3811  06B1  2EB3               	goto	u700
  3812  06B2                     u701:
  3813  06B2  2EEA               	goto	l1488
  3814  06B3                     u700:
  3815  06B3                     l1470:
  3816  06B3  01F9               	clrf	___lwdiv@counter
  3817  06B4  0AF9               	incf	___lwdiv@counter,f
  3818  06B5  2EC1               	goto	l1476
  3819  06B6                     l1472:
  3820  06B6  3001               	movlw	1
  3821  06B7                     u715:
  3822  06B7  1003               	clrc
  3823  06B8  0DF2               	rlf	___lwdiv@divisor,f
  3824  06B9  0DF3               	rlf	___lwdiv@divisor+1,f
  3825  06BA  3EFF               	addlw	-1
  3826  06BB  1D03               	skipz
  3827  06BC  2EB7               	goto	u715
  3828  06BD                     l1474:
  3829  06BD  3001               	movlw	1
  3830  06BE  00F6               	movwf	??___lwdiv
  3831  06BF  0876               	movf	??___lwdiv,w
  3832  06C0  07F9               	addwf	___lwdiv@counter,f
  3833  06C1                     l1476:
  3834  06C1  1FF3               	btfss	___lwdiv@divisor+1,7
  3835  06C2  2EC4               	goto	u721
  3836  06C3  2EC5               	goto	u720
  3837  06C4                     u721:
  3838  06C4  2EB6               	goto	l1472
  3839  06C5                     u720:
  3840  06C5                     l1478:
  3841  06C5  3001               	movlw	1
  3842  06C6                     u735:
  3843  06C6  1003               	clrc
  3844  06C7  0DF7               	rlf	___lwdiv@quotient,f
  3845  06C8  0DF8               	rlf	___lwdiv@quotient+1,f
  3846  06C9  3EFF               	addlw	-1
  3847  06CA  1D03               	skipz
  3848  06CB  2EC6               	goto	u735
  3849  06CC  0873               	movf	___lwdiv@divisor+1,w
  3850  06CD  0275               	subwf	___lwdiv@dividend+1,w
  3851  06CE  1D03               	skipz
  3852  06CF  2ED2               	goto	u745
  3853  06D0  0872               	movf	___lwdiv@divisor,w
  3854  06D1  0274               	subwf	___lwdiv@dividend,w
  3855  06D2                     u745:
  3856  06D2  1C03               	skipc
  3857  06D3  2ED5               	goto	u741
  3858  06D4  2ED6               	goto	u740
  3859  06D5                     u741:
  3860  06D5  2EDD               	goto	l1484
  3861  06D6                     u740:
  3862  06D6                     l1480:
  3863  06D6  0872               	movf	___lwdiv@divisor,w
  3864  06D7  02F4               	subwf	___lwdiv@dividend,f
  3865  06D8  0873               	movf	___lwdiv@divisor+1,w
  3866  06D9  1C03               	skipc
  3867  06DA  03F5               	decf	___lwdiv@dividend+1,f
  3868  06DB  02F5               	subwf	___lwdiv@dividend+1,f
  3869  06DC                     l1482:
  3870  06DC  1477               	bsf	___lwdiv@quotient,0
  3871  06DD                     l1484:
  3872  06DD  3001               	movlw	1
  3873  06DE                     u755:
  3874  06DE  1003               	clrc
  3875  06DF  0CF3               	rrf	___lwdiv@divisor+1,f
  3876  06E0  0CF2               	rrf	___lwdiv@divisor,f
  3877  06E1  3EFF               	addlw	-1
  3878  06E2  1D03               	skipz
  3879  06E3  2EDE               	goto	u755
  3880  06E4                     l1486:
  3881  06E4  3001               	movlw	1
  3882  06E5  02F9               	subwf	___lwdiv@counter,f
  3883  06E6  1D03               	btfss	3,2
  3884  06E7  2EE9               	goto	u761
  3885  06E8  2EEA               	goto	u760
  3886  06E9                     u761:
  3887  06E9  2EC5               	goto	l1478
  3888  06EA                     u760:
  3889  06EA                     l1488:
  3890  06EA  0878               	movf	___lwdiv@quotient+1,w
  3891  06EB  00F3               	movwf	?___lwdiv+1
  3892  06EC  0877               	movf	___lwdiv@quotient,w
  3893  06ED  00F2               	movwf	?___lwdiv
  3894  06EE                     l547:
  3895  06EE  0008               	return
  3896  06EF                     __end_of___lwdiv:
  3897                           
  3898                           	psect	text18
  3899  049D                     __ptext18:	
  3900 ;; *************** function _atoi *****************
  3901 ;; Defined at:
  3902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  s               1    wreg     PTR const unsigned char 
  3905 ;;		 -> concat@s1(20), 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3908 ;;		 -> concat@s1(20), 
  3909 ;;  a               2    3[BANK0 ] int 
  3910 ;;  sign            1    2[BANK0 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  2    8[COMMON] int 
  3913 ;; Registers used:
  3914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3920 ;;      Params:         2       0       0       0       0
  3921 ;;      Locals:         0       4       0       0       0
  3922 ;;      Temps:          0       2       0       0       0
  3923 ;;      Totals:         2       6       0       0       0
  3924 ;;Total ram usage:        8 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    2
  3927 ;; This function calls:
  3928 ;;		___wmul
  3929 ;;		_isdigit
  3930 ;; This function is called by:
  3931 ;;		_concat
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           
  3936                           ;psect for function _atoi
  3937  049D                     _atoi:
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3941                           ;atoi@s stored from wreg
  3942  049D  1283               	bcf	3,5	;RP0=0, select bank0
  3943  049E  1303               	bcf	3,6	;RP1=0, select bank0
  3944  049F  00A5               	movwf	atoi@s
  3945  04A0                     l2082:
  3946  04A0  2CA5               	goto	l2086
  3947  04A1                     l2084:
  3948  04A1  3001               	movlw	1
  3949  04A2  00A0               	movwf	??_atoi
  3950  04A3  0820               	movf	??_atoi,w
  3951  04A4  07A5               	addwf	atoi@s,f
  3952  04A5                     l2086:
  3953  04A5  0825               	movf	atoi@s,w
  3954  04A6  0084               	movwf	4
  3955  04A7  3020               	movlw	32
  3956  04A8  1383               	bcf	3,7	;select IRP bank0
  3957  04A9  0600               	xorwf	0,w
  3958  04AA  1903               	btfsc	3,2
  3959  04AB  2CAD               	goto	u1531
  3960  04AC  2CAE               	goto	u1530
  3961  04AD                     u1531:
  3962  04AD  2CA1               	goto	l2084
  3963  04AE                     u1530:
  3964  04AE                     l2088:
  3965  04AE  0825               	movf	atoi@s,w
  3966  04AF  0084               	movwf	4
  3967  04B0  3009               	movlw	9
  3968  04B1  0600               	xorwf	0,w
  3969  04B2  1903               	btfsc	3,2
  3970  04B3  2CB5               	goto	u1541
  3971  04B4  2CB6               	goto	u1540
  3972  04B5                     u1541:
  3973  04B5  2CA1               	goto	l2084
  3974  04B6                     u1540:
  3975  04B6                     l2090:
  3976  04B6  01A3               	clrf	atoi@a
  3977  04B7  01A4               	clrf	atoi@a+1
  3978  04B8  01A2               	clrf	atoi@sign
  3979  04B9                     l2092:
  3980  04B9  0825               	movf	atoi@s,w
  3981  04BA  0084               	movwf	4
  3982  04BB  302D               	movlw	45
  3983  04BC  0600               	xorwf	0,w
  3984  04BD  1D03               	btfss	3,2
  3985  04BE  2CC0               	goto	u1551
  3986  04BF  2CC1               	goto	u1550
  3987  04C0                     u1551:
  3988  04C0  2CCA               	goto	l2096
  3989  04C1                     u1550:
  3990  04C1                     l2094:
  3991  04C1  3001               	movlw	1
  3992  04C2  00A0               	movwf	??_atoi
  3993  04C3  0820               	movf	??_atoi,w
  3994  04C4  07A2               	addwf	atoi@sign,f
  3995  04C5  3001               	movlw	1
  3996  04C6  00A0               	movwf	??_atoi
  3997  04C7  0820               	movf	??_atoi,w
  3998  04C8  07A5               	addwf	atoi@s,f
  3999  04C9  2CFC               	goto	l2104
  4000  04CA                     l2096:
  4001  04CA  0825               	movf	atoi@s,w
  4002  04CB  0084               	movwf	4
  4003  04CC  302B               	movlw	43
  4004  04CD  0600               	xorwf	0,w
  4005  04CE  1D03               	btfss	3,2
  4006  04CF  2CD1               	goto	u1561
  4007  04D0  2CD2               	goto	u1560
  4008  04D1                     u1561:
  4009  04D1  2CFC               	goto	l2104
  4010  04D2                     u1560:
  4011  04D2                     l2098:
  4012  04D2  3001               	movlw	1
  4013  04D3  00A0               	movwf	??_atoi
  4014  04D4  0820               	movf	??_atoi,w
  4015  04D5  07A5               	addwf	atoi@s,f
  4016  04D6  2CFC               	goto	l2104
  4017  04D7                     l2100:
  4018  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  4019  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  4020  04D9  0825               	movf	atoi@s,w
  4021  04DA  0084               	movwf	4
  4022  04DB  0824               	movf	atoi@a+1,w
  4023  04DC  00F3               	movwf	___wmul@multiplier+1
  4024  04DD  0823               	movf	atoi@a,w
  4025  04DE  00F2               	movwf	___wmul@multiplier
  4026  04DF  300A               	movlw	10
  4027  04E0  00F4               	movwf	___wmul@multiplicand
  4028  04E1  3000               	movlw	0
  4029  04E2  00F5               	movwf	___wmul@multiplicand+1
  4030  04E3  120A  118A  27C9  120A  118A  	fcall	___wmul
  4031  04E8  1383               	bcf	3,7	;select IRP bank0
  4032  04E9  0800               	movf	0,w
  4033  04EA  0772               	addwf	?___wmul,w
  4034  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  4035  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  4036  04ED  00A0               	movwf	??_atoi
  4037  04EE  3000               	movlw	0
  4038  04EF  1803               	skipnc
  4039  04F0  3001               	movlw	1
  4040  04F1  0773               	addwf	?___wmul+1,w
  4041  04F2  00A1               	movwf	??_atoi+1
  4042  04F3  0820               	movf	??_atoi,w
  4043  04F4  3ED0               	addlw	208
  4044  04F5  00A3               	movwf	atoi@a
  4045  04F6  0821               	movf	??_atoi+1,w
  4046  04F7  1803               	skipnc
  4047  04F8  3E01               	addlw	1
  4048  04F9  3EFF               	addlw	255
  4049  04FA  00A4               	movwf	atoi@a+1
  4050  04FB  2CD2               	goto	l2098
  4051  04FC                     l2104:
  4052  04FC  0825               	movf	atoi@s,w
  4053  04FD  0084               	movwf	4
  4054  04FE  0800               	movf	0,w
  4055  04FF  120A  118A  27EE  120A  118A  	fcall	_isdigit
  4056  0504  1803               	btfsc	3,0
  4057  0505  2D07               	goto	u1571
  4058  0506  2D08               	goto	u1570
  4059  0507                     u1571:
  4060  0507  2CD7               	goto	l2100
  4061  0508                     u1570:
  4062  0508                     l2106:
  4063  0508  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0509  1303               	bcf	3,6	;RP1=0, select bank0
  4065  050A  0822               	movf	atoi@sign,w
  4066  050B  1903               	btfsc	3,2
  4067  050C  2D0E               	goto	u1581
  4068  050D  2D0F               	goto	u1580
  4069  050E                     u1581:
  4070  050E  2D1B               	goto	l2112
  4071  050F                     u1580:
  4072  050F                     l2108:
  4073  050F  0923               	comf	atoi@a,w
  4074  0510  00A0               	movwf	??_atoi
  4075  0511  0924               	comf	atoi@a+1,w
  4076  0512  00A1               	movwf	??_atoi+1
  4077  0513  0AA0               	incf	??_atoi,f
  4078  0514  1903               	skipnz
  4079  0515  0AA1               	incf	??_atoi+1,f
  4080  0516  0820               	movf	??_atoi,w
  4081  0517  00F8               	movwf	?_atoi
  4082  0518  0821               	movf	??_atoi+1,w
  4083  0519  00F9               	movwf	?_atoi+1
  4084  051A  2D1F               	goto	l738
  4085  051B                     l2112:
  4086  051B  0824               	movf	atoi@a+1,w
  4087  051C  00F9               	movwf	?_atoi+1
  4088  051D  0823               	movf	atoi@a,w
  4089  051E  00F8               	movwf	?_atoi
  4090  051F                     l738:
  4091  051F  0008               	return
  4092  0520                     __end_of_atoi:
  4093                           
  4094                           	psect	text19
  4095  07EE                     __ptext19:	
  4096 ;; *************** function _isdigit *****************
  4097 ;; Defined at:
  4098 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  c               1    wreg     unsigned char 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  c               1    3[COMMON] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;		None               void
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4112 ;;      Params:         0       0       0       0       0
  4113 ;;      Locals:         2       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0
  4115 ;;      Totals:         2       0       0       0       0
  4116 ;;Total ram usage:        2 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_atoi
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           
  4127                           ;psect for function _isdigit
  4128  07EE                     _isdigit:
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4132                           ;isdigit@c stored from wreg
  4133  07EE  00F3               	movwf	isdigit@c
  4134  07EF                     l1528:
  4135  07EF  01F2               	clrf	_isdigit$1037
  4136  07F0                     l1530:
  4137  07F0  303A               	movlw	58
  4138  07F1  0273               	subwf	isdigit@c,w
  4139  07F2  1803               	skipnc
  4140  07F3  2FF5               	goto	u871
  4141  07F4  2FF6               	goto	u870
  4142  07F5                     u871:
  4143  07F5  2FFE               	goto	l1536
  4144  07F6                     u870:
  4145  07F6                     l1532:
  4146  07F6  3030               	movlw	48
  4147  07F7  0273               	subwf	isdigit@c,w
  4148  07F8  1C03               	skipc
  4149  07F9  2FFB               	goto	u881
  4150  07FA  2FFC               	goto	u880
  4151  07FB                     u881:
  4152  07FB  2FFE               	goto	l1536
  4153  07FC                     u880:
  4154  07FC                     l1534:
  4155  07FC  01F2               	clrf	_isdigit$1037
  4156  07FD  0AF2               	incf	_isdigit$1037,f
  4157  07FE                     l1536:
  4158  07FE  0C72               	rrf	_isdigit$1037,w
  4159  07FF                     l743:
  4160  07FF  0008               	return
  4161  0800                     __end_of_isdigit:
  4162                           
  4163                           	psect	text20
  4164  07C9                     __ptext20:	
  4165 ;; *************** function ___wmul *****************
  4166 ;; Defined at:
  4167 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  multiplier      2    2[COMMON] unsigned int 
  4170 ;;  multiplicand    2    4[COMMON] unsigned int 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  product         2    6[COMMON] unsigned int 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  2    2[COMMON] unsigned int 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         4       0       0       0       0
  4183 ;;      Locals:         2       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0
  4185 ;;      Totals:         6       0       0       0       0
  4186 ;;Total ram usage:        6 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_atoi
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           
  4197                           ;psect for function ___wmul
  4198  07C9                     ___wmul:
  4199  07C9                     l1514:	
  4200                           ;incstack = 0
  4201                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4202                           
  4203  07C9  01F6               	clrf	___wmul@product
  4204  07CA  01F7               	clrf	___wmul@product+1
  4205  07CB                     l1516:
  4206  07CB  1C72               	btfss	___wmul@multiplier,0
  4207  07CC  2FCE               	goto	u831
  4208  07CD  2FCF               	goto	u830
  4209  07CE                     u831:
  4210  07CE  2FD5               	goto	l275
  4211  07CF                     u830:
  4212  07CF                     l1518:
  4213  07CF  0874               	movf	___wmul@multiplicand,w
  4214  07D0  07F6               	addwf	___wmul@product,f
  4215  07D1  1803               	skipnc
  4216  07D2  0AF7               	incf	___wmul@product+1,f
  4217  07D3  0875               	movf	___wmul@multiplicand+1,w
  4218  07D4  07F7               	addwf	___wmul@product+1,f
  4219  07D5                     l275:
  4220  07D5  3001               	movlw	1
  4221  07D6                     u845:
  4222  07D6  1003               	clrc
  4223  07D7  0DF4               	rlf	___wmul@multiplicand,f
  4224  07D8  0DF5               	rlf	___wmul@multiplicand+1,f
  4225  07D9  3EFF               	addlw	-1
  4226  07DA  1D03               	skipz
  4227  07DB  2FD6               	goto	u845
  4228  07DC                     l1520:
  4229  07DC  3001               	movlw	1
  4230  07DD                     u855:
  4231  07DD  1003               	clrc
  4232  07DE  0CF3               	rrf	___wmul@multiplier+1,f
  4233  07DF  0CF2               	rrf	___wmul@multiplier,f
  4234  07E0  3EFF               	addlw	-1
  4235  07E1  1D03               	skipz
  4236  07E2  2FDD               	goto	u855
  4237  07E3                     l1522:
  4238  07E3  0872               	movf	___wmul@multiplier,w
  4239  07E4  0473               	iorwf	___wmul@multiplier+1,w
  4240  07E5  1D03               	btfss	3,2
  4241  07E6  2FE8               	goto	u861
  4242  07E7  2FE9               	goto	u860
  4243  07E8                     u861:
  4244  07E8  2FCB               	goto	l1516
  4245  07E9                     u860:
  4246  07E9                     l1524:
  4247  07E9  0877               	movf	___wmul@product+1,w
  4248  07EA  00F3               	movwf	?___wmul+1
  4249  07EB  0876               	movf	___wmul@product,w
  4250  07EC  00F2               	movwf	?___wmul
  4251  07ED                     l277:
  4252  07ED  0008               	return
  4253  07EE                     __end_of___wmul:
  4254                           
  4255                           	psect	text21
  4256  03F1                     __ptext21:	
  4257 ;; *************** function _isr *****************
  4258 ;; Defined at:
  4259 ;;		line 73 in file "Lab03.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		None
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4273 ;;      Params:         0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0
  4275 ;;      Temps:          2       0       0       0       0
  4276 ;;      Totals:         2       0       0       0       0
  4277 ;;Total ram usage:        2 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		Interrupt level 1
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _isr
  4288  03F1                     _isr:
  4289  03F1                     i1l91:
  4290  03F1  0871               	movf	??_isr+1,w
  4291  03F2  008A               	movwf	10
  4292  03F3  0E70               	swapf	??_isr,w
  4293  03F4  0083               	movwf	3
  4294  03F5  0EFE               	swapf	btemp,f
  4295  03F6  0E7E               	swapf	btemp,w
  4296  03F7  0009               	retfie
  4297  03F8                     __end_of_isr:
  4298  0002                     
  4299                           	psect	intentry
  4300  0004                     __pintentry:	
  4301                           ;incstack = 0
  4302                           ; Regs used in _isr: []
  4303                           
  4304  0004                     interrupt_function:
  4305  007E                     saved_w	set	btemp
  4306  0004  00FE               	movwf	btemp
  4307  0005  0E03               	swapf	3,w
  4308  0006  00F0               	movwf	??_isr
  4309  0007  080A               	movf	10,w
  4310  0008  00F1               	movwf	??_isr+1
  4311  0009  120A  118A  2BF1   	ljmp	_isr
  4312                           
  4313                           	psect	functab
  4314  0026                     __pfunctab:
  4315  0026                     __fptable:
  4316  0026                     fptable:
  4317  0026  00FF               	movwf	(btemp+1)& (0+127)
  4318  0027  3000               	movlw	high fptable
  4319  0028  008A               	movwf	10
  4320  0029  087F               	movf	(btemp+1)& (0+127),w
  4321  002A  0782               	addwf	2,f
  4322  002B                     fpbase:
  4323  002B  282B               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4324  002C                     fp__putch:
  4325  002C  120A  118A  2BE1   	ljmp	_putch
  4326  002F                     __end_of__fptable:
  4327  007E                     btemp	set	126	;btemp
  4328  007E                     wtemp0	set	126
  4329                           
  4330                           	psect	config
  4331                           
  4332                           ;Config register CONFIG1 @ 0x2007
  4333                           ;	Oscillator Selection bits
  4334                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4335                           ;	Watchdog Timer Enable bit
  4336                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4337                           ;	Power-up Timer Enable bit
  4338                           ;	PWRTE = OFF, PWRT disabled
  4339                           ;	RE3/MCLR pin function select bit
  4340                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4341                           ;	Code Protection bit
  4342                           ;	CP = OFF, Program memory code protection is disabled
  4343                           ;	Data Code Protection bit
  4344                           ;	CPD = OFF, Data memory code protection is disabled
  4345                           ;	Brown Out Reset Selection bits
  4346                           ;	BOREN = OFF, BOR disabled
  4347                           ;	Internal External Switchover bit
  4348                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4349                           ;	Fail-Safe Clock Monitor Enabled bit
  4350                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4351                           ;	Low Voltage Programming Enable bit
  4352                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4353                           ;	In-Circuit Debugger Mode bit
  4354                           ;	DEBUG = 0x1, unprogrammed default
  4355  2007                     	org	8199
  4356  2007  20D4               	dw	8404
  4357                           
  4358                           ;Config register CONFIG2 @ 0x2008
  4359                           ;	Brown-out Reset Selection bit
  4360                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4361                           ;	Flash Program Memory Self Write Enable bits
  4362                           ;	WRT = OFF, Write protection off
  4363  2008                     	org	8200
  4364  2008  3FFF               	dw	16383

Data Sizes:
    Strings     141
    Constant    10
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      77
    BANK1            80      5      15
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[25]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[30]), STR_8(CODE[2]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[20]), STR_4(CODE[2]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[19]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_12(CODE[25]), STR_11(CODE[21]), STR_10(CODE[20]), STR_9(CODE[30]), 
		 -> STR_8(CODE[2]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[20]), 
		 -> STR_4(CODE[2]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[19]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S1039__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1039__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _setup->_spiInit
    _mensaje->_division
    _division->___awmod
    _concat->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mensaje->_concat
    _printf->__doprnt
    _division->___awdiv
    _concat->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_mensaje

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9221
                                             73 BANK0      1     1      0
                            _mensaje
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              5     5      0    8839
                                              0 BANK1      5     5      0
                             _concat
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2949
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concat                                              47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mensaje
     _concat
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      68       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       F       7       18.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      68      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 03 21:36:26 2021

                      pc 0002              _SSPSTATbits 0094             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0074                      l102 079F  
                    l105 058A                      l131 024F                      l140 072B  
                    l124 01B1                      l116 0190                      l109 0175  
                    l134 03E1                      l137 03E9                      l171 03D2  
                    l172 03D7                      l181 03FD                      l175 03EA  
                    l441 06AA                      l178 03F0                      l275 07D5  
                    l428 05F3                      l277 07ED                      l189 03E0  
                    l547 06EE                      l557 0767                      l806 07C8  
                    l743 07FF                      l752 03C1                      l738 051F  
                    l790 0385                      l797 03A6                      u700 06B3  
                    u701 06B2                      u720 06C5                      u721 06C4  
                    u715 06B7                      u740 06D6                      u741 06D5  
                    u830 07CF                      u831 07CE                      u735 06C6  
                    u760 06EA                      u761 06E9                      u745 06D2  
                    u690 03E7                      u755 06DE                      u691 03E6  
                    u860 07E9                      u861 07E8                      u845 07D6  
                    u870 07F6                      u855 07DD                      u871 07F5  
                    u880 07FC                      u881 07FB                      u990 07B2  
                    u991 07B1                      _dec 00A7                      _cen 006A  
                    _con 00A4                      _isr 03F1                      _var 00A5  
                    fsr0 0004                      _uni 00A6                      indf 0000  
           ___awmod@sign 0078                     l2000 0254                     l2002 025A  
                   l2010 0280                     l2100 04D7                     l2020 02B0  
                   l2004 0262                     l2030 02BB                     l2022 02B4  
                   l2014 0281                     l2006 0271                     l2112 051B  
                   l2104 04FC                     l2040 02EF                     l2024 02B9  
                   l2016 029E                     l2008 0279                     l2120 0592  
                   l2200 006D                     l2106 0508                     l2050 0341  
                   l2042 02FC                     l2034 02D7                     l2018 02AC  
                   l2130 05A6                     l2122 0597                     l2210 0095  
                   l2202 0071                     l2108 050F                     l2052 0349  
                   l2044 0304                     l2036 02E1                     l2060 036F  
                   l2140 05BC                     l2132 05A8                     l2124 0599  
                   l2116 058B                     l2220 00C9                     l2212 00A3  
                   l2204 007F                     l2300 0640                     l2054 0356  
                   l2038 02E7                     l2046 030A                     l2062 0383  
                   l2070 0389                     l2150 05DF                     l2142 05C0  
                   l2134 05AE                     l2126 059D                     l2118 058E  
                   l2230 00FF                     l2222 00D7                     l2214 00A7  
                   l2206 0083                     l2302 0643                     l1520 07DC  
                   l2056 035E                     l2048 0311                     l2072 038D  
                   l2144 05D1                     l2136 05B1                     l2152 05E5  
                   l2128 05A2                     l2160 0521                     l2240 0131  
                   l2232 010D                     l2224 00E5                     l2216 00B5  
                   l2208 0091                     l2304 0648                     l1522 07E3  
                   l1514 07C9                     l1530 07F0                     l2090 04B6  
                   l2082 04A0                     l2058 0364                     l2074 038E  
                   l2154 05EA                     l2146 05D7                     l2138 05B8  
                   l2162 057B                     l2170 03AB                     l2250 015B  
                   l2242 0135                     l2234 0111                     l2226 00EB  
                   l2218 00BB                     l1524 07E9                     l1516 07CB  
                   l1532 07F6                     l2092 04B9                     l2084 04A1  
                   l1460 03E1                     l2076 0392                     l2180 070F  
                   l2156 05EF                     l2148 05D8                     l2164 0580  
                   l2172 03AF                     l2260 018A                     l2252 0169  
                   l2244 0143                     l2236 011F                     l2228 00F9  
                   l1518 07CF                     l1534 07FC                     l2094 04C1  
                   l2086 04A5                     l1470 06B3                     l1462 03E7  
                   l2326 0293                     l2078 03A0                     l1630 07B3  
                   l2182 071B                     l2166 0585                     l2174 03B3  
                   l2270 01B7                     l2262 0196                     l2254 016F  
                   l2246 0147                     l2238 0123                     l2190 0037  
                   l1536 07FE                     l1528 07EF                     l2096 04CA  
                   l2088 04AE                     l1480 06D6                     l1472 06B6  
                   l1632 07BB                     l1624 07A1                     l2184 0727  
                   l1720 065E                     l1712 0652                     l2168 03AA  
                   l2280 022F                     l2272 01C6                     l2256 017B  
                   l2248 0155                     l2192 0045                     l1800 0782  
                   l2098 04D2                     l1482 06DC                     l1474 06BD  
                   l1466 06AB                     l1626 07A6                     l2178 06EF  
                   l1730 0677                     l1722 0662                     l1714 0653  
                   l2282 023D                     l2266 01A5                     l2258 0184  
                   l2194 004B                     l1810 078F                     l1802 0783  
                   l2290 0604                     l1484 06DD                     l1476 06C1  
                   l1468 06AD                     l1628 07AA                     l1740 0696  
                   l1732 067B                     l1724 0667                     l1716 0657  
                   l2276 01CE                     l2268 01AB                     l2196 0059  
                   l2188 002F                     l1820 0798                     l1812 0790  
                   l1804 0786                     l2292 060A                     l2284 05F4  
                   l1486 06E4                     l1478 06C5                     l1734 067F  
                   l1726 066D                     l1742 069C                     l1718 065C  
                   l2278 01D6                     l2198 005F                     l1750 03C3  
                   l1822 0799                     l1814 0791                     l1806 078A  
                   l1830 03F9                     l2294 0616                     l2286 05F9  
                   l1488 06EA                     l1744 06A1                     l1736 0689  
                   l1728 0670                     l1752 03CA                     l1824 079C  
                   l1816 0794                     l1808 078C                     l1832 03D8  
                   l2296 0630                     l2288 05FC                     l1746 06A6  
                   l1738 068F                     l1754 03CC                     l1826 079D  
                   l1818 0795                     l1834 03DD                     l2298 0638  
                   l1756 03CE                     l1828 079E                     l1758 03D1  
                   l1790 0768                     l1792 076C                     l1794 0775  
                   l1980 0737                     l1796 0776                     l1788 03EA  
                   l1990 0756                     l1982 073E                     l1798 077F  
                   l1992 075D                     l1984 0742                     l1976 072C  
                   l1986 0746                     l1978 0734                     l1994 0763  
                   l1988 0750                     l1998 0253                     ?_isr 0070  
                   STR_1 0484                     STR_2 0497                     STR_3 049A  
                   STR_4 046E                     STR_5 045C                     STR_6 0497  
                   STR_7 049A                     STR_8 046E                     STR_9 0410  
                   u1000 07C8                     u1001 07C7                     u1210 067F  
                   u1211 067E                     u1220 0689                     u1221 0688  
                   u1205 0671                     u1400 0750                     u1240 069C  
                   u1401 074F                     u1241 069B                     u1225 0685  
                   u1250 06A1                     u1170 0657                     u1251 06A0  
                   u1235 0690                     u1171 0656                     u1420 0763  
                   u1500 0349                     u1180 0662                     u1260 03CA  
                   u1421 0762                     u1405 074C                     u1501 0348  
                   u1181 0661                     u1261 03C9                     u1510 036F  
                   u1430 025A                     u1190 066D                     u1270 03F0  
                   u1415 0757                     u1511 036E                     u1431 0259  
                   u1191 066C                     u1271 03EF                     u1520 0383  
                   u1440 0262                     u1600 059D                     u1521 0382  
                   u1441 0261                     u1601 059C                     u1530 04AE  
                   u1370 0734                     u1450 02B0                     u1610 05AE  
                   u1531 04AD                     u1371 0733                     u1451 02AF  
                   u1611 05AD                     u1540 04B6                     u1460 02D6  
                   u1700 018A                     u1541 04B5                     u1461 02D5  
                   u1701 0189                     u1550 04C1                     u1390 0746  
                   u1470 02E1                     u1630 05C0                     u1710 0196  
                   u1551 04C0                     u1391 0745                     u1471 02E0  
                   u1631 05BF                     u1711 0195                     u1560 04D2  
                   u1480 02E7                     u1720 01A5                     u1561 04D1  
                   u1385 0738                     u1481 02E6                     u1465 02D2  
                   u1625 05B2                     u1721 01A4                     u1570 0508  
                   u1490 02EF                     u1650 05D1                     u1730 01AB  
                   u1571 0507                     u1491 02EE                     u1651 05D0  
                   u1731 01AA                     u1580 050F                     u1740 01B7  
                   u1581 050E                     u1645 05C1                     u1741 01B6  
                   u1670 05E5                     u1590 0592                     u1750 01C6  
                   u1671 05E4                     u1655 05CD                     u1591 0591  
                   u1751 01C5                     u1807 0634                     u1680 05EA  
                   u1760 01CE                     u1681 05E9                     u1665 05D9  
                   u1761 01CD                     u1817 063C                     u1770 01D6  
                   u1690 017B                     u1771 01D5                     u1691 017A  
                   u1907 00DF                     u1827 003F                     u1917 00F3  
                   u1837 0053                     u1927 0107                     u1847 0067  
                   u1937 0119                     u1857 0079                     u1947 012B  
                   u1867 008B                     u1787 0600                     u1957 013D  
                   u1877 009D                     u1797 061A                     u1967 014F  
                   u1887 00AF                     u1977 0163                     u1897 00C3  
                   u1987 0237                     _RCIF 0065                     i1l91 03F1  
                   _TXIF 0064                     _atoi 049D                     _main 05F4  
                   _full 00A0                     _pot1 00A9                     _pot2 00A8  
                   _tens 007A                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_atoi 0078                    ?_main 0070  
        __end_of___awdiv 05F4                    STR_10 0470                    STR_11 0447  
                  STR_12 042E                    STR_13 0444                    STR_14 0444  
        __end_of___awmod 06AB                    _ANSEL 0188          ___awdiv@divisor 0072  
        __end_of___lwdiv 06EF          __end_of___lwmod 0768          ___awdiv@counter 0020  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008          __end_of__doprnt 0386  
                  _TRISB 0086                    _TXREG 0019          __end_of_dpowers 0410  
        __end_of_isdigit 0800          __end_of_mensaje 0250                    atoi@a 0023  
                  _setup 0768                    atoi@s 0025                    _putch 03E1  
                  fpbase 002B                    _units 006C                    pclath 000A  
        __end_of_spiInit 03D8          __end_of_spiRead 03E1                    status 0003  
                  wtemp0 007E          __end_of_sprintf 03A7          __initialization 000F  
           __end_of_atoi 0520             __end_of_main 0652                   ??_atoi 0020  
                 ??_main 0069         ___awdiv@dividend 0074                   ?_setup 0070  
                 ?_putch 0072                   _ANSELH 0189                   _SPBRGH 009A  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of__fptable 002F  
       __end_of_division 058B                   ___wmul 07C9                ??___awdiv 0076  
              ??___awmod 0076                ??___lwdiv 0076                ??___lwmod 0024  
                 _concat 06EF                ??__doprnt 0028         ___awdiv@quotient 0022  
        ___awmod@divisor 0072             __doprnt@flag 002B          ___awmod@counter 0077  
                 _printf 03A7             __doprnt@prec 002C                   _strcat 07A0  
                 fptable 0026                   fptotal 0002                ??_isdigit 0072  
              ??_mensaje 00AA                   saved_w 007E         __end_of_spiWrite 03FE  
              ??_spiInit 0075                ??_spiRead 0072                ??_sprintf 0034  
__end_of__initialization 0022           __pcstackCOMMON 0070            __end_of_setup 07A0  
          __end_of_putch 03EA            division@valor 0079               __doprnt@ap 0027  
             __doprnt@pb 0030                  ??_setup 0076                  ??_putch 0073  
             __pbssBANK0 006A               __pbssBANK1 00A0               __pmaintext 05F4  
                ?___wmul 0072               __pintentry 0004                  ?_concat 003A  
__size_of_spiReceiveWait 0007                  ?_printf 0031                  ?_strcat 0072  
                _SSPSTAT 0094               __stringtab 0400                ?_division 0070  
              ?_spiWrite 0070                  ___awdiv 058B                  ___awmod 0652  
        __size_of___wmul 0025                  ___lwdiv 06AB                  ___lwmod 072C  
        __size_of_concat 003D                  __doprnt 0250                  __ptext1 03F8  
                __ptext2 03D8                  __ptext3 03EA                  __ptext4 0768  
                __ptext5 03C2                  __ptext6 002F                  __ptext7 03A7  
                __ptext8 0520                  __ptext9 0652          __size_of_printf 001B  
        __size_of_strcat 0029                  _dpowers 0406                  _isdigit 07EE  
           __size_of_isr 0007                  _mensaje 002F         ___awmod@dividend 0074  
                _residuo 006B                  _spiInit 03C2                  _spiRead 03D8  
                concat@a 003A                  concat@b 003C                  concat@c 0067  
                _sprintf 0386     end_of_initialization 0022               ??_division 0024  
              _RCSTAbits 0018                  printf@f 0036               ??_spiWrite 0072  
              _PORTCbits 0007              spiWrite@dat 0072                _TXSTAbits 0098  
         _spiReceiveWait 03EA           __end_of___wmul 07EE              _BAUDCTLbits 0187  
         __end_of_concat 072C           __end_of_printf 03C2           __end_of_strcat 07C9  
    start_initialization 000F              __end_of_isr 03F8   __end_of_spiReceiveWait 03F1  
               ??___wmul 0076              __doprnt@val 002D                 ??_concat 003E  
               ??_printf 0033                 ??_strcat 0073              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00AA  
      __size_of__fptable 0009             _isdigit$1037 0072                __doprnt@c 002F  
              __doprnt@f 0026        __size_of_division 006B         ___lwdiv@dividend 0074  
        ?_spiReceiveWait 0070                __pfunctab 0026                 ?___awdiv 0072  
               ?___awmod 0072                 ?___lwdiv 0072                 ?___lwmod 0020  
               ?__doprnt 0026        __size_of_spiWrite 0006                __pstrings 0400  
               ?_isdigit 0070                 ?_mensaje 0070                 ?_spiInit 0072  
               ?_spiRead 0070         ___lwdiv@quotient 0077                 ?_sprintf 0031  
         __size_of_setup 0038           __size_of_putch 0009     spiInit@sTransmitEdge 0074  
      interrupt_function 0004           ___wmul@product 0076       spiInit@sDataSample 0072  
               _PIR1bits 000C               _ADCON0bits 001F              __stringbase 0405  
             _ADCON1bits 009F        ___wmul@multiplier 0072         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003C  
       __size_of__doprnt 0136       __end_of__stringtab 0406                 __fptable 0026  
             strcat@from 0072         __size_of_isdigit 0012         __size_of_mensaje 0221  
        ___lwdiv@divisor 0072          ___lwdiv@counter 0079                 __ptext10 058B  
               __ptext11 06EF                 __ptext20 07C9                 __ptext12 07A0  
               __ptext21 03F1                 __ptext13 0386                 __ptext14 0250  
               __ptext15 03E1                 __ptext16 072C                 __ptext17 06AB  
               __ptext18 049D                 __ptext19 07EE         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 _division 0520                 _contador 00A2  
       __size_of_sprintf 0021            __size_of_atoi 0083            __size_of_main 005E  
               _hundreds 007B                 _spiWrite 03F8                 concat@s1 0053  
               concat@s2 003F             spiInit@sType 0075                 atoi@sign 0022  
               fp__putch 002C        spiInit@sClockIdle 0073                putch@data 0072  
               isdigit@c 0073                 intlevel1 0026                sprintf@ap 0037  
              sprintf@pb 0038                sprintf@wh 0036         ___lwmod@dividend 0022  
       ??_spiReceiveWait 0072                stringcode 0400               _OSCCONbits 008F  
               printf@ap 0035                 printf@pb 0037                 sprintf@f 0031  
               strcat@cp 0075                 strcat@to 0074          ___lwmod@divisor 0020  
        ___lwmod@counter 0025                 stringdir 0400                 stringtab 0400  
