

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Aug 19 00:00:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0019                     _TXREG	set	25
   214  000C                     _PIR1bits	set	12
   215  0018                     _RCSTAbits	set	24
   216  0009                     _PORTE	set	9
   217  0007                     _PORTC	set	7
   218  0006                     _PORTB	set	6
   219  0008                     _PORTD	set	8
   220  001A                     _RCREG	set	26
   221  0005                     _PORTA	set	5
   222  000B                     _INTCONbits	set	11
   223  0006                     _PORTBbits	set	6
   224  0064                     _TXIF	set	100
   225  0065                     _RCIF	set	101
   226  0058                     _RBIF	set	88
   227  008C                     _PIE1bits	set	140
   228  009A                     _SPBRGH	set	154
   229  0099                     _SPBRG	set	153
   230  0098                     _TXSTAbits	set	152
   231  0096                     _IOCBbits	set	150
   232  0095                     _WPUB	set	149
   233  0081                     _OPTION_REGbits	set	129
   234  008F                     _OSCCONbits	set	143
   235  0088                     _TRISD	set	136
   236  0086                     _TRISBbits	set	134
   237  0085                     _TRISA	set	133
   238  0187                     _BAUDCTLbits	set	391
   239  0189                     _ANSELH	set	393
   240  0188                     _ANSEL	set	392
   241                           
   242                           	psect	strings
   243  0271                     __pstrings:
   244  0271                     stringtab:
   245  0271                     __stringtab:
   246  0271                     stringcode:	
   247                           ;	String table - string pointers are 1 byte each
   248                           
   249  0271                     stringdir:
   250  0271  3002               	movlw	high stringdir
   251  0272  008A               	movwf	10
   252  0273  0804               	movf	4,w
   253  0274  0A84               	incf	4,f
   254  0275  0782               	addwf	2,f
   255  0276                     __stringbase:
   256  0276  3400               	retlw	0
   257  0277                     __end_of__stringtab:
   258  0277                     STR_1:
   259  0277  3425               	retlw	37	;'%'
   260  0278  3464               	retlw	100	;'d'
   261  0279  3400               	retlw	0
   262  0277                     
   263                           	psect	cinit
   264  000F                     start_initialization:	
   265                           ; #config settings
   266                           
   267  000F                     __initialization:
   268                           
   269                           ; Clear objects allocated to COMMON
   270  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   271  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   272                           
   273                           ; Clear objects allocated to BANK0
   274  0011  1383               	bcf	3,7	;select IRP bank0
   275  0012  3020               	movlw	low __pbssBANK0
   276  0013  0084               	movwf	4
   277  0014  3033               	movlw	low (__pbssBANK0+19)
   278  0015  120A  118A  227A  120A  118A  	fcall	clear_ram0
   279  001A                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282  001A                     __end_of__initialization:
   283  001A  0183               	clrf	3
   284  001B  120A  118A  29AE   	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssCOMMON
   287  007A                     __pbssCOMMON:
   288  007A                     _residuo:
   289  007A                     	ds	1
   290  007B                     _hundreds:
   291  007B                     	ds	1
   292                           
   293                           	psect	bssBANK0
   294  0020                     __pbssBANK0:
   295  0020                     _prt:
   296  0020                     	ds	3
   297  0023                     _conv:
   298  0023                     	ds	2
   299  0025                     _full:
   300  0025                     	ds	2
   301  0027                     _select:
   302  0027                     	ds	2
   303  0029                     _count:
   304  0029                     	ds	2
   305  002B                     _con:
   306  002B                     	ds	1
   307  002C                     _var:
   308  002C                     	ds	1
   309  002D                     _uni:
   310  002D                     	ds	1
   311  002E                     _dec:
   312  002E                     	ds	1
   313  002F                     _cen:
   314  002F                     	ds	1
   315  0030                     _units:
   316  0030                     	ds	1
   317  0031                     _tens:
   318  0031                     	ds	1
   319  0032                     _valor:
   320  0032                     	ds	1
   321                           
   322                           	psect	clrtext
   323  027A                     clear_ram0:	
   324                           ;	Called with FSR containing the base address, and
   325                           ;	W with the last address+1
   326                           
   327  027A  0064               	clrwdt	;clear the watchdog before getting into this loop
   328  027B                     clrloop0:
   329  027B  0180               	clrf	0	;clear RAM location pointed to by FSR
   330  027C  0A84               	incf	4,f	;increment pointer
   331  027D  0604               	xorwf	4,w	;XOR with final address
   332  027E  1903               	btfsc	3,2	;have we reached the end yet?
   333  027F  3400               	retlw	0	;all done for this memory range, return
   334  0280  0604               	xorwf	4,w	;XOR again to restore value
   335  0281  2A7B               	goto	clrloop0	;do the next byte
   336                           
   337                           	psect	cstackCOMMON
   338  0070                     __pcstackCOMMON:
   339  0070                     ?_setup:
   340  0070                     ?_Text:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_division:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_isr:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ??_isr:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0070                     	ds	2
   358  0072                     ??_setup:
   359  0072                     ?___bmul:	
   360                           ; 1 bytes @ 0x2
   361                           
   362  0072                     ?___awdiv:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ?___awmod:	
   366                           ; 2 bytes @ 0x2
   367                           
   368  0072                     ___bmul@multiplicand:	
   369                           ; 2 bytes @ 0x2
   370                           
   371  0072                     ___awdiv@divisor:	
   372                           ; 1 bytes @ 0x2
   373                           
   374  0072                     ___awmod@divisor:	
   375                           ; 2 bytes @ 0x2
   376                           
   377                           
   378                           ; 2 bytes @ 0x2
   379  0072                     	ds	1
   380  0073                     ??___bmul:
   381                           
   382                           ; 1 bytes @ 0x3
   383  0073                     	ds	1
   384  0074                     ___bmul@product:
   385  0074                     ___awdiv@dividend:	
   386                           ; 1 bytes @ 0x4
   387                           
   388  0074                     ___awmod@dividend:	
   389                           ; 2 bytes @ 0x4
   390                           
   391                           
   392                           ; 2 bytes @ 0x4
   393  0074                     	ds	1
   394  0075                     ___bmul@multiplier:
   395                           
   396                           ; 1 bytes @ 0x5
   397  0075                     	ds	1
   398  0076                     ??___awdiv:
   399  0076                     ??___awmod:	
   400                           ; 1 bytes @ 0x6
   401                           
   402                           
   403                           ; 1 bytes @ 0x6
   404  0076                     	ds	1
   405  0077                     ___awmod@counter:
   406                           
   407                           ; 1 bytes @ 0x7
   408  0077                     	ds	1
   409  0078                     ___awmod@sign:
   410                           
   411                           ; 1 bytes @ 0x8
   412  0078                     	ds	1
   413  0079                     division@valor:
   414                           
   415                           ; 1 bytes @ 0x9
   416  0079                     	ds	1
   417                           
   418                           	psect	cstackBANK0
   419  0033                     __pcstackBANK0:
   420  0033                     ___awdiv@counter:
   421                           
   422                           ; 1 bytes @ 0x0
   423  0033                     	ds	1
   424  0034                     ___awdiv@sign:
   425                           
   426                           ; 1 bytes @ 0x1
   427  0034                     	ds	1
   428  0035                     ___awdiv@quotient:
   429                           
   430                           ; 2 bytes @ 0x2
   431  0035                     	ds	2
   432  0037                     ??_division:
   433                           
   434                           ; 1 bytes @ 0x4
   435  0037                     	ds	3
   436  003A                     ??_Text:
   437                           
   438                           ; 1 bytes @ 0x7
   439  003A                     	ds	3
   440  003D                     ??_main:
   441                           
   442                           ; 1 bytes @ 0xA
   443  003D                     	ds	3
   444                           
   445                           	psect	maintext
   446  01AE                     __pmaintext:	
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 89 in file "Lab05.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : B00/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       3       0       0       0
   469 ;;      Totals:         0       3       0       0       0
   470 ;;Total ram usage:        3 bytes
   471 ;; Hardware stack levels required when called:    4
   472 ;; This function calls:
   473 ;;		_Text
   474 ;;		___bmul
   475 ;;		_setup
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           
   482                           ;psect for function _main
   483  01AE                     _main:
   484  01AE                     l1273:	
   485                           ;incstack = 0
   486                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   487                           
   488                           
   489                           ;Lab05.c: 91:     setup();
   490  01AE  120A  118A  21F9  120A  118A  	fcall	_setup
   491  01B3                     l1275:
   492                           
   493                           ;Lab05.c: 95:     {;Lab05.c: 96:         PORTA = count;
   494  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   495  01B4  1303               	bcf	3,6	;RP1=0, select bank0
   496  01B5  0829               	movf	_count,w
   497  01B6  0085               	movwf	5	;volatile
   498  01B7                     l1277:
   499                           
   500                           ;Lab05.c: 97:         Text();
   501  01B7  120A  118A  20F2  120A  118A  	fcall	_Text
   502  01BC                     l114:	
   503                           ;Lab05.c: 99:         while(RCIF == 0);
   504                           
   505  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   506  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   507  01BE  1E8C               	btfss	12,5	;volatile
   508  01BF  29C1               	goto	u781
   509  01C0  29C2               	goto	u780
   510  01C1                     u781:
   511  01C1  29BC               	goto	l114
   512  01C2                     u780:
   513  01C2                     l1279:
   514                           
   515                           ;Lab05.c: 100:         cen = RCREG -48;
   516  01C2  081A               	movf	26,w	;volatile
   517  01C3  3ED0               	addlw	208
   518  01C4  00BD               	movwf	??_main
   519  01C5  083D               	movf	??_main,w
   520  01C6  00AF               	movwf	_cen
   521  01C7                     l117:	
   522                           ;Lab05.c: 101:         while(RCIF == 0);
   523                           
   524  01C7  1E8C               	btfss	12,5	;volatile
   525  01C8  29CA               	goto	u791
   526  01C9  29CB               	goto	u790
   527  01CA                     u791:
   528  01CA  29C7               	goto	l117
   529  01CB                     u790:
   530  01CB                     l1281:
   531                           
   532                           ;Lab05.c: 102:         dec = RCREG -48;
   533  01CB  081A               	movf	26,w	;volatile
   534  01CC  3ED0               	addlw	208
   535  01CD  00BD               	movwf	??_main
   536  01CE  083D               	movf	??_main,w
   537  01CF  00AE               	movwf	_dec
   538  01D0                     l120:	
   539                           ;Lab05.c: 103:         while(RCIF == 0);
   540                           
   541  01D0  1E8C               	btfss	12,5	;volatile
   542  01D1  29D3               	goto	u801
   543  01D2  29D4               	goto	u800
   544  01D3                     u801:
   545  01D3  29D0               	goto	l120
   546  01D4                     u800:
   547  01D4                     l1283:
   548                           
   549                           ;Lab05.c: 104:         uni = RCREG -48;
   550  01D4  081A               	movf	26,w	;volatile
   551  01D5  3ED0               	addlw	208
   552  01D6  00BD               	movwf	??_main
   553  01D7  083D               	movf	??_main,w
   554  01D8  00AD               	movwf	_uni
   555  01D9                     l1285:
   556                           
   557                           ;Lab05.c: 106:         PORTD = ((cen*100)+(dec*10)+ uni);
   558  01D9  300A               	movlw	10
   559  01DA  00BD               	movwf	??_main
   560  01DB  083D               	movf	??_main,w
   561  01DC  00F2               	movwf	___bmul@multiplicand
   562  01DD  082E               	movf	_dec,w
   563  01DE  120A  118A  225C  120A  118A  	fcall	___bmul
   564  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   565  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   566  01E5  00BE               	movwf	??_main+1
   567  01E6  3064               	movlw	100
   568  01E7  00BF               	movwf	??_main+2
   569  01E8  083F               	movf	??_main+2,w
   570  01E9  00F2               	movwf	___bmul@multiplicand
   571  01EA  082F               	movf	_cen,w
   572  01EB  120A  118A  225C  120A  118A  	fcall	___bmul
   573  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   574  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   575  01F2  073E               	addwf	??_main+1,w
   576  01F3  072D               	addwf	_uni,w
   577  01F4  0088               	movwf	8	;volatile
   578  01F5  29B3               	goto	l1275
   579  01F6  120A  118A  280C   	ljmp	start
   580  01F9                     __end_of_main:
   581                           
   582                           	psect	text1
   583  01F9                     __ptext1:	
   584 ;; *************** function _setup *****************
   585 ;; Defined at:
   586 ;;		line 116 in file "Lab05.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           
   615                           ;psect for function _setup
   616  01F9                     _setup:
   617  01F9                     l1083:	
   618                           ;incstack = 0
   619                           ; Regs used in _setup: [wreg+status,2]
   620                           
   621                           
   622                           ;Lab05.c: 118:     ANSEL = 0;
   623  01F9  1683               	bsf	3,5	;RP0=1, select bank3
   624  01FA  1703               	bsf	3,6	;RP1=1, select bank3
   625  01FB  0188               	clrf	8	;volatile
   626                           
   627                           ;Lab05.c: 119:     ANSELH = 0;
   628  01FC  0189               	clrf	9	;volatile
   629                           
   630                           ;Lab05.c: 122:     TRISA = 0;
   631  01FD  1683               	bsf	3,5	;RP0=1, select bank1
   632  01FE  1303               	bcf	3,6	;RP1=0, select bank1
   633  01FF  0185               	clrf	5	;volatile
   634  0200                     l1085:
   635                           
   636                           ;Lab05.c: 125:     TRISBbits.TRISB0 = 1;
   637  0200  1406               	bsf	6,0	;volatile
   638  0201                     l1087:
   639                           
   640                           ;Lab05.c: 126:     TRISBbits.TRISB1 = 1;
   641  0201  1486               	bsf	6,1	;volatile
   642                           
   643                           ;Lab05.c: 132:     TRISD = 0;
   644  0202  0188               	clrf	8	;volatile
   645                           
   646                           ;Lab05.c: 140:     PORTA = 0x00;
   647  0203  1283               	bcf	3,5	;RP0=0, select bank0
   648  0204  1303               	bcf	3,6	;RP1=0, select bank0
   649  0205  0185               	clrf	5	;volatile
   650                           
   651                           ;Lab05.c: 141:     PORTB = 0x00;
   652  0206  0186               	clrf	6	;volatile
   653                           
   654                           ;Lab05.c: 142:     PORTC = 0x00;
   655  0207  0187               	clrf	7	;volatile
   656                           
   657                           ;Lab05.c: 143:     PORTD = 0x00;
   658  0208  0188               	clrf	8	;volatile
   659                           
   660                           ;Lab05.c: 144:     PORTE = 0x00;
   661  0209  0189               	clrf	9	;volatile
   662  020A                     l1089:
   663                           
   664                           ;Lab05.c: 147:     OSCCONbits.IRCF0 = 0;
   665  020A  1683               	bsf	3,5	;RP0=1, select bank1
   666  020B  1303               	bcf	3,6	;RP1=0, select bank1
   667  020C  120F               	bcf	15,4	;volatile
   668  020D                     l1091:
   669                           
   670                           ;Lab05.c: 148:     OSCCONbits.IRCF1 = 1;
   671  020D  168F               	bsf	15,5	;volatile
   672  020E                     l1093:
   673                           
   674                           ;Lab05.c: 149:     OSCCONbits.IRCF2 = 1;
   675  020E  170F               	bsf	15,6	;volatile
   676  020F                     l1095:
   677                           
   678                           ;Lab05.c: 150:     OSCCONbits.SCS = 1;
   679  020F  140F               	bsf	15,0	;volatile
   680  0210                     l1097:
   681                           
   682                           ;Lab05.c: 153:     OPTION_REGbits.nRBPU = 0;
   683  0210  1381               	bcf	1,7	;volatile
   684  0211                     l1099:
   685                           
   686                           ;Lab05.c: 154:     WPUB = 0b00000011;
   687  0211  3003               	movlw	3
   688  0212  0095               	movwf	21	;volatile
   689  0213                     l1101:
   690                           
   691                           ;Lab05.c: 155:     IOCBbits.IOCB0 = 1;
   692  0213  1416               	bsf	22,0	;volatile
   693  0214                     l1103:
   694                           
   695                           ;Lab05.c: 156:     IOCBbits.IOCB1 = 1;
   696  0214  1496               	bsf	22,1	;volatile
   697  0215                     l1105:
   698                           
   699                           ;Lab05.c: 159:     TXSTAbits.SYNC = 0;
   700  0215  1218               	bcf	24,4	;volatile
   701  0216                     l1107:
   702                           
   703                           ;Lab05.c: 160:     TXSTAbits.BRGH = 1;
   704  0216  1518               	bsf	24,2	;volatile
   705  0217                     l1109:
   706                           
   707                           ;Lab05.c: 161:     BAUDCTLbits.BRG16 = 0;
   708  0217  1683               	bsf	3,5	;RP0=1, select bank3
   709  0218  1703               	bsf	3,6	;RP1=1, select bank3
   710  0219  1187               	bcf	7,3	;volatile
   711  021A                     l1111:
   712                           
   713                           ;Lab05.c: 163:     SPBRG = 25;
   714  021A  3019               	movlw	25
   715  021B  1683               	bsf	3,5	;RP0=1, select bank1
   716  021C  1303               	bcf	3,6	;RP1=0, select bank1
   717  021D  0099               	movwf	25	;volatile
   718  021E                     l1113:
   719                           
   720                           ;Lab05.c: 164:     SPBRGH = 1;
   721  021E  3001               	movlw	1
   722  021F  009A               	movwf	26	;volatile
   723  0220                     l1115:
   724                           
   725                           ;Lab05.c: 166:     RCSTAbits.SPEN = 1;
   726  0220  1283               	bcf	3,5	;RP0=0, select bank0
   727  0221  1303               	bcf	3,6	;RP1=0, select bank0
   728  0222  1798               	bsf	24,7	;volatile
   729  0223                     l1117:
   730                           
   731                           ;Lab05.c: 167:     RCSTAbits.RX9 = 0;
   732  0223  1318               	bcf	24,6	;volatile
   733  0224                     l1119:
   734                           
   735                           ;Lab05.c: 168:     RCSTAbits.CREN = 1;
   736  0224  1618               	bsf	24,4	;volatile
   737  0225                     l1121:
   738                           
   739                           ;Lab05.c: 169:     TXSTAbits.TX9 = 0;
   740  0225  1683               	bsf	3,5	;RP0=1, select bank1
   741  0226  1303               	bcf	3,6	;RP1=0, select bank1
   742  0227  1318               	bcf	24,6	;volatile
   743  0228                     l1123:
   744                           
   745                           ;Lab05.c: 171:     TXSTAbits.TXEN = 1;
   746  0228  1698               	bsf	24,5	;volatile
   747  0229                     l1125:
   748                           
   749                           ;Lab05.c: 173:     PIR1bits.RCIF = 0;
   750  0229  1283               	bcf	3,5	;RP0=0, select bank0
   751  022A  1303               	bcf	3,6	;RP1=0, select bank0
   752  022B  128C               	bcf	12,5	;volatile
   753  022C                     l1127:
   754                           
   755                           ;Lab05.c: 174:     PIR1bits.TXIF = 0;
   756  022C  120C               	bcf	12,4	;volatile
   757  022D                     l1129:
   758                           
   759                           ;Lab05.c: 177:     INTCONbits.GIE = 1;
   760  022D  178B               	bsf	11,7	;volatile
   761  022E                     l1131:
   762                           
   763                           ;Lab05.c: 178:     INTCONbits.PEIE = 1;
   764  022E  170B               	bsf	11,6	;volatile
   765  022F                     l1133:
   766                           
   767                           ;Lab05.c: 179:     PIE1bits.RCIE = 0;
   768  022F  1683               	bsf	3,5	;RP0=1, select bank1
   769  0230  1303               	bcf	3,6	;RP1=0, select bank1
   770  0231  128C               	bcf	12,5	;volatile
   771  0232                     l1135:
   772                           
   773                           ;Lab05.c: 180:     PIE1bits.TXIE = 0;
   774  0232  120C               	bcf	12,4	;volatile
   775  0233                     l1137:
   776                           
   777                           ;Lab05.c: 181:     INTCONbits.RBIF = 1;
   778  0233  140B               	bsf	11,0	;volatile
   779  0234                     l1139:
   780                           
   781                           ;Lab05.c: 182:     INTCONbits.RBIE = 1;
   782  0234  158B               	bsf	11,3	;volatile
   783  0235                     l128:
   784  0235  0008               	return
   785  0236                     __end_of_setup:
   786                           
   787                           	psect	text2
   788  025C                     __ptext2:	
   789 ;; *************** function ___bmul *****************
   790 ;; Defined at:
   791 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  multiplier      1    wreg     unsigned char 
   794 ;;  multiplicand    1    2[COMMON] unsigned char 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  multiplier      1    5[COMMON] unsigned char 
   797 ;;  product         1    4[COMMON] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      unsigned char 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         1       0       0       0       0
   808 ;;      Locals:         2       0       0       0       0
   809 ;;      Temps:          1       0       0       0       0
   810 ;;      Totals:         4       0       0       0       0
   811 ;;Total ram usage:        4 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function ___bmul
   823  025C                     ___bmul:
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   827                           ;___bmul@multiplier stored from wreg
   828  025C  00F5               	movwf	___bmul@multiplier
   829  025D                     l1161:
   830  025D  01F4               	clrf	___bmul@product
   831  025E                     l1163:
   832  025E  1C75               	btfss	___bmul@multiplier,0
   833  025F  2A61               	goto	u561
   834  0260  2A62               	goto	u560
   835  0261                     u561:
   836  0261  2A66               	goto	l1167
   837  0262                     u560:
   838  0262                     l1165:
   839  0262  0872               	movf	___bmul@multiplicand,w
   840  0263  00F3               	movwf	??___bmul
   841  0264  0873               	movf	??___bmul,w
   842  0265  07F4               	addwf	___bmul@product,f
   843  0266                     l1167:
   844  0266  1003               	clrc
   845  0267  0DF2               	rlf	___bmul@multiplicand,f
   846  0268                     l1169:
   847  0268  1003               	clrc
   848  0269  0CF5               	rrf	___bmul@multiplier,f
   849  026A  0875               	movf	___bmul@multiplier,w
   850  026B  1D03               	btfss	3,2
   851  026C  2A6E               	goto	u571
   852  026D  2A6F               	goto	u570
   853  026E                     u571:
   854  026E  2A5E               	goto	l1163
   855  026F                     u570:
   856  026F                     l1171:
   857  026F  0874               	movf	___bmul@product,w
   858  0270                     l259:
   859  0270  0008               	return
   860  0271                     __end_of___bmul:
   861                           
   862                           	psect	text3
   863  00F2                     __ptext3:	
   864 ;; *************** function _Text *****************
   865 ;; Defined at:
   866 ;;		line 186 in file "Lab05.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       3       0       0       0
   883 ;;      Totals:         0       3       0       0       0
   884 ;;Total ram usage:        3 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    3
   887 ;; This function calls:
   888 ;;		_division
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function _Text
   896  00F2                     _Text:
   897  00F2                     l1253:	
   898                           ;incstack = 0
   899                           ; Regs used in _Text: [wreg+status,2+status,0+pclath+cstack]
   900                           
   901                           
   902                           ;Lab05.c: 187:      _delay((unsigned long)((250)*(4000000/4000.0)));
   903  00F2  3002               	movlw	2
   904  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   905  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   906  00F5  00BC               	movwf	??_Text+2
   907  00F6  3045               	movlw	69
   908  00F7  00BB               	movwf	??_Text+1
   909  00F8  30A9               	movlw	169
   910  00F9  00BA               	movwf	??_Text
   911  00FA                     u817:
   912  00FA  0BBA               	decfsz	??_Text,f
   913  00FB  28FA               	goto	u817
   914  00FC  0BBB               	decfsz	??_Text+1,f
   915  00FD  28FA               	goto	u817
   916  00FE  0BBC               	decfsz	??_Text+2,f
   917  00FF  28FA               	goto	u817
   918  0100                     l1255:
   919                           
   920                           ;Lab05.c: 188:      division(count);
   921  0100  1283               	bcf	3,5	;RP0=0, select bank0
   922  0101  1303               	bcf	3,6	;RP1=0, select bank0
   923  0102  0829               	movf	_count,w
   924  0103  120A  118A  201E  120A  118A  	fcall	_division
   925  0108                     l1257:
   926                           
   927                           ;Lab05.c: 190:      if (RCREG == 'a'){
   928  0108  3061               	movlw	97
   929  0109  1283               	bcf	3,5	;RP0=0, select bank0
   930  010A  1303               	bcf	3,6	;RP1=0, select bank0
   931  010B  061A               	xorwf	26,w	;volatile
   932  010C  1D03               	btfss	3,2
   933  010D  290F               	goto	u741
   934  010E  2910               	goto	u740
   935  010F                     u741:
   936  010F  2954               	goto	l135
   937  0110                     u740:
   938  0110                     l1259:
   939                           
   940                           ;Lab05.c: 191:      _delay((unsigned long)((50)*(4000000/4000.0)));
   941  0110  3041               	movlw	65
   942  0111  1283               	bcf	3,5	;RP0=0, select bank0
   943  0112  1303               	bcf	3,6	;RP1=0, select bank0
   944  0113  00BB               	movwf	??_Text+1
   945  0114  30ED               	movlw	237
   946  0115  00BA               	movwf	??_Text
   947  0116                     u827:
   948  0116  0BBA               	decfsz	??_Text,f
   949  0117  2916               	goto	u827
   950  0118  0BBB               	decfsz	??_Text+1,f
   951  0119  2916               	goto	u827
   952  011A  291B               	nop2
   953  011B                     l1261:
   954                           
   955                           ;Lab05.c: 192:     if(TXIF == 1){
   956  011B  1283               	bcf	3,5	;RP0=0, select bank0
   957  011C  1303               	bcf	3,6	;RP1=0, select bank0
   958  011D  1E0C               	btfss	12,4	;volatile
   959  011E  2920               	goto	u751
   960  011F  2921               	goto	u750
   961  0120                     u751:
   962  0120  2923               	goto	l132
   963  0121                     u750:
   964  0121                     l1263:
   965                           
   966                           ;Lab05.c: 193:         TXREG = hundreds;
   967  0121  087B               	movf	_hundreds,w
   968  0122  0099               	movwf	25	;volatile
   969  0123                     l132:	
   970                           ;Lab05.c: 194:     }
   971                           
   972                           
   973                           ;Lab05.c: 195:     _delay((unsigned long)((50)*(4000000/4000.0)));
   974  0123  3041               	movlw	65
   975  0124  1283               	bcf	3,5	;RP0=0, select bank0
   976  0125  1303               	bcf	3,6	;RP1=0, select bank0
   977  0126  00BB               	movwf	??_Text+1
   978  0127  30ED               	movlw	237
   979  0128  00BA               	movwf	??_Text
   980  0129                     u837:
   981  0129  0BBA               	decfsz	??_Text,f
   982  012A  2929               	goto	u837
   983  012B  0BBB               	decfsz	??_Text+1,f
   984  012C  2929               	goto	u837
   985  012D  292E               	nop2
   986  012E                     l1265:
   987                           
   988                           ;Lab05.c: 196:     if(TXIF == 1){
   989  012E  1283               	bcf	3,5	;RP0=0, select bank0
   990  012F  1303               	bcf	3,6	;RP1=0, select bank0
   991  0130  1E0C               	btfss	12,4	;volatile
   992  0131  2933               	goto	u761
   993  0132  2934               	goto	u760
   994  0133                     u761:
   995  0133  2936               	goto	l133
   996  0134                     u760:
   997  0134                     l1267:
   998                           
   999                           ;Lab05.c: 197:         TXREG = tens;
  1000  0134  0831               	movf	_tens,w
  1001  0135  0099               	movwf	25	;volatile
  1002  0136                     l133:	
  1003                           ;Lab05.c: 198:        }
  1004                           
  1005                           
  1006                           ;Lab05.c: 199:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1007  0136  3041               	movlw	65
  1008  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0139  00BB               	movwf	??_Text+1
  1011  013A  30ED               	movlw	237
  1012  013B  00BA               	movwf	??_Text
  1013  013C                     u847:
  1014  013C  0BBA               	decfsz	??_Text,f
  1015  013D  293C               	goto	u847
  1016  013E  0BBB               	decfsz	??_Text+1,f
  1017  013F  293C               	goto	u847
  1018  0140  2941               	nop2
  1019  0141                     l1269:
  1020                           
  1021                           ;Lab05.c: 200:     if(TXIF == 1){
  1022  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0143  1E0C               	btfss	12,4	;volatile
  1025  0144  2946               	goto	u771
  1026  0145  2947               	goto	u770
  1027  0146                     u771:
  1028  0146  2949               	goto	l134
  1029  0147                     u770:
  1030  0147                     l1271:
  1031                           
  1032                           ;Lab05.c: 201:         TXREG = units;
  1033  0147  0830               	movf	_units,w
  1034  0148  0099               	movwf	25	;volatile
  1035  0149                     l134:	
  1036                           ;Lab05.c: 202:        }
  1037                           
  1038                           
  1039                           ;Lab05.c: 203:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1040  0149  3041               	movlw	65
  1041  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1042  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1043  014C  00BB               	movwf	??_Text+1
  1044  014D  30ED               	movlw	237
  1045  014E  00BA               	movwf	??_Text
  1046  014F                     u857:
  1047  014F  0BBA               	decfsz	??_Text,f
  1048  0150  294F               	goto	u857
  1049  0151  0BBB               	decfsz	??_Text+1,f
  1050  0152  294F               	goto	u857
  1051  0153  2954               	nop2
  1052  0154                     l135:
  1053  0154  0008               	return
  1054  0155                     __end_of_Text:
  1055                           
  1056                           	psect	text4
  1057  001E                     __ptext4:	
  1058 ;; *************** function _division *****************
  1059 ;; Defined at:
  1060 ;;		line 208 in file "Lab05.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  valor           1    wreg     unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  valor           1    9[COMMON] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      unsigned char 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         1       0       0       0       0
  1076 ;;      Temps:          0       3       0       0       0
  1077 ;;      Totals:         1       3       0       0       0
  1078 ;;Total ram usage:        4 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    2
  1081 ;; This function calls:
  1082 ;;		___awdiv
  1083 ;;		___awmod
  1084 ;; This function is called by:
  1085 ;;		_Text
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _division
  1091  001E                     _division:
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1095                           ;division@valor stored from wreg
  1096  001E  00F9               	movwf	division@valor
  1097  001F                     l1245:
  1098                           
  1099                           ;Lab05.c: 209:     hundreds = valor/100;
  1100  001F  3064               	movlw	100
  1101  0020  00F2               	movwf	___awdiv@divisor
  1102  0021  3000               	movlw	0
  1103  0022  00F3               	movwf	___awdiv@divisor+1
  1104  0023  0879               	movf	division@valor,w
  1105  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0026  00B7               	movwf	??_division
  1108  0027  01B8               	clrf	??_division+1
  1109  0028  0837               	movf	??_division,w
  1110  0029  00F4               	movwf	___awdiv@dividend
  1111  002A  0838               	movf	??_division+1,w
  1112  002B  00F5               	movwf	___awdiv@dividend+1
  1113  002C  120A  118A  2089  120A  118A  	fcall	___awdiv
  1114  0031  0872               	movf	?___awdiv,w
  1115  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0034  00B9               	movwf	??_division+2
  1118  0035  0839               	movf	??_division+2,w
  1119  0036  00FB               	movwf	_hundreds
  1120                           
  1121                           ;Lab05.c: 210:     residuo = valor%100;
  1122  0037  3064               	movlw	100
  1123  0038  00F2               	movwf	___awmod@divisor
  1124  0039  3000               	movlw	0
  1125  003A  00F3               	movwf	___awmod@divisor+1
  1126  003B  0879               	movf	division@valor,w
  1127  003C  00B7               	movwf	??_division
  1128  003D  01B8               	clrf	??_division+1
  1129  003E  0837               	movf	??_division,w
  1130  003F  00F4               	movwf	___awmod@dividend
  1131  0040  0838               	movf	??_division+1,w
  1132  0041  00F5               	movwf	___awmod@dividend+1
  1133  0042  120A  118A  2155  120A  118A  	fcall	___awmod
  1134  0047  0872               	movf	?___awmod,w
  1135  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1137  004A  00B9               	movwf	??_division+2
  1138  004B  0839               	movf	??_division+2,w
  1139  004C  00FA               	movwf	_residuo
  1140                           
  1141                           ;Lab05.c: 211:     tens = residuo/10;
  1142  004D  300A               	movlw	10
  1143  004E  00F2               	movwf	___awdiv@divisor
  1144  004F  3000               	movlw	0
  1145  0050  00F3               	movwf	___awdiv@divisor+1
  1146  0051  087A               	movf	_residuo,w
  1147  0052  00B7               	movwf	??_division
  1148  0053  01B8               	clrf	??_division+1
  1149  0054  0837               	movf	??_division,w
  1150  0055  00F4               	movwf	___awdiv@dividend
  1151  0056  0838               	movf	??_division+1,w
  1152  0057  00F5               	movwf	___awdiv@dividend+1
  1153  0058  120A  118A  2089  120A  118A  	fcall	___awdiv
  1154  005D  0872               	movf	?___awdiv,w
  1155  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1156  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0060  00B9               	movwf	??_division+2
  1158  0061  0839               	movf	??_division+2,w
  1159  0062  00B1               	movwf	_tens
  1160                           
  1161                           ;Lab05.c: 212:     units = residuo%10;
  1162  0063  300A               	movlw	10
  1163  0064  00F2               	movwf	___awmod@divisor
  1164  0065  3000               	movlw	0
  1165  0066  00F3               	movwf	___awmod@divisor+1
  1166  0067  087A               	movf	_residuo,w
  1167  0068  00B7               	movwf	??_division
  1168  0069  01B8               	clrf	??_division+1
  1169  006A  0837               	movf	??_division,w
  1170  006B  00F4               	movwf	___awmod@dividend
  1171  006C  0838               	movf	??_division+1,w
  1172  006D  00F5               	movwf	___awmod@dividend+1
  1173  006E  120A  118A  2155  120A  118A  	fcall	___awmod
  1174  0073  0872               	movf	?___awmod,w
  1175  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0076  00B9               	movwf	??_division+2
  1178  0077  0839               	movf	??_division+2,w
  1179  0078  00B0               	movwf	_units
  1180  0079                     l1247:
  1181                           
  1182                           ;Lab05.c: 214:     hundreds = hundreds + 48;
  1183  0079  087B               	movf	_hundreds,w
  1184  007A  3E30               	addlw	48
  1185  007B  00B7               	movwf	??_division
  1186  007C  0837               	movf	??_division,w
  1187  007D  00FB               	movwf	_hundreds
  1188  007E                     l1249:
  1189                           
  1190                           ;Lab05.c: 215:     tens = tens + 48;
  1191  007E  0831               	movf	_tens,w
  1192  007F  3E30               	addlw	48
  1193  0080  00B7               	movwf	??_division
  1194  0081  0837               	movf	??_division,w
  1195  0082  00B1               	movwf	_tens
  1196  0083                     l1251:
  1197                           
  1198                           ;Lab05.c: 216:     units = units + 48;
  1199  0083  0830               	movf	_units,w
  1200  0084  3E30               	addlw	48
  1201  0085  00B7               	movwf	??_division
  1202  0086  0837               	movf	??_division,w
  1203  0087  00B0               	movwf	_units
  1204  0088                     l138:
  1205  0088  0008               	return
  1206  0089                     __end_of_division:
  1207                           
  1208                           	psect	text5
  1209  0155                     __ptext5:	
  1210 ;; *************** function ___awmod *****************
  1211 ;; Defined at:
  1212 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  divisor         2    2[COMMON] int 
  1215 ;;  dividend        2    4[COMMON] int 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  sign            1    8[COMMON] unsigned char 
  1218 ;;  counter         1    7[COMMON] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    2[COMMON] int 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         4       0       0       0       0
  1229 ;;      Locals:         2       0       0       0       0
  1230 ;;      Temps:          1       0       0       0       0
  1231 ;;      Totals:         7       0       0       0       0
  1232 ;;Total ram usage:        7 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_division
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function ___awmod
  1244  0155                     ___awmod:
  1245  0155                     l1037:	
  1246                           ;incstack = 0
  1247                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1248                           
  1249  0155  01F8               	clrf	___awmod@sign
  1250  0156                     l1039:
  1251  0156  1FF5               	btfss	___awmod@dividend+1,7
  1252  0157  2959               	goto	u431
  1253  0158  295A               	goto	u430
  1254  0159                     u431:
  1255  0159  2961               	goto	l1045
  1256  015A                     u430:
  1257  015A                     l1041:
  1258  015A  09F4               	comf	___awmod@dividend,f
  1259  015B  09F5               	comf	___awmod@dividend+1,f
  1260  015C  0AF4               	incf	___awmod@dividend,f
  1261  015D  1903               	skipnz
  1262  015E  0AF5               	incf	___awmod@dividend+1,f
  1263  015F                     l1043:
  1264  015F  01F8               	clrf	___awmod@sign
  1265  0160  0AF8               	incf	___awmod@sign,f
  1266  0161                     l1045:
  1267  0161  1FF3               	btfss	___awmod@divisor+1,7
  1268  0162  2964               	goto	u441
  1269  0163  2965               	goto	u440
  1270  0164                     u441:
  1271  0164  296A               	goto	l1049
  1272  0165                     u440:
  1273  0165                     l1047:
  1274  0165  09F2               	comf	___awmod@divisor,f
  1275  0166  09F3               	comf	___awmod@divisor+1,f
  1276  0167  0AF2               	incf	___awmod@divisor,f
  1277  0168  1903               	skipnz
  1278  0169  0AF3               	incf	___awmod@divisor+1,f
  1279  016A                     l1049:
  1280  016A  0872               	movf	___awmod@divisor,w
  1281  016B  0473               	iorwf	___awmod@divisor+1,w
  1282  016C  1903               	btfsc	3,2
  1283  016D  296F               	goto	u451
  1284  016E  2970               	goto	u450
  1285  016F                     u451:
  1286  016F  299F               	goto	l1067
  1287  0170                     u450:
  1288  0170                     l1051:
  1289  0170  01F7               	clrf	___awmod@counter
  1290  0171  0AF7               	incf	___awmod@counter,f
  1291  0172  297E               	goto	l1057
  1292  0173                     l1053:
  1293  0173  3001               	movlw	1
  1294  0174                     u465:
  1295  0174  1003               	clrc
  1296  0175  0DF2               	rlf	___awmod@divisor,f
  1297  0176  0DF3               	rlf	___awmod@divisor+1,f
  1298  0177  3EFF               	addlw	-1
  1299  0178  1D03               	skipz
  1300  0179  2974               	goto	u465
  1301  017A                     l1055:
  1302  017A  3001               	movlw	1
  1303  017B  00F6               	movwf	??___awmod
  1304  017C  0876               	movf	??___awmod,w
  1305  017D  07F7               	addwf	___awmod@counter,f
  1306  017E                     l1057:
  1307  017E  1FF3               	btfss	___awmod@divisor+1,7
  1308  017F  2981               	goto	u471
  1309  0180  2982               	goto	u470
  1310  0181                     u471:
  1311  0181  2973               	goto	l1053
  1312  0182                     u470:
  1313  0182                     l1059:
  1314  0182  0873               	movf	___awmod@divisor+1,w
  1315  0183  0275               	subwf	___awmod@dividend+1,w
  1316  0184  1D03               	skipz
  1317  0185  2988               	goto	u485
  1318  0186  0872               	movf	___awmod@divisor,w
  1319  0187  0274               	subwf	___awmod@dividend,w
  1320  0188                     u485:
  1321  0188  1C03               	skipc
  1322  0189  298B               	goto	u481
  1323  018A  298C               	goto	u480
  1324  018B                     u481:
  1325  018B  2992               	goto	l1063
  1326  018C                     u480:
  1327  018C                     l1061:
  1328  018C  0872               	movf	___awmod@divisor,w
  1329  018D  02F4               	subwf	___awmod@dividend,f
  1330  018E  0873               	movf	___awmod@divisor+1,w
  1331  018F  1C03               	skipc
  1332  0190  03F5               	decf	___awmod@dividend+1,f
  1333  0191  02F5               	subwf	___awmod@dividend+1,f
  1334  0192                     l1063:
  1335  0192  3001               	movlw	1
  1336  0193                     u495:
  1337  0193  1003               	clrc
  1338  0194  0CF3               	rrf	___awmod@divisor+1,f
  1339  0195  0CF2               	rrf	___awmod@divisor,f
  1340  0196  3EFF               	addlw	-1
  1341  0197  1D03               	skipz
  1342  0198  2993               	goto	u495
  1343  0199                     l1065:
  1344  0199  3001               	movlw	1
  1345  019A  02F7               	subwf	___awmod@counter,f
  1346  019B  1D03               	btfss	3,2
  1347  019C  299E               	goto	u501
  1348  019D  299F               	goto	u500
  1349  019E                     u501:
  1350  019E  2982               	goto	l1059
  1351  019F                     u500:
  1352  019F                     l1067:
  1353  019F  0878               	movf	___awmod@sign,w
  1354  01A0  1903               	btfsc	3,2
  1355  01A1  29A3               	goto	u511
  1356  01A2  29A4               	goto	u510
  1357  01A3                     u511:
  1358  01A3  29A9               	goto	l1071
  1359  01A4                     u510:
  1360  01A4                     l1069:
  1361  01A4  09F4               	comf	___awmod@dividend,f
  1362  01A5  09F5               	comf	___awmod@dividend+1,f
  1363  01A6  0AF4               	incf	___awmod@dividend,f
  1364  01A7  1903               	skipnz
  1365  01A8  0AF5               	incf	___awmod@dividend+1,f
  1366  01A9                     l1071:
  1367  01A9  0875               	movf	___awmod@dividend+1,w
  1368  01AA  00F3               	movwf	?___awmod+1
  1369  01AB  0874               	movf	___awmod@dividend,w
  1370  01AC  00F2               	movwf	?___awmod
  1371  01AD                     l399:
  1372  01AD  0008               	return
  1373  01AE                     __end_of___awmod:
  1374                           
  1375                           	psect	text6
  1376  0089                     __ptext6:	
  1377 ;; *************** function ___awdiv *****************
  1378 ;; Defined at:
  1379 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  divisor         2    2[COMMON] int 
  1382 ;;  dividend        2    4[COMMON] int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  quotient        2    2[BANK0 ] int 
  1385 ;;  sign            1    1[BANK0 ] unsigned char 
  1386 ;;  counter         1    0[BANK0 ] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  2    2[COMMON] int 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         4       0       0       0       0
  1397 ;;      Locals:         0       4       0       0       0
  1398 ;;      Temps:          1       0       0       0       0
  1399 ;;      Totals:         5       4       0       0       0
  1400 ;;Total ram usage:        9 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_division
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function ___awdiv
  1412  0089                     ___awdiv:
  1413  0089                     l1201:	
  1414                           ;incstack = 0
  1415                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1416                           
  1417  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1418  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1419  008B  01B4               	clrf	___awdiv@sign
  1420  008C                     l1203:
  1421  008C  1FF3               	btfss	___awdiv@divisor+1,7
  1422  008D  288F               	goto	u641
  1423  008E  2890               	goto	u640
  1424  008F                     u641:
  1425  008F  2897               	goto	l1209
  1426  0090                     u640:
  1427  0090                     l1205:
  1428  0090  09F2               	comf	___awdiv@divisor,f
  1429  0091  09F3               	comf	___awdiv@divisor+1,f
  1430  0092  0AF2               	incf	___awdiv@divisor,f
  1431  0093  1903               	skipnz
  1432  0094  0AF3               	incf	___awdiv@divisor+1,f
  1433  0095                     l1207:
  1434  0095  01B4               	clrf	___awdiv@sign
  1435  0096  0AB4               	incf	___awdiv@sign,f
  1436  0097                     l1209:
  1437  0097  1FF5               	btfss	___awdiv@dividend+1,7
  1438  0098  289A               	goto	u651
  1439  0099  289B               	goto	u650
  1440  009A                     u651:
  1441  009A  28A4               	goto	l1215
  1442  009B                     u650:
  1443  009B                     l1211:
  1444  009B  09F4               	comf	___awdiv@dividend,f
  1445  009C  09F5               	comf	___awdiv@dividend+1,f
  1446  009D  0AF4               	incf	___awdiv@dividend,f
  1447  009E  1903               	skipnz
  1448  009F  0AF5               	incf	___awdiv@dividend+1,f
  1449  00A0                     l1213:
  1450  00A0  3001               	movlw	1
  1451  00A1  00F6               	movwf	??___awdiv
  1452  00A2  0876               	movf	??___awdiv,w
  1453  00A3  06B4               	xorwf	___awdiv@sign,f
  1454  00A4                     l1215:
  1455  00A4  01B5               	clrf	___awdiv@quotient
  1456  00A5  01B6               	clrf	___awdiv@quotient+1
  1457  00A6                     l1217:
  1458  00A6  0872               	movf	___awdiv@divisor,w
  1459  00A7  0473               	iorwf	___awdiv@divisor+1,w
  1460  00A8  1903               	btfsc	3,2
  1461  00A9  28AB               	goto	u661
  1462  00AA  28AC               	goto	u660
  1463  00AB                     u661:
  1464  00AB  28E3               	goto	l1237
  1465  00AC                     u660:
  1466  00AC                     l1219:
  1467  00AC  01B3               	clrf	___awdiv@counter
  1468  00AD  0AB3               	incf	___awdiv@counter,f
  1469  00AE  28BA               	goto	l1225
  1470  00AF                     l1221:
  1471  00AF  3001               	movlw	1
  1472  00B0                     u675:
  1473  00B0  1003               	clrc
  1474  00B1  0DF2               	rlf	___awdiv@divisor,f
  1475  00B2  0DF3               	rlf	___awdiv@divisor+1,f
  1476  00B3  3EFF               	addlw	-1
  1477  00B4  1D03               	skipz
  1478  00B5  28B0               	goto	u675
  1479  00B6                     l1223:
  1480  00B6  3001               	movlw	1
  1481  00B7  00F6               	movwf	??___awdiv
  1482  00B8  0876               	movf	??___awdiv,w
  1483  00B9  07B3               	addwf	___awdiv@counter,f
  1484  00BA                     l1225:
  1485  00BA  1FF3               	btfss	___awdiv@divisor+1,7
  1486  00BB  28BD               	goto	u681
  1487  00BC  28BE               	goto	u680
  1488  00BD                     u681:
  1489  00BD  28AF               	goto	l1221
  1490  00BE                     u680:
  1491  00BE                     l1227:
  1492  00BE  3001               	movlw	1
  1493  00BF                     u695:
  1494  00BF  1003               	clrc
  1495  00C0  0DB5               	rlf	___awdiv@quotient,f
  1496  00C1  0DB6               	rlf	___awdiv@quotient+1,f
  1497  00C2  3EFF               	addlw	-1
  1498  00C3  1D03               	skipz
  1499  00C4  28BF               	goto	u695
  1500  00C5  0873               	movf	___awdiv@divisor+1,w
  1501  00C6  0275               	subwf	___awdiv@dividend+1,w
  1502  00C7  1D03               	skipz
  1503  00C8  28CB               	goto	u705
  1504  00C9  0872               	movf	___awdiv@divisor,w
  1505  00CA  0274               	subwf	___awdiv@dividend,w
  1506  00CB                     u705:
  1507  00CB  1C03               	skipc
  1508  00CC  28CE               	goto	u701
  1509  00CD  28CF               	goto	u700
  1510  00CE                     u701:
  1511  00CE  28D6               	goto	l1233
  1512  00CF                     u700:
  1513  00CF                     l1229:
  1514  00CF  0872               	movf	___awdiv@divisor,w
  1515  00D0  02F4               	subwf	___awdiv@dividend,f
  1516  00D1  0873               	movf	___awdiv@divisor+1,w
  1517  00D2  1C03               	skipc
  1518  00D3  03F5               	decf	___awdiv@dividend+1,f
  1519  00D4  02F5               	subwf	___awdiv@dividend+1,f
  1520  00D5                     l1231:
  1521  00D5  1435               	bsf	___awdiv@quotient,0
  1522  00D6                     l1233:
  1523  00D6  3001               	movlw	1
  1524  00D7                     u715:
  1525  00D7  1003               	clrc
  1526  00D8  0CF3               	rrf	___awdiv@divisor+1,f
  1527  00D9  0CF2               	rrf	___awdiv@divisor,f
  1528  00DA  3EFF               	addlw	-1
  1529  00DB  1D03               	skipz
  1530  00DC  28D7               	goto	u715
  1531  00DD                     l1235:
  1532  00DD  3001               	movlw	1
  1533  00DE  02B3               	subwf	___awdiv@counter,f
  1534  00DF  1D03               	btfss	3,2
  1535  00E0  28E2               	goto	u721
  1536  00E1  28E3               	goto	u720
  1537  00E2                     u721:
  1538  00E2  28BE               	goto	l1227
  1539  00E3                     u720:
  1540  00E3                     l1237:
  1541  00E3  0834               	movf	___awdiv@sign,w
  1542  00E4  1903               	btfsc	3,2
  1543  00E5  28E7               	goto	u731
  1544  00E6  28E8               	goto	u730
  1545  00E7                     u731:
  1546  00E7  28ED               	goto	l1241
  1547  00E8                     u730:
  1548  00E8                     l1239:
  1549  00E8  09B5               	comf	___awdiv@quotient,f
  1550  00E9  09B6               	comf	___awdiv@quotient+1,f
  1551  00EA  0AB5               	incf	___awdiv@quotient,f
  1552  00EB  1903               	skipnz
  1553  00EC  0AB6               	incf	___awdiv@quotient+1,f
  1554  00ED                     l1241:
  1555  00ED  0836               	movf	___awdiv@quotient+1,w
  1556  00EE  00F3               	movwf	?___awdiv+1
  1557  00EF  0835               	movf	___awdiv@quotient,w
  1558  00F0  00F2               	movwf	?___awdiv
  1559  00F1                     l386:
  1560  00F1  0008               	return
  1561  00F2                     __end_of___awdiv:
  1562                           
  1563                           	psect	text7
  1564  0236                     __ptext7:	
  1565 ;; *************** function _isr *****************
  1566 ;; Defined at:
  1567 ;;		line 68 in file "Lab05.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0
  1583 ;;      Temps:          2       0       0       0       0
  1584 ;;      Totals:         2       0       0       0       0
  1585 ;;Total ram usage:        2 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		Interrupt level 1
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _isr
  1596  0236                     _isr:
  1597  0236                     i1l1175:
  1598                           
  1599                           ;Lab05.c: 72:     if (RBIF == 1)
  1600  0236  1C0B               	btfss	11,0	;volatile
  1601  0237  2A39               	goto	u58_21
  1602  0238  2A3A               	goto	u58_20
  1603  0239                     u58_21:
  1604  0239  2A55               	goto	i1l108
  1605  023A                     u58_20:
  1606  023A                     i1l1177:
  1607                           
  1608                           ;Lab05.c: 73:     {;Lab05.c: 74:         if (PORTBbits.RB0 == 0)
  1609  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1610  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1611  023C  1806               	btfsc	6,0	;volatile
  1612  023D  2A3F               	goto	u59_21
  1613  023E  2A40               	goto	u59_20
  1614  023F                     u59_21:
  1615  023F  2A48               	goto	i1l1181
  1616  0240                     u59_20:
  1617  0240                     i1l1179:
  1618                           
  1619                           ;Lab05.c: 75:         {;Lab05.c: 76:             count = count + 1;
  1620  0240  0829               	movf	_count,w
  1621  0241  3E01               	addlw	1
  1622  0242  00A9               	movwf	_count
  1623  0243  082A               	movf	_count+1,w
  1624  0244  1803               	skipnc
  1625  0245  3E01               	addlw	1
  1626  0246  3E00               	addlw	0
  1627  0247  00AA               	movwf	_count+1
  1628  0248                     i1l1181:
  1629                           
  1630                           ;Lab05.c: 78:         if (PORTBbits.RB1 == 0)
  1631  0248  1886               	btfsc	6,1	;volatile
  1632  0249  2A4B               	goto	u60_21
  1633  024A  2A4C               	goto	u60_20
  1634  024B                     u60_21:
  1635  024B  2A54               	goto	i1l1185
  1636  024C                     u60_20:
  1637  024C                     i1l1183:
  1638                           
  1639                           ;Lab05.c: 79:         {;Lab05.c: 80:             count = count - 1;
  1640  024C  0829               	movf	_count,w
  1641  024D  3EFF               	addlw	255
  1642  024E  00A9               	movwf	_count
  1643  024F  082A               	movf	_count+1,w
  1644  0250  1803               	skipnc
  1645  0251  3E01               	addlw	1
  1646  0252  3EFF               	addlw	255
  1647  0253  00AA               	movwf	_count+1
  1648  0254                     i1l1185:
  1649                           
  1650                           ;Lab05.c: 82:         INTCONbits.RBIF = 0;
  1651  0254  100B               	bcf	11,0	;volatile
  1652  0255                     i1l108:
  1653  0255  0871               	movf	??_isr+1,w
  1654  0256  008A               	movwf	10
  1655  0257  0E70               	swapf	??_isr,w
  1656  0258  0083               	movwf	3
  1657  0259  0EFE               	swapf	btemp,f
  1658  025A  0E7E               	swapf	btemp,w
  1659  025B  0009               	retfie
  1660  025C                     __end_of_isr:
  1661  007E                     btemp	set	126	;btemp
  1662  007E                     wtemp0	set	126
  1663                           
  1664                           	psect	intentry
  1665  0004                     __pintentry:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _isr: [wreg+status,2+status,0]
  1668                           
  1669  0004                     interrupt_function:
  1670  007E                     saved_w	set	btemp
  1671  0004  00FE               	movwf	btemp
  1672  0005  0E03               	swapf	3,w
  1673  0006  00F0               	movwf	??_isr
  1674  0007  080A               	movf	10,w
  1675  0008  00F1               	movwf	??_isr+1
  1676  0009  120A  118A  2A36   	ljmp	_isr
  1677                           
  1678                           	psect	config
  1679                           
  1680                           ;Config register CONFIG1 @ 0x2007
  1681                           ;	Oscillator Selection bits
  1682                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1683                           ;	Watchdog Timer Enable bit
  1684                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1685                           ;	Power-up Timer Enable bit
  1686                           ;	PWRTE = OFF, PWRT disabled
  1687                           ;	RE3/MCLR pin function select bit
  1688                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1689                           ;	Code Protection bit
  1690                           ;	CP = OFF, Program memory code protection is disabled
  1691                           ;	Data Code Protection bit
  1692                           ;	CPD = OFF, Data memory code protection is disabled
  1693                           ;	Brown Out Reset Selection bits
  1694                           ;	BOREN = OFF, BOR disabled
  1695                           ;	Internal External Switchover bit
  1696                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1697                           ;	Fail-Safe Clock Monitor Enabled bit
  1698                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1699                           ;	Low Voltage Programming Enable bit
  1700                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1701                           ;	In-Circuit Debugger Mode bit
  1702                           ;	DEBUG = 0x1, unprogrammed default
  1703  2007                     	org	8199
  1704  2007  20D4               	dw	8404
  1705                           
  1706                           ;Config register CONFIG2 @ 0x2008
  1707                           ;	Brown-out Reset Selection bit
  1708                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1709                           ;	Flash Program Memory Self Write Enable bits
  1710                           ;	WRT = OFF, Write protection off
  1711  2008                     	org	8200
  1712  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     13      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S923__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S923__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _Text->_division
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Text
    _Text->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1711
                                             10 BANK0      3     3      0
                               _Text
                             ___bmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     244
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Text                                                 3     3      0    1467
                                              7 BANK0      3     3      0
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Text
     _division
       ___awdiv
       ___awmod
   ___bmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Aug 19 00:00:00 2021

                      pc 0002           ___bmul@product 0074             ___awdiv@sign 0034  
                     fsr 0004                      l120 01D0                      l114 01BC  
                    l132 0123                      l133 0136                      l117 01C7  
                    l134 0149                      l135 0154                      l128 0235  
                    l138 0088                      l259 0270                      l386 00F1  
                    l399 01AD                      u500 019F                      u501 019E  
                    u510 01A4                      u430 015A                      u511 01A3  
                    u431 0159                      u440 0165                      u441 0164  
                    u450 0170                      u451 016F                      u700 00CF  
                    u701 00CE                      u470 0182                      u471 0181  
                    u720 00E3                      u640 0090                      u480 018C  
                    u560 0262                      u800 01D4                      u721 00E2  
                    u705 00CB                      u641 008F                      u481 018B  
                    u465 0174                      u561 0261                      u801 01D3  
                    u730 00E8                      u650 009B                      u570 026F  
                    u731 00E7                      u715 00D7                      u651 009A  
                    u571 026E                      u660 00AC                      u740 0110  
                    u661 00AB                      u485 0188                      u741 010F  
                    u750 0121                      u495 0193                      u751 0120  
                    u680 00BE                      u760 0134                      u681 00BD  
                    u761 0133                      u817 00FA                      u770 0147  
                    u675 00B0                      u771 0146                      u827 0116  
                    u780 01C2                      u837 0129                      u781 01C1  
                    u790 01CB                      u695 00BF                      u847 013C  
                    u791 01CA                      u857 014F                      _dec 002E  
                    _cen 002F                      _con 002B                      _isr 0236  
                    _var 002C                      _prt 0020                      _uni 002D  
                    indf 0000             ___awmod@sign 0078                     l1101 0213  
                   l1111 021A                     l1103 0214                     l1201 0089  
                   l1041 015A                     l1121 0225                     l1113 021E  
                   l1105 0215                     l1211 009B                     l1203 008C  
                   l1051 0170                     l1043 015F                     l1131 022E  
                   l1123 0228                     l1115 0220                     l1107 0216  
                   l1221 00AF                     l1213 00A0                     l1205 0090  
                   l1061 018C                     l1053 0173                     l1045 0161  
                   l1037 0155                     l1133 022F                     l1125 0229  
                   l1117 0223                     l1109 0217                     l1231 00D5  
                   l1223 00B6                     l1215 00A4                     l1207 0095  
                   l1071 01A9                     l1063 0192                     l1055 017A  
                   l1047 0165                     l1039 0156                     l1135 0232  
                   l1127 022C                     l1119 0224                     l1241 00ED  
                   l1233 00D6                     l1225 00BA                     l1217 00A6  
                   l1209 0097                     l1065 0199                     l1057 017E  
                   l1049 016A                     l1161 025D                     l1137 0233  
                   l1129 022D                     l1235 00DD                     l1227 00BE  
                   l1219 00AC                     l1059 0182                     l1067 019F  
                   l1251 0083                     l1171 026F                     l1163 025E  
                   l1139 0234                     l1091 020D                     l1083 01F9  
                   l1229 00CF                     l1237 00E3                     l1069 01A4  
                   l1245 001F                     l1261 011B                     l1253 00F2  
                   l1165 0262                     l1093 020E                     l1085 0200  
                   l1239 00E8                     l1247 0079                     l1271 0147  
                   l1263 0121                     l1255 0100                     l1167 0266  
                   l1095 020F                     l1087 0201                     l1249 007E  
                   l1265 012E                     l1257 0108                     l1169 0268  
                   l1097 0210                     l1089 020A                     l1281 01CB  
                   l1273 01AE                     l1267 0134                     l1259 0110  
                   l1099 0211                     l1283 01D4                     l1275 01B3  
                   l1269 0141                     l1285 01D9                     l1277 01B7  
                   l1279 01C2                     ?_isr 0070                     STR_1 0277  
                   _RBIF 0058                     _RCIF 0065                     _TXIF 0064  
                   _WPUB 0095                     _Text 00F2                     _conv 0023  
                   _main 01AE                     _full 0025                     _tens 0031  
                   btemp 007E                     start 000C        ___bmul@multiplier 0075  
                  ??_isr 0070                    ?_Text 0070                    ?_main 0070  
        __end_of___awdiv 00F2          __end_of___awmod 01AE                    _ANSEL 0188  
        ___awdiv@divisor 0072                    i1l108 0255          ___awdiv@counter 0033  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u60_20 024C                    u60_21 024B  
                  _TRISA 0085                    _TRISD 0088                    u58_20 023A  
                  u58_21 0239                    u59_20 0240                    u59_21 023F  
                  _TXREG 0019                    _count 0029                    _valor 0032  
                  _setup 01F9                    _units 0030                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_Text 0155             __end_of_main 01F9                   ??_Text 003A  
                 ??_main 003D         ___awdiv@dividend 0074                   ?_setup 0070  
                 _ANSELH 0189                   i1l1181 0248                   i1l1183 024C  
                 i1l1175 0236                   i1l1185 0254                   i1l1177 023A  
                 i1l1179 0240                   _SPBRGH 009A                   ___bmul 025C  
       __end_of_division 0089                ??___awdiv 0076                ??___awmod 0076  
       ___awdiv@quotient 0035          ___awmod@divisor 0072                   _select 0027  
        ___awmod@counter 0077                   saved_w 007E  __end_of__initialization 001A  
    ___bmul@multiplicand 0072           __pcstackCOMMON 0070            __end_of_setup 0236  
          division@valor 0079           _OPTION_REGbits 0081                  ??_setup 0072  
             __pbssBANK0 0020               __pmaintext 01AE                  ?___bmul 0072  
             __pintentry 0004               __stringtab 0271                ?_division 0070  
        __size_of___bmul 0015                  ___awdiv 0089                  ___awmod 0155  
                __ptext1 01F9                  __ptext2 025C                  __ptext3 00F2  
                __ptext4 001E                  __ptext5 0155                  __ptext6 0089  
                __ptext7 0236             __size_of_isr 0026         ___awmod@dividend 0074  
                _residuo 007A                  clrloop0 027B     end_of_initialization 001A  
             ??_division 0037                _RCSTAbits 0018                _PORTBbits 0006  
              _TRISBbits 0086                _TXSTAbits 0098           __end_of___bmul 0271  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 025C  
               ??___bmul 0073              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0033        __size_of_division 006B                 ?___awdiv 0072  
               ?___awmod 0072                __pstrings 0271           __size_of_setup 003D  
      interrupt_function 0004                 _IOCBbits 0096                clear_ram0 027A  
               _PIE1bits 008C                 _PIR1bits 000C              __stringbase 0276  
       __size_of___awdiv 0069         __size_of___awmod 0059       __end_of__stringtab 0277  
               _division 001E            __size_of_Text 0063            __size_of_main 004B  
               _hundreds 007B               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0271               _OSCCONbits 008F                 stringdir 0271  
               stringtab 0271  
