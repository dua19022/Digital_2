

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Aug 13 12:48:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	functab,global,class=ENTRY,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	strings
   227  0300                     __pstrings:
   228  0300                     stringtab:
   229  0300                     __stringtab:
   230  0300                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0300                     stringdir:
   234  0300  3003               	movlw	high stringdir
   235  0301  008A               	movwf	10
   236  0302  0804               	movf	4,w
   237  0303  0A84               	incf	4,f
   238  0304  0782               	addwf	2,f
   239  0305                     __stringbase:
   240  0305  3400               	retlw	0
   241  0306                     __end_of__stringtab:
   242  0306                     _dpowers:
   243  0306  3401               	retlw	1
   244  0307  3400               	retlw	0
   245  0308  340A               	retlw	10
   246  0309  3400               	retlw	0
   247  030A  3464               	retlw	100
   248  030B  3400               	retlw	0
   249  030C  34E8               	retlw	232
   250  030D  3403               	retlw	3
   251  030E  3410               	retlw	16
   252  030F  3427               	retlw	39
   253  0310                     __end_of_dpowers:
   254  001A                     _RCREG	set	26
   255  0019                     _TXREG	set	25
   256  000C                     _PIR1bits	set	12
   257  0018                     _RCSTAbits	set	24
   258  0009                     _PORTE	set	9
   259  0007                     _PORTC	set	7
   260  0006                     _PORTB	set	6
   261  0005                     _PORTA	set	5
   262  0008                     _PORTD	set	8
   263  000B                     _INTCONbits	set	11
   264  0006                     _PORTBbits	set	6
   265  0064                     _TXIF	set	100
   266  0065                     _RCIF	set	101
   267  0058                     _RBIF	set	88
   268  008C                     _PIE1bits	set	140
   269  009A                     _SPBRGH	set	154
   270  0099                     _SPBRG	set	153
   271  0098                     _TXSTAbits	set	152
   272  0096                     _IOCBbits	set	150
   273  0095                     _WPUB	set	149
   274  0081                     _OPTION_REGbits	set	129
   275  008F                     _OSCCONbits	set	143
   276  0088                     _TRISD	set	136
   277  0086                     _TRISBbits	set	134
   278  0085                     _TRISA	set	133
   279  0187                     _BAUDCTLbits	set	391
   280  0189                     _ANSELH	set	393
   281  0188                     _ANSEL	set	392
   282  0310                     STR_3:
   283  0310  3449               	retlw	73	;'I'
   284  0311  346E               	retlw	110	;'n'
   285  0312  3467               	retlw	103	;'g'
   286  0313  3472               	retlw	114	;'r'
   287  0314  3465               	retlw	101	;'e'
   288  0315  3473               	retlw	115	;'s'
   289  0316  3461               	retlw	97	;'a'
   290  0317  3472               	retlw	114	;'r'
   291  0318  3420               	retlw	32	;' '
   292  0319  3443               	retlw	67	;'C'
   293  031A  3465               	retlw	101	;'e'
   294  031B  346E               	retlw	110	;'n'
   295  031C  3474               	retlw	116	;'t'
   296  031D  3465               	retlw	101	;'e'
   297  031E  346E               	retlw	110	;'n'
   298  031F  3461               	retlw	97	;'a'
   299  0320  343A               	retlw	58	;':'
   300  0321  3420               	retlw	32	;' '
   301  0322  3452               	retlw	82	;'R'
   302  0323  3461               	retlw	97	;'a'
   303  0324  346E               	retlw	110	;'n'
   304  0325  3467               	retlw	103	;'g'
   305  0326  346F               	retlw	111	;'o'
   306  0327  3428               	retlw	40	;'('
   307  0328  3430               	retlw	48	;'0'
   308  0329  342D               	retlw	45	;'-'
   309  032A  3432               	retlw	50	;'2'
   310  032B  3429               	retlw	41	;')'
   311  032C  340D               	retlw	13
   312  032D  3400               	retlw	0
   313  032E                     STR_6:
   314  032E  3445               	retlw	69	;'E'
   315  032F  346C               	retlw	108	;'l'
   316  0330  3420               	retlw	32	;' '
   317  0331  346E               	retlw	110	;'n'
   318  0332  3475               	retlw	117	;'u'
   319  0333  346D               	retlw	109	;'m'
   320  0334  3465               	retlw	101	;'e'
   321  0335  3472               	retlw	114	;'r'
   322  0336  346F               	retlw	111	;'o'
   323  0337  3420               	retlw	32	;' '
   324  0338  3465               	retlw	101	;'e'
   325  0339  346C               	retlw	108	;'l'
   326  033A  3465               	retlw	101	;'e'
   327  033B  3467               	retlw	103	;'g'
   328  033C  3469               	retlw	105	;'i'
   329  033D  3464               	retlw	100	;'d'
   330  033E  346F               	retlw	111	;'o'
   331  033F  3420               	retlw	32	;' '
   332  0340  3465               	retlw	101	;'e'
   333  0341  3473               	retlw	115	;'s'
   334  0342  343A               	retlw	58	;':'
   335  0343  3420               	retlw	32	;' '
   336  0344  3425               	retlw	37	;'%'
   337  0345  3464               	retlw	100	;'d'
   338  0346  3420               	retlw	32	;' '
   339  0347  340D               	retlw	13
   340  0348  3400               	retlw	0
   341  0349                     STR_5:
   342  0349  3449               	retlw	73	;'I'
   343  034A  346E               	retlw	110	;'n'
   344  034B  3467               	retlw	103	;'g'
   345  034C  3472               	retlw	114	;'r'
   346  034D  3465               	retlw	101	;'e'
   347  034E  3473               	retlw	115	;'s'
   348  034F  3461               	retlw	97	;'a'
   349  0350  3472               	retlw	114	;'r'
   350  0351  3420               	retlw	32	;' '
   351  0352  3455               	retlw	85	;'U'
   352  0353  346E               	retlw	110	;'n'
   353  0354  3469               	retlw	105	;'i'
   354  0355  3464               	retlw	100	;'d'
   355  0356  3461               	retlw	97	;'a'
   356  0357  3464               	retlw	100	;'d'
   357  0358  3465               	retlw	101	;'e'
   358  0359  3473               	retlw	115	;'s'
   359  035A  343A               	retlw	58	;':'
   360  035B  3420               	retlw	32	;' '
   361  035C  340D               	retlw	13
   362  035D  3400               	retlw	0
   363  035E                     STR_1:
   364  035E  3456               	retlw	86	;'V'
   365  035F  3461               	retlw	97	;'a'
   366  0360  346C               	retlw	108	;'l'
   367  0361  346F               	retlw	111	;'o'
   368  0362  3472               	retlw	114	;'r'
   369  0363  3420               	retlw	32	;' '
   370  0364  3464               	retlw	100	;'d'
   371  0365  3465               	retlw	101	;'e'
   372  0366  346C               	retlw	108	;'l'
   373  0367  3420               	retlw	32	;' '
   374  0368  3463               	retlw	99	;'c'
   375  0369  346F               	retlw	111	;'o'
   376  036A  346E               	retlw	110	;'n'
   377  036B  3474               	retlw	116	;'t'
   378  036C  3461               	retlw	97	;'a'
   379  036D  3464               	retlw	100	;'d'
   380  036E  346F               	retlw	111	;'o'
   381  036F  3472               	retlw	114	;'r'
   382  0370  343A               	retlw	58	;':'
   383  0371  340D               	retlw	13
   384  0372  3400               	retlw	0
   385  0373                     STR_4:
   386  0373  3449               	retlw	73	;'I'
   387  0374  346E               	retlw	110	;'n'
   388  0375  3467               	retlw	103	;'g'
   389  0376  3472               	retlw	114	;'r'
   390  0377  3465               	retlw	101	;'e'
   391  0378  3473               	retlw	115	;'s'
   392  0379  3461               	retlw	97	;'a'
   393  037A  3472               	retlw	114	;'r'
   394  037B  3420               	retlw	32	;' '
   395  037C  3444               	retlw	68	;'D'
   396  037D  3465               	retlw	101	;'e'
   397  037E  3463               	retlw	99	;'c'
   398  037F  3465               	retlw	101	;'e'
   399  0380  346E               	retlw	110	;'n'
   400  0381  3461               	retlw	97	;'a'
   401  0382  3473               	retlw	115	;'s'
   402  0383  343A               	retlw	58	;':'
   403  0384  3420               	retlw	32	;' '
   404  0385  340D               	retlw	13
   405  0386  3400               	retlw	0
   406  0387                     STR_7:
   407  0387  3425               	retlw	37	;'%'
   408  0388  3464               	retlw	100	;'d'
   409  0389  3400               	retlw	0
   410  0385                     
   411                           	psect	cinit
   412  000F                     start_initialization:	
   413                           ; #config settings
   414                           
   415  000F                     __initialization:
   416                           
   417                           ; Clear objects allocated to COMMON
   418  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   419  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   420                           
   421                           ; Clear objects allocated to BANK0
   422  0011  1283               	bcf	3,5	;RP0=0, select bank0
   423  0012  1303               	bcf	3,6	;RP1=0, select bank0
   424  0013  01E9               	clrf	__pbssBANK0& (0+127)
   425  0014  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   426  0015  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   427  0016  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   428                           
   429                           ; Clear objects allocated to BANK1
   430  0017  1683               	bsf	3,5	;RP0=1, select bank1
   431  0018  1303               	bcf	3,6	;RP1=0, select bank1
   432  0019  01A0               	clrf	__pbssBANK1& (0+127)
   433  001A  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   434  001B  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   435  001C  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   436  001D  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   437  001E  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   438  001F  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   439  0020  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   440  0021  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   441  0022  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   442  0023                     end_of_initialization:	
   443                           ;End of C runtime variable initialization code
   444                           
   445  0023                     __end_of__initialization:
   446  0023  0183               	clrf	3
   447  0024  120A  118A  2EE9   	ljmp	_main	;jump to C main() function
   448                           
   449                           	psect	bssCOMMON
   450  007A                     __pbssCOMMON:
   451  007A                     _dec:
   452  007A                     	ds	1
   453  007B                     _residuo:
   454  007B                     	ds	1
   455                           
   456                           	psect	bssBANK0
   457  0069                     __pbssBANK0:
   458  0069                     _cen:
   459  0069                     	ds	1
   460  006A                     _units:
   461  006A                     	ds	1
   462  006B                     _tens:
   463  006B                     	ds	1
   464  006C                     _hundreds:
   465  006C                     	ds	1
   466                           
   467                           	psect	bssBANK1
   468  00A0                     __pbssBANK1:
   469  00A0                     _full:
   470  00A0                     	ds	2
   471  00A2                     _select:
   472  00A2                     	ds	2
   473  00A4                     _count:
   474  00A4                     	ds	2
   475  00A6                     _con:
   476  00A6                     	ds	1
   477  00A7                     _var:
   478  00A7                     	ds	1
   479  00A8                     _uni:
   480  00A8                     	ds	1
   481  00A9                     _valor:
   482  00A9                     	ds	1
   483                           
   484                           	psect	cstackBANK1
   485  00AA                     __pcstackBANK1:
   486  00AA                     ??_Text:
   487                           
   488                           ; 1 bytes @ 0x0
   489  00AA                     	ds	5
   490                           
   491                           	psect	cstackCOMMON
   492  0070                     __pcstackCOMMON:
   493  0070                     ?_isdigit:
   494  0070                     ?_setup:	
   495                           ; 1 bit 
   496                           
   497  0070                     ?_Text:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_division:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_isr:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ??_isr:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512                           
   513                           ; 1 bytes @ 0x0
   514  0070                     	ds	2
   515  0072                     ??_setup:
   516  0072                     ?_strcat:	
   517                           ; 1 bytes @ 0x2
   518                           
   519  0072                     ??_isdigit:	
   520                           ; 1 bytes @ 0x2
   521                           
   522  0072                     ?_putch:	
   523                           ; 1 bytes @ 0x2
   524                           
   525  0072                     ?___wmul:	
   526                           ; 1 bytes @ 0x2
   527                           
   528  0072                     ?___awdiv:	
   529                           ; 2 bytes @ 0x2
   530                           
   531  0072                     ?___awmod:	
   532                           ; 2 bytes @ 0x2
   533                           
   534  0072                     ?___lwdiv:	
   535                           ; 2 bytes @ 0x2
   536                           
   537  0072                     putch@data:	
   538                           ; 2 bytes @ 0x2
   539                           
   540  0072                     _isdigit$934:	
   541                           ; 1 bytes @ 0x2
   542                           
   543  0072                     strcat@from:	
   544                           ; 1 bytes @ 0x2
   545                           
   546  0072                     ___wmul@multiplier:	
   547                           ; 1 bytes @ 0x2
   548                           
   549  0072                     ___awdiv@divisor:	
   550                           ; 2 bytes @ 0x2
   551                           
   552  0072                     ___awmod@divisor:	
   553                           ; 2 bytes @ 0x2
   554                           
   555  0072                     ___lwdiv@divisor:	
   556                           ; 2 bytes @ 0x2
   557                           
   558                           
   559                           ; 2 bytes @ 0x2
   560  0072                     	ds	1
   561  0073                     ??_strcat:
   562  0073                     ??_putch:	
   563                           ; 1 bytes @ 0x3
   564                           
   565  0073                     isdigit@c:	
   566                           ; 1 bytes @ 0x3
   567                           
   568                           
   569                           ; 1 bytes @ 0x3
   570  0073                     	ds	1
   571  0074                     strcat@to:
   572  0074                     ___wmul@multiplicand:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0074                     ___awdiv@dividend:	
   576                           ; 2 bytes @ 0x4
   577                           
   578  0074                     ___awmod@dividend:	
   579                           ; 2 bytes @ 0x4
   580                           
   581  0074                     ___lwdiv@dividend:	
   582                           ; 2 bytes @ 0x4
   583                           
   584                           
   585                           ; 2 bytes @ 0x4
   586  0074                     	ds	1
   587  0075                     strcat@cp:
   588                           
   589                           ; 1 bytes @ 0x5
   590  0075                     	ds	1
   591  0076                     ??___wmul:
   592  0076                     ??___awdiv:	
   593                           ; 1 bytes @ 0x6
   594                           
   595  0076                     ??___awmod:	
   596                           ; 1 bytes @ 0x6
   597                           
   598  0076                     ??___lwdiv:	
   599                           ; 1 bytes @ 0x6
   600                           
   601  0076                     ___wmul@product:	
   602                           ; 1 bytes @ 0x6
   603                           
   604                           
   605                           ; 2 bytes @ 0x6
   606  0076                     	ds	1
   607  0077                     ___awmod@counter:
   608  0077                     ___lwdiv@quotient:	
   609                           ; 1 bytes @ 0x7
   610                           
   611                           
   612                           ; 2 bytes @ 0x7
   613  0077                     	ds	1
   614  0078                     ?_atoi:
   615  0078                     ___awmod@sign:	
   616                           ; 2 bytes @ 0x8
   617                           
   618                           
   619                           ; 1 bytes @ 0x8
   620  0078                     	ds	1
   621  0079                     division@valor:
   622  0079                     ___lwdiv@counter:	
   623                           ; 1 bytes @ 0x9
   624                           
   625                           
   626                           ; 1 bytes @ 0x9
   627  0079                     	ds	1
   628  007A                     ??_main:
   629                           
   630                           	psect	cstackBANK0
   631  0020                     __pcstackBANK0:	
   632                           ; 1 bytes @ 0xA
   633                           
   634  0020                     ??_atoi:
   635  0020                     ?___lwmod:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0020                     ___awdiv@counter:	
   639                           ; 2 bytes @ 0x0
   640                           
   641  0020                     ___lwmod@divisor:	
   642                           ; 1 bytes @ 0x0
   643                           
   644                           
   645                           ; 2 bytes @ 0x0
   646  0020                     	ds	1
   647  0021                     ___awdiv@sign:
   648                           
   649                           ; 1 bytes @ 0x1
   650  0021                     	ds	1
   651  0022                     atoi@sign:
   652  0022                     ___awdiv@quotient:	
   653                           ; 1 bytes @ 0x2
   654                           
   655  0022                     ___lwmod@dividend:	
   656                           ; 2 bytes @ 0x2
   657                           
   658                           
   659                           ; 2 bytes @ 0x2
   660  0022                     	ds	1
   661  0023                     atoi@a:
   662                           
   663                           ; 2 bytes @ 0x3
   664  0023                     	ds	1
   665  0024                     ??_division:
   666  0024                     ??___lwmod:	
   667                           ; 1 bytes @ 0x4
   668                           
   669                           
   670                           ; 1 bytes @ 0x4
   671  0024                     	ds	1
   672  0025                     ___lwmod@counter:
   673  0025                     atoi@s:	
   674                           ; 1 bytes @ 0x5
   675                           
   676                           
   677                           ; 1 bytes @ 0x5
   678  0025                     	ds	1
   679  0026                     ?__doprnt:
   680  0026                     __doprnt@f:	
   681                           ; 2 bytes @ 0x6
   682                           
   683                           
   684                           ; 1 bytes @ 0x6
   685  0026                     	ds	1
   686  0027                     __doprnt@ap:
   687                           
   688                           ; 1 bytes @ 0x7
   689  0027                     	ds	1
   690  0028                     ??__doprnt:
   691                           
   692                           ; 1 bytes @ 0x8
   693  0028                     	ds	3
   694  002B                     __doprnt@flag:
   695                           
   696                           ; 1 bytes @ 0xB
   697  002B                     	ds	1
   698  002C                     __doprnt@prec:
   699                           
   700                           ; 1 bytes @ 0xC
   701  002C                     	ds	1
   702  002D                     __doprnt@val:
   703                           
   704                           ; 2 bytes @ 0xD
   705  002D                     	ds	2
   706  002F                     __doprnt@c:
   707                           
   708                           ; 1 bytes @ 0xF
   709  002F                     	ds	1
   710  0030                     __doprnt@pb:
   711                           
   712                           ; 1 bytes @ 0x10
   713  0030                     	ds	1
   714  0031                     ?_printf:
   715  0031                     ?_sprintf:	
   716                           ; 2 bytes @ 0x11
   717                           
   718  0031                     sprintf@f:	
   719                           ; 2 bytes @ 0x11
   720                           
   721                           
   722                           ; 1 bytes @ 0x11
   723  0031                     	ds	2
   724  0033                     ??_printf:
   725                           
   726                           ; 1 bytes @ 0x13
   727  0033                     	ds	1
   728  0034                     ??_sprintf:
   729                           
   730                           ; 1 bytes @ 0x14
   731  0034                     	ds	1
   732  0035                     printf@ap:
   733                           
   734                           ; 1 bytes @ 0x15
   735  0035                     	ds	1
   736  0036                     printf@f:
   737  0036                     sprintf@wh:	
   738                           ; 1 bytes @ 0x16
   739                           
   740                           
   741                           ; 1 bytes @ 0x16
   742  0036                     	ds	1
   743  0037                     sprintf@ap:
   744  0037                     printf@pb:	
   745                           ; 1 bytes @ 0x17
   746                           
   747                           
   748                           ; 2 bytes @ 0x17
   749  0037                     	ds	1
   750  0038                     sprintf@pb:
   751                           
   752                           ; 2 bytes @ 0x18
   753  0038                     	ds	2
   754  003A                     ?_concat:
   755  003A                     concat@a:	
   756                           ; 2 bytes @ 0x1A
   757                           
   758                           
   759                           ; 2 bytes @ 0x1A
   760  003A                     	ds	2
   761  003C                     concat@b:
   762                           
   763                           ; 2 bytes @ 0x1C
   764  003C                     	ds	2
   765  003E                     ??_concat:
   766                           
   767                           ; 1 bytes @ 0x1E
   768  003E                     	ds	1
   769  003F                     concat@s2:
   770                           
   771                           ; 20 bytes @ 0x1F
   772  003F                     	ds	20
   773  0053                     concat@s1:
   774                           
   775                           ; 20 bytes @ 0x33
   776  0053                     	ds	20
   777  0067                     concat@c:
   778                           
   779                           ; 2 bytes @ 0x47
   780  0067                     	ds	2
   781                           
   782                           	psect	maintext
   783  06E9                     __pmaintext:	
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 87 in file "Lab05.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : B00/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels required when called:    6
   809 ;; This function calls:
   810 ;;		_Text
   811 ;;		_setup
   812 ;; This function is called by:
   813 ;;		Startup code after reset
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _main
   819  06E9                     _main:
   820  06E9                     l2032:	
   821                           ;incstack = 0
   822                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   823                           
   824                           
   825                           ;Lab05.c: 89:     setup();
   826  06E9  120A  118A  257E  120A  118A  	fcall	_setup
   827  06EE                     l2034:
   828                           
   829                           ;Lab05.c: 93:     {;Lab05.c: 94:         PORTD = count;
   830  06EE  1683               	bsf	3,5	;RP0=1, select bank1
   831  06EF  1303               	bcf	3,6	;RP1=0, select bank1
   832  06F0  0824               	movf	_count^(0+128),w
   833  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   834  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   835  06F3  0088               	movwf	8	;volatile
   836  06F4                     l2036:
   837                           
   838                           ;Lab05.c: 95:         PORTA = select;
   839  06F4  1683               	bsf	3,5	;RP0=1, select bank1
   840  06F5  1303               	bcf	3,6	;RP1=0, select bank1
   841  06F6  0822               	movf	_select^(0+128),w
   842  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   843  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   844  06F9  0085               	movwf	5	;volatile
   845  06FA                     l2038:
   846                           
   847                           ;Lab05.c: 96:         Text();
   848  06FA  120A  118A  2030  120A  118A  	fcall	_Text
   849  06FF  2EEE               	goto	l2034
   850  0700  120A  118A  280C   	ljmp	start
   851  0703                     __end_of_main:
   852                           
   853                           	psect	text1
   854  057E                     __ptext1:	
   855 ;; *************** function _setup *****************
   856 ;; Defined at:
   857 ;;		line 105 in file "Lab05.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _setup
   887  057E                     _setup:
   888  057E                     l1618:	
   889                           ;incstack = 0
   890                           ; Regs used in _setup: [wreg+status,2]
   891                           
   892                           
   893                           ;Lab05.c: 107:     ANSEL = 0;
   894  057E  1683               	bsf	3,5	;RP0=1, select bank3
   895  057F  1703               	bsf	3,6	;RP1=1, select bank3
   896  0580  0188               	clrf	8	;volatile
   897                           
   898                           ;Lab05.c: 108:     ANSELH = 0;
   899  0581  0189               	clrf	9	;volatile
   900                           
   901                           ;Lab05.c: 111:     TRISA = 0;
   902  0582  1683               	bsf	3,5	;RP0=1, select bank1
   903  0583  1303               	bcf	3,6	;RP1=0, select bank1
   904  0584  0185               	clrf	5	;volatile
   905  0585                     l1620:
   906                           
   907                           ;Lab05.c: 114:     TRISBbits.TRISB0 = 1;
   908  0585  1406               	bsf	6,0	;volatile
   909  0586                     l1622:
   910                           
   911                           ;Lab05.c: 115:     TRISBbits.TRISB1 = 1;
   912  0586  1486               	bsf	6,1	;volatile
   913                           
   914                           ;Lab05.c: 121:     TRISD = 0;
   915  0587  0188               	clrf	8	;volatile
   916                           
   917                           ;Lab05.c: 129:     PORTA = 0x00;
   918  0588  1283               	bcf	3,5	;RP0=0, select bank0
   919  0589  1303               	bcf	3,6	;RP1=0, select bank0
   920  058A  0185               	clrf	5	;volatile
   921                           
   922                           ;Lab05.c: 130:     PORTB = 0x00;
   923  058B  0186               	clrf	6	;volatile
   924                           
   925                           ;Lab05.c: 131:     PORTC = 0x00;
   926  058C  0187               	clrf	7	;volatile
   927                           
   928                           ;Lab05.c: 132:     PORTD = 0x00;
   929  058D  0188               	clrf	8	;volatile
   930                           
   931                           ;Lab05.c: 133:     PORTE = 0x00;
   932  058E  0189               	clrf	9	;volatile
   933  058F                     l1624:
   934                           
   935                           ;Lab05.c: 136:     OSCCONbits.IRCF0 = 0;
   936  058F  1683               	bsf	3,5	;RP0=1, select bank1
   937  0590  1303               	bcf	3,6	;RP1=0, select bank1
   938  0591  120F               	bcf	15,4	;volatile
   939  0592                     l1626:
   940                           
   941                           ;Lab05.c: 137:     OSCCONbits.IRCF1 = 1;
   942  0592  168F               	bsf	15,5	;volatile
   943  0593                     l1628:
   944                           
   945                           ;Lab05.c: 138:     OSCCONbits.IRCF2 = 1;
   946  0593  170F               	bsf	15,6	;volatile
   947  0594                     l1630:
   948                           
   949                           ;Lab05.c: 139:     OSCCONbits.SCS = 1;
   950  0594  140F               	bsf	15,0	;volatile
   951  0595                     l1632:
   952                           
   953                           ;Lab05.c: 142:     OPTION_REGbits.nRBPU = 0;
   954  0595  1381               	bcf	1,7	;volatile
   955  0596                     l1634:
   956                           
   957                           ;Lab05.c: 143:     WPUB = 0b00000011;
   958  0596  3003               	movlw	3
   959  0597  0095               	movwf	21	;volatile
   960  0598                     l1636:
   961                           
   962                           ;Lab05.c: 144:     IOCBbits.IOCB0 = 1;
   963  0598  1416               	bsf	22,0	;volatile
   964  0599                     l1638:
   965                           
   966                           ;Lab05.c: 145:     IOCBbits.IOCB1 = 1;
   967  0599  1496               	bsf	22,1	;volatile
   968  059A                     l1640:
   969                           
   970                           ;Lab05.c: 148:     TXSTAbits.SYNC = 0;
   971  059A  1218               	bcf	24,4	;volatile
   972  059B                     l1642:
   973                           
   974                           ;Lab05.c: 149:     TXSTAbits.BRGH = 1;
   975  059B  1518               	bsf	24,2	;volatile
   976  059C                     l1644:
   977                           
   978                           ;Lab05.c: 150:     BAUDCTLbits.BRG16 = 0;
   979  059C  1683               	bsf	3,5	;RP0=1, select bank3
   980  059D  1703               	bsf	3,6	;RP1=1, select bank3
   981  059E  1187               	bcf	7,3	;volatile
   982  059F                     l1646:
   983                           
   984                           ;Lab05.c: 152:     SPBRG = 25;
   985  059F  3019               	movlw	25
   986  05A0  1683               	bsf	3,5	;RP0=1, select bank1
   987  05A1  1303               	bcf	3,6	;RP1=0, select bank1
   988  05A2  0099               	movwf	25	;volatile
   989  05A3                     l1648:
   990                           
   991                           ;Lab05.c: 153:     SPBRGH = 1;
   992  05A3  3001               	movlw	1
   993  05A4  009A               	movwf	26	;volatile
   994  05A5                     l1650:
   995                           
   996                           ;Lab05.c: 155:     RCSTAbits.SPEN = 1;
   997  05A5  1283               	bcf	3,5	;RP0=0, select bank0
   998  05A6  1303               	bcf	3,6	;RP1=0, select bank0
   999  05A7  1798               	bsf	24,7	;volatile
  1000  05A8                     l1652:
  1001                           
  1002                           ;Lab05.c: 156:     RCSTAbits.RX9 = 0;
  1003  05A8  1318               	bcf	24,6	;volatile
  1004  05A9                     l1654:
  1005                           
  1006                           ;Lab05.c: 157:     RCSTAbits.CREN = 1;
  1007  05A9  1618               	bsf	24,4	;volatile
  1008  05AA                     l1656:
  1009                           
  1010                           ;Lab05.c: 158:     TXSTAbits.TX9 = 0;
  1011  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  1012  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  1013  05AC  1318               	bcf	24,6	;volatile
  1014  05AD                     l1658:
  1015                           
  1016                           ;Lab05.c: 160:     TXSTAbits.TXEN = 1;
  1017  05AD  1698               	bsf	24,5	;volatile
  1018  05AE                     l1660:
  1019                           
  1020                           ;Lab05.c: 162:     PIR1bits.RCIF = 0;
  1021  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1022  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1023  05B0  128C               	bcf	12,5	;volatile
  1024  05B1                     l1662:
  1025                           
  1026                           ;Lab05.c: 163:     PIR1bits.TXIF = 0;
  1027  05B1  120C               	bcf	12,4	;volatile
  1028  05B2                     l1664:
  1029                           
  1030                           ;Lab05.c: 166:     INTCONbits.GIE = 1;
  1031  05B2  178B               	bsf	11,7	;volatile
  1032  05B3                     l1666:
  1033                           
  1034                           ;Lab05.c: 167:     INTCONbits.PEIE = 1;
  1035  05B3  170B               	bsf	11,6	;volatile
  1036  05B4                     l1668:
  1037                           
  1038                           ;Lab05.c: 168:     PIE1bits.RCIE = 0;
  1039  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  1040  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  1041  05B6  128C               	bcf	12,5	;volatile
  1042  05B7                     l1670:
  1043                           
  1044                           ;Lab05.c: 169:     PIE1bits.TXIE = 0;
  1045  05B7  120C               	bcf	12,4	;volatile
  1046  05B8                     l1672:
  1047                           
  1048                           ;Lab05.c: 170:     INTCONbits.RBIF = 1;
  1049  05B8  140B               	bsf	11,0	;volatile
  1050  05B9                     l1674:
  1051                           
  1052                           ;Lab05.c: 171:     INTCONbits.RBIE = 1;
  1053  05B9  158B               	bsf	11,3	;volatile
  1054  05BA                     l119:
  1055  05BA  0008               	return
  1056  05BB                     __end_of_setup:
  1057                           
  1058                           	psect	text2
  1059  0030                     __ptext2:	
  1060 ;; *************** function _Text *****************
  1061 ;; Defined at:
  1062 ;;		line 175 in file "Lab05.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0
  1078 ;;      Temps:          0       0       5       0       0
  1079 ;;      Totals:         0       0       5       0       0
  1080 ;;Total ram usage:        5 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    5
  1083 ;; This function calls:
  1084 ;;		_concat
  1085 ;;		_division
  1086 ;;		_printf
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           
  1093                           ;psect for function _Text
  1094  0030                     _Text:
  1095  0030                     l1980:	
  1096                           ;incstack = 0
  1097                           ; Regs used in _Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1098                           
  1099                           
  1100                           ;Lab05.c: 176:      _delay((unsigned long)((250)*(4000000/4000.0)));
  1101  0030  3002               	movlw	2
  1102  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0033  00AC               	movwf	(??_Text^(0+128)+2)
  1105  0034  3045               	movlw	69
  1106  0035  00AB               	movwf	(??_Text^(0+128)+1)
  1107  0036  30A9               	movlw	169
  1108  0037  00AA               	movwf	??_Text^(0+128)
  1109  0038                     u1807:
  1110  0038  0BAA               	decfsz	??_Text^(0+128),f
  1111  0039  2838               	goto	u1807
  1112  003A  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1113  003B  2838               	goto	u1807
  1114  003C  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1115  003D  2838               	goto	u1807
  1116  003E                     l1982:
  1117                           
  1118                           ;Lab05.c: 177:      division(count);
  1119  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1120  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1121  0040  0824               	movf	_count^(0+128),w
  1122  0041  120A  118A  240D  120A  118A  	fcall	_division
  1123  0046                     l1984:
  1124                           
  1125                           ;Lab05.c: 178:     printf("Valor del contador:\r");
  1126  0046  3059               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1127  0047  120A  118A  26CE  120A  118A  	fcall	_printf
  1128  004C                     l1986:
  1129                           
  1130                           ;Lab05.c: 179:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1131  004C  3002               	movlw	2
  1132  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1133  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1134  004F  00AC               	movwf	(??_Text^(0+128)+2)
  1135  0050  3045               	movlw	69
  1136  0051  00AB               	movwf	(??_Text^(0+128)+1)
  1137  0052  30A9               	movlw	169
  1138  0053  00AA               	movwf	??_Text^(0+128)
  1139  0054                     u1817:
  1140  0054  0BAA               	decfsz	??_Text^(0+128),f
  1141  0055  2854               	goto	u1817
  1142  0056  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1143  0057  2854               	goto	u1817
  1144  0058  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1145  0059  2854               	goto	u1817
  1146  005A                     l1988:
  1147                           
  1148                           ;Lab05.c: 180:     TXREG = hundreds;
  1149  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1150  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1151  005C  086C               	movf	_hundreds,w
  1152  005D  0099               	movwf	25	;volatile
  1153  005E                     l1990:
  1154                           
  1155                           ;Lab05.c: 181:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1156  005E  3002               	movlw	2
  1157  005F  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0060  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0061  00AC               	movwf	(??_Text^(0+128)+2)
  1160  0062  3045               	movlw	69
  1161  0063  00AB               	movwf	(??_Text^(0+128)+1)
  1162  0064  30A9               	movlw	169
  1163  0065  00AA               	movwf	??_Text^(0+128)
  1164  0066                     u1827:
  1165  0066  0BAA               	decfsz	??_Text^(0+128),f
  1166  0067  2866               	goto	u1827
  1167  0068  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1168  0069  2866               	goto	u1827
  1169  006A  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1170  006B  2866               	goto	u1827
  1171  006C                     l1992:
  1172                           
  1173                           ;Lab05.c: 182:     TXREG = tens;
  1174  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1175  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1176  006E  086B               	movf	_tens,w
  1177  006F  0099               	movwf	25	;volatile
  1178  0070                     l1994:
  1179                           
  1180                           ;Lab05.c: 183:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1181  0070  3002               	movlw	2
  1182  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0073  00AC               	movwf	(??_Text^(0+128)+2)
  1185  0074  3045               	movlw	69
  1186  0075  00AB               	movwf	(??_Text^(0+128)+1)
  1187  0076  30A9               	movlw	169
  1188  0077  00AA               	movwf	??_Text^(0+128)
  1189  0078                     u1837:
  1190  0078  0BAA               	decfsz	??_Text^(0+128),f
  1191  0079  2878               	goto	u1837
  1192  007A  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1193  007B  2878               	goto	u1837
  1194  007C  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1195  007D  2878               	goto	u1837
  1196  007E                     l1996:
  1197                           
  1198                           ;Lab05.c: 184:     TXREG = units;
  1199  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1200  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0080  086A               	movf	_units,w
  1202  0081  0099               	movwf	25	;volatile
  1203  0082                     l1998:
  1204                           
  1205                           ;Lab05.c: 185:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1206  0082  3002               	movlw	2
  1207  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1208  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1209  0085  00AC               	movwf	(??_Text^(0+128)+2)
  1210  0086  3045               	movlw	69
  1211  0087  00AB               	movwf	(??_Text^(0+128)+1)
  1212  0088  30A9               	movlw	169
  1213  0089  00AA               	movwf	??_Text^(0+128)
  1214  008A                     u1847:
  1215  008A  0BAA               	decfsz	??_Text^(0+128),f
  1216  008B  288A               	goto	u1847
  1217  008C  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1218  008D  288A               	goto	u1847
  1219  008E  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1220  008F  288A               	goto	u1847
  1221  0090                     l2000:
  1222                           
  1223                           ;Lab05.c: 186:     printf("\r");
  1224  0090  3080               	movlw	(low (((STR_4+18)-__stringbase)| (0+32768)))& (0+255)
  1225  0091  120A  118A  26CE  120A  118A  	fcall	_printf
  1226  0096                     l2002:
  1227                           
  1228                           ;Lab05.c: 189:      printf("Ingresar Centena: Rango(0-2)\r");
  1229  0096  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1230  0097  120A  118A  26CE  120A  118A  	fcall	_printf
  1231  009C                     l123:
  1232  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1233  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1234  009E  1E8C               	btfss	12,5	;volatile
  1235  009F  28A1               	goto	u1711
  1236  00A0  28A2               	goto	u1710
  1237  00A1                     u1711:
  1238  00A1  289C               	goto	l123
  1239  00A2                     u1710:
  1240  00A2                     l2004:
  1241                           
  1242                           ;Lab05.c: 192:         cen = RCREG -48;
  1243  00A2  081A               	movf	26,w	;volatile
  1244  00A3  3ED0               	addlw	208
  1245  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1246  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1247  00A6  00AA               	movwf	??_Text^(0+128)
  1248  00A7  082A               	movf	??_Text^(0+128),w
  1249  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1250  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1251  00AA  00E9               	movwf	_cen
  1252  00AB                     l2006:	
  1253                           ;Lab05.c: 194:        while(RCREG > '2'){
  1254                           
  1255                           
  1256                           ;Lab05.c: 194:        while(RCREG > '2'){
  1257  00AB  3033               	movlw	51
  1258  00AC  021A               	subwf	26,w	;volatile
  1259  00AD  1803               	skipnc
  1260  00AE  28B0               	goto	u1721
  1261  00AF  28B1               	goto	u1720
  1262  00B0                     u1721:
  1263  00B0  289C               	goto	l123
  1264  00B1                     u1720:
  1265  00B1                     l2008:
  1266                           
  1267                           ;Lab05.c: 198:     printf("Ingresar Decenas: \r");
  1268  00B1  306E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1269  00B2  120A  118A  26CE  120A  118A  	fcall	_printf
  1270  00B7                     l130:
  1271  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1272  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1273  00B9  1E8C               	btfss	12,5	;volatile
  1274  00BA  28BC               	goto	u1731
  1275  00BB  28BD               	goto	u1730
  1276  00BC                     u1731:
  1277  00BC  28B7               	goto	l130
  1278  00BD                     u1730:
  1279  00BD                     l2010:
  1280                           
  1281                           ;Lab05.c: 201:          dec = RCREG -48;
  1282  00BD  081A               	movf	26,w	;volatile
  1283  00BE  3ED0               	addlw	208
  1284  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1285  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1286  00C1  00AA               	movwf	??_Text^(0+128)
  1287  00C2  082A               	movf	??_Text^(0+128),w
  1288  00C3  00FA               	movwf	_dec
  1289                           
  1290                           ;Lab05.c: 203:         if(cen == 2){
  1291  00C4  3002               	movlw	2
  1292  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1293  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1294  00C7  0669               	xorwf	_cen,w
  1295  00C8  1D03               	btfss	3,2
  1296  00C9  28CB               	goto	u1741
  1297  00CA  28CC               	goto	u1740
  1298  00CB                     u1741:
  1299  00CB  28D2               	goto	l2016
  1300  00CC                     u1740:
  1301  00CC                     l2014:
  1302                           
  1303                           ;Lab05.c: 204:            while(RCREG > '5'){
  1304  00CC  3036               	movlw	54
  1305  00CD  021A               	subwf	26,w	;volatile
  1306  00CE  1803               	skipnc
  1307  00CF  28D1               	goto	u1751
  1308  00D0  28D2               	goto	u1750
  1309  00D1                     u1751:
  1310  00D1  28B7               	goto	l130
  1311  00D2                     u1750:
  1312  00D2                     l2016:
  1313                           
  1314                           ;Lab05.c: 209:     printf("Ingresar Unidades: \r");
  1315  00D2  3044               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1316  00D3  120A  118A  26CE  120A  118A  	fcall	_printf
  1317  00D8                     l138:
  1318  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1319  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1320  00DA  1E8C               	btfss	12,5	;volatile
  1321  00DB  28DD               	goto	u1761
  1322  00DC  28DE               	goto	u1760
  1323  00DD                     u1761:
  1324  00DD  28D8               	goto	l138
  1325  00DE                     u1760:
  1326  00DE                     l2018:
  1327                           
  1328                           ;Lab05.c: 212:         uni = RCREG - 48;
  1329  00DE  081A               	movf	26,w	;volatile
  1330  00DF  3ED0               	addlw	208
  1331  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1332  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1333  00E2  00AA               	movwf	??_Text^(0+128)
  1334  00E3  082A               	movf	??_Text^(0+128),w
  1335  00E4  00A8               	movwf	_uni^(0+128)
  1336                           
  1337                           ;Lab05.c: 214:        if(cen == 2 && dec == 5){
  1338  00E5  3002               	movlw	2
  1339  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1340  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1341  00E8  0669               	xorwf	_cen,w
  1342  00E9  1D03               	btfss	3,2
  1343  00EA  28EC               	goto	u1771
  1344  00EB  28ED               	goto	u1770
  1345  00EC                     u1771:
  1346  00EC  28F9               	goto	l2026
  1347  00ED                     u1770:
  1348  00ED                     l2020:
  1349  00ED  3005               	movlw	5
  1350  00EE  067A               	xorwf	_dec,w
  1351  00EF  1D03               	btfss	3,2
  1352  00F0  28F2               	goto	u1781
  1353  00F1  28F3               	goto	u1780
  1354  00F2                     u1781:
  1355  00F2  28F9               	goto	l2026
  1356  00F3                     u1780:
  1357  00F3                     l2024:
  1358                           
  1359                           ;Lab05.c: 215:            while(RCREG > '5'){
  1360  00F3  3036               	movlw	54
  1361  00F4  021A               	subwf	26,w	;volatile
  1362  00F5  1803               	skipnc
  1363  00F6  28F8               	goto	u1791
  1364  00F7  28F9               	goto	u1790
  1365  00F8                     u1791:
  1366  00F8  28D8               	goto	l138
  1367  00F9                     u1790:
  1368  00F9                     l2026:
  1369                           
  1370                           ;Lab05.c: 219:       con = concat(cen, dec);
  1371  00F9  0869               	movf	_cen,w
  1372  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1373  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1374  00FC  00AA               	movwf	??_Text^(0+128)
  1375  00FD  01AB               	clrf	(??_Text^(0+128)+1)
  1376  00FE  082A               	movf	??_Text^(0+128),w
  1377  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0101  00BA               	movwf	concat@a
  1380  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0104  082B               	movf	(??_Text+1)^(0+128),w
  1383  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0107  00BB               	movwf	concat@a+1
  1386  0108  087A               	movf	_dec,w
  1387  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1388  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1389  010B  00AC               	movwf	(??_Text+2)^(0+128)
  1390  010C  01AD               	clrf	((??_Text+2)^(0+128)+1)
  1391  010D  082C               	movf	(??_Text+2)^(0+128),w
  1392  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1393  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0110  00BC               	movwf	concat@b
  1395  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1397  0113  082D               	movf	(??_Text+3)^(0+128),w
  1398  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0116  00BD               	movwf	concat@b+1
  1401  0117  120A  118A  25BB  120A  118A  	fcall	_concat
  1402  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1403  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1404  011E  083A               	movf	?_concat,w
  1405  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1407  0121  00AE               	movwf	(??_Text+4)^(0+128)
  1408  0122  082E               	movf	(??_Text+4)^(0+128),w
  1409  0123  00A6               	movwf	_con^(0+128)
  1410                           
  1411                           ;Lab05.c: 220:       full = concat(con, uni);
  1412  0124  0826               	movf	_con^(0+128),w
  1413  0125  00AA               	movwf	??_Text^(0+128)
  1414  0126  01AB               	clrf	(??_Text^(0+128)+1)
  1415  0127  082A               	movf	??_Text^(0+128),w
  1416  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1418  012A  00BA               	movwf	concat@a
  1419  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1420  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1421  012D  082B               	movf	(??_Text+1)^(0+128),w
  1422  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1423  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0130  00BB               	movwf	concat@a+1
  1425  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1427  0133  0828               	movf	_uni^(0+128),w
  1428  0134  00AC               	movwf	(??_Text+2)^(0+128)
  1429  0135  01AD               	clrf	((??_Text+2)^(0+128)+1)
  1430  0136  082C               	movf	(??_Text+2)^(0+128),w
  1431  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0139  00BC               	movwf	concat@b
  1434  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1435  013B  1303               	bcf	3,6	;RP1=0, select bank1
  1436  013C  082D               	movf	(??_Text+3)^(0+128),w
  1437  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1438  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1439  013F  00BD               	movwf	concat@b+1
  1440  0140  120A  118A  25BB  120A  118A  	fcall	_concat
  1441  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0147  083B               	movf	?_concat+1,w
  1444  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1445  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1446  014A  00A1               	movwf	(_full+1)^(0+128)
  1447  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1448  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1449  014D  083A               	movf	?_concat,w
  1450  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1451  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0150  00A0               	movwf	_full^(0+128)
  1453  0151                     l2028:
  1454                           
  1455                           ;Lab05.c: 221:       _delay((unsigned long)((250)*(4000000/4000.0)));
  1456  0151  3002               	movlw	2
  1457  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1458  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1459  0154  00AC               	movwf	(??_Text^(0+128)+2)
  1460  0155  3045               	movlw	69
  1461  0156  00AB               	movwf	(??_Text^(0+128)+1)
  1462  0157  30A9               	movlw	169
  1463  0158  00AA               	movwf	??_Text^(0+128)
  1464  0159                     u1857:
  1465  0159  0BAA               	decfsz	??_Text^(0+128),f
  1466  015A  2959               	goto	u1857
  1467  015B  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1468  015C  2959               	goto	u1857
  1469  015D  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1470  015E  2959               	goto	u1857
  1471  015F                     l2030:
  1472                           
  1473                           ;Lab05.c: 222:     printf("El numero elegido es: %d \r", full);
  1474  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1476  0161  0821               	movf	(_full+1)^(0+128),w
  1477  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0164  00B2               	movwf	?_printf+1
  1480  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0167  0820               	movf	_full^(0+128),w
  1483  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1485  016A  00B1               	movwf	?_printf
  1486  016B  3029               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1487  016C  120A  118A  26CE  120A  118A  	fcall	_printf
  1488                           
  1489                           ;Lab05.c: 223:     select = full;
  1490  0171  1683               	bsf	3,5	;RP0=1, select bank1
  1491  0172  1303               	bcf	3,6	;RP1=0, select bank1
  1492  0173  0821               	movf	(_full+1)^(0+128),w
  1493  0174  00A3               	movwf	(_select+1)^(0+128)
  1494  0175  0820               	movf	_full^(0+128),w
  1495  0176  00A2               	movwf	_select^(0+128)
  1496  0177                     l145:
  1497  0177  0008               	return
  1498  0178                     __end_of_Text:
  1499                           
  1500                           	psect	text3
  1501  06CE                     __ptext3:	
  1502 ;; *************** function _printf *****************
  1503 ;; Defined at:
  1504 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  f               1    wreg     PTR const unsigned char 
  1507 ;;		 -> STR_6(27), STR_5(21), STR_4(20), STR_3(30), 
  1508 ;;		 -> STR_2(2), STR_1(21), 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  1511 ;;		 -> STR_6(27), STR_5(21), STR_4(20), STR_3(30), 
  1512 ;;		 -> STR_2(2), STR_1(21), 
  1513 ;;  pb              2   23[BANK0 ] struct __prbuf
  1514 ;;  ap              1   21[BANK0 ] PTR void [1]
  1515 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2   17[BANK0 ] int 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       2       0       0       0
  1526 ;;      Locals:         0       4       0       0       0
  1527 ;;      Temps:          0       2       0       0       0
  1528 ;;      Totals:         0       8       0       0       0
  1529 ;;Total ram usage:        8 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    3
  1532 ;; This function calls:
  1533 ;;		__doprnt
  1534 ;; This function is called by:
  1535 ;;		_Text
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _printf
  1541  06CE                     _printf:
  1542                           
  1543                           ;incstack = 0
  1544                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1545                           ;printf@f stored from wreg
  1546  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1547  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1548  06D0  00B6               	movwf	printf@f
  1549  06D1                     l1960:
  1550  06D1  01B7               	clrf	printf@pb
  1551  06D2                     l1962:
  1552  06D2  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  1553  06D3  00B3               	movwf	??_printf
  1554  06D4  0833               	movf	??_printf,w
  1555  06D5  00B8               	movwf	low ((printf@pb| 0+1))
  1556  06D6                     l1964:
  1557  06D6  3031               	movlw	(low (?_printf| 0))& (0+255)
  1558  06D7  00B3               	movwf	??_printf
  1559  06D8  0833               	movf	??_printf,w
  1560  06D9  00B5               	movwf	printf@ap
  1561  06DA                     l1966:
  1562                           
  1563                           ;	Return value of _printf is never used
  1564  06DA  0836               	movf	printf@f,w
  1565  06DB  00B3               	movwf	??_printf
  1566  06DC  0833               	movf	??_printf,w
  1567  06DD  00A6               	movwf	__doprnt@f
  1568  06DE  3035               	movlw	(low (printf@ap| 0))& (0+255)
  1569  06DF  00B4               	movwf	??_printf+1
  1570  06E0  0834               	movf	??_printf+1,w
  1571  06E1  00A7               	movwf	__doprnt@ap
  1572  06E2  3037               	movlw	(low (printf@pb| 0))& (0+255)
  1573  06E3  120A  118A  2178  120A  118A  	fcall	__doprnt
  1574  06E8                     l720:
  1575  06E8  0008               	return
  1576  06E9                     __end_of_printf:
  1577                           
  1578                           	psect	text4
  1579  040D                     __ptext4:	
  1580 ;; *************** function _division *****************
  1581 ;; Defined at:
  1582 ;;		line 226 in file "Lab05.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  valor           1    wreg     unsigned char 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  valor           1    9[COMMON] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      unsigned char 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         1       0       0       0       0
  1598 ;;      Temps:          0       3       0       0       0
  1599 ;;      Totals:         1       3       0       0       0
  1600 ;;Total ram usage:        4 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    2
  1603 ;; This function calls:
  1604 ;;		___awdiv
  1605 ;;		___awmod
  1606 ;; This function is called by:
  1607 ;;		_Text
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _division
  1613  040D                     _division:
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1617                           ;division@valor stored from wreg
  1618  040D  00F9               	movwf	division@valor
  1619  040E                     l1952:
  1620                           
  1621                           ;Lab05.c: 227:     hundreds = valor/100;
  1622  040E  3064               	movlw	100
  1623  040F  00F2               	movwf	___awdiv@divisor
  1624  0410  3000               	movlw	0
  1625  0411  00F3               	movwf	___awdiv@divisor+1
  1626  0412  0879               	movf	division@valor,w
  1627  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0415  00A4               	movwf	??_division
  1630  0416  01A5               	clrf	??_division+1
  1631  0417  0824               	movf	??_division,w
  1632  0418  00F4               	movwf	___awdiv@dividend
  1633  0419  0825               	movf	??_division+1,w
  1634  041A  00F5               	movwf	___awdiv@dividend+1
  1635  041B  120A  118A  2478  120A  118A  	fcall	___awdiv
  1636  0420  0872               	movf	?___awdiv,w
  1637  0421  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0422  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0423  00A6               	movwf	??_division+2
  1640  0424  0826               	movf	??_division+2,w
  1641  0425  00EC               	movwf	_hundreds
  1642                           
  1643                           ;Lab05.c: 228:     residuo = valor%100;
  1644  0426  3064               	movlw	100
  1645  0427  00F2               	movwf	___awmod@divisor
  1646  0428  3000               	movlw	0
  1647  0429  00F3               	movwf	___awmod@divisor+1
  1648  042A  0879               	movf	division@valor,w
  1649  042B  00A4               	movwf	??_division
  1650  042C  01A5               	clrf	??_division+1
  1651  042D  0824               	movf	??_division,w
  1652  042E  00F4               	movwf	___awmod@dividend
  1653  042F  0825               	movf	??_division+1,w
  1654  0430  00F5               	movwf	___awmod@dividend+1
  1655  0431  120A  118A  24E1  120A  118A  	fcall	___awmod
  1656  0436  0872               	movf	?___awmod,w
  1657  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1658  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1659  0439  00A6               	movwf	??_division+2
  1660  043A  0826               	movf	??_division+2,w
  1661  043B  00FB               	movwf	_residuo
  1662                           
  1663                           ;Lab05.c: 229:     tens = residuo/10;
  1664  043C  300A               	movlw	10
  1665  043D  00F2               	movwf	___awdiv@divisor
  1666  043E  3000               	movlw	0
  1667  043F  00F3               	movwf	___awdiv@divisor+1
  1668  0440  087B               	movf	_residuo,w
  1669  0441  00A4               	movwf	??_division
  1670  0442  01A5               	clrf	??_division+1
  1671  0443  0824               	movf	??_division,w
  1672  0444  00F4               	movwf	___awdiv@dividend
  1673  0445  0825               	movf	??_division+1,w
  1674  0446  00F5               	movwf	___awdiv@dividend+1
  1675  0447  120A  118A  2478  120A  118A  	fcall	___awdiv
  1676  044C  0872               	movf	?___awdiv,w
  1677  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1678  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1679  044F  00A6               	movwf	??_division+2
  1680  0450  0826               	movf	??_division+2,w
  1681  0451  00EB               	movwf	_tens
  1682                           
  1683                           ;Lab05.c: 230:     units = residuo%10;
  1684  0452  300A               	movlw	10
  1685  0453  00F2               	movwf	___awmod@divisor
  1686  0454  3000               	movlw	0
  1687  0455  00F3               	movwf	___awmod@divisor+1
  1688  0456  087B               	movf	_residuo,w
  1689  0457  00A4               	movwf	??_division
  1690  0458  01A5               	clrf	??_division+1
  1691  0459  0824               	movf	??_division,w
  1692  045A  00F4               	movwf	___awmod@dividend
  1693  045B  0825               	movf	??_division+1,w
  1694  045C  00F5               	movwf	___awmod@dividend+1
  1695  045D  120A  118A  24E1  120A  118A  	fcall	___awmod
  1696  0462  0872               	movf	?___awmod,w
  1697  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0465  00A6               	movwf	??_division+2
  1700  0466  0826               	movf	??_division+2,w
  1701  0467  00EA               	movwf	_units
  1702  0468                     l1954:
  1703                           
  1704                           ;Lab05.c: 232:     hundreds = hundreds + 48;
  1705  0468  086C               	movf	_hundreds,w
  1706  0469  3E30               	addlw	48
  1707  046A  00A4               	movwf	??_division
  1708  046B  0824               	movf	??_division,w
  1709  046C  00EC               	movwf	_hundreds
  1710  046D                     l1956:
  1711                           
  1712                           ;Lab05.c: 233:     tens = tens + 48;
  1713  046D  086B               	movf	_tens,w
  1714  046E  3E30               	addlw	48
  1715  046F  00A4               	movwf	??_division
  1716  0470  0824               	movf	??_division,w
  1717  0471  00EB               	movwf	_tens
  1718  0472                     l1958:
  1719                           
  1720                           ;Lab05.c: 234:     units = units + 48;
  1721  0472  086A               	movf	_units,w
  1722  0473  3E30               	addlw	48
  1723  0474  00A4               	movwf	??_division
  1724  0475  0824               	movf	??_division,w
  1725  0476  00EA               	movwf	_units
  1726  0477                     l148:
  1727  0477  0008               	return
  1728  0478                     __end_of_division:
  1729                           
  1730                           	psect	text5
  1731  04E1                     __ptext5:	
  1732 ;; *************** function ___awmod *****************
  1733 ;; Defined at:
  1734 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  divisor         2    2[COMMON] int 
  1737 ;;  dividend        2    4[COMMON] int 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  sign            1    8[COMMON] unsigned char 
  1740 ;;  counter         1    7[COMMON] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2    2[COMMON] int 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         4       0       0       0       0
  1751 ;;      Locals:         2       0       0       0       0
  1752 ;;      Temps:          1       0       0       0       0
  1753 ;;      Totals:         7       0       0       0       0
  1754 ;;Total ram usage:        7 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_division
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function ___awmod
  1766  04E1                     ___awmod:
  1767  04E1                     l1552:	
  1768                           ;incstack = 0
  1769                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1770                           
  1771  04E1  01F8               	clrf	___awmod@sign
  1772  04E2                     l1554:
  1773  04E2  1FF5               	btfss	___awmod@dividend+1,7
  1774  04E3  2CE5               	goto	u1181
  1775  04E4  2CE6               	goto	u1180
  1776  04E5                     u1181:
  1777  04E5  2CED               	goto	l1560
  1778  04E6                     u1180:
  1779  04E6                     l1556:
  1780  04E6  09F4               	comf	___awmod@dividend,f
  1781  04E7  09F5               	comf	___awmod@dividend+1,f
  1782  04E8  0AF4               	incf	___awmod@dividend,f
  1783  04E9  1903               	skipnz
  1784  04EA  0AF5               	incf	___awmod@dividend+1,f
  1785  04EB                     l1558:
  1786  04EB  01F8               	clrf	___awmod@sign
  1787  04EC  0AF8               	incf	___awmod@sign,f
  1788  04ED                     l1560:
  1789  04ED  1FF3               	btfss	___awmod@divisor+1,7
  1790  04EE  2CF0               	goto	u1191
  1791  04EF  2CF1               	goto	u1190
  1792  04F0                     u1191:
  1793  04F0  2CF6               	goto	l1564
  1794  04F1                     u1190:
  1795  04F1                     l1562:
  1796  04F1  09F2               	comf	___awmod@divisor,f
  1797  04F2  09F3               	comf	___awmod@divisor+1,f
  1798  04F3  0AF2               	incf	___awmod@divisor,f
  1799  04F4  1903               	skipnz
  1800  04F5  0AF3               	incf	___awmod@divisor+1,f
  1801  04F6                     l1564:
  1802  04F6  0872               	movf	___awmod@divisor,w
  1803  04F7  0473               	iorwf	___awmod@divisor+1,w
  1804  04F8  1903               	btfsc	3,2
  1805  04F9  2CFB               	goto	u1201
  1806  04FA  2CFC               	goto	u1200
  1807  04FB                     u1201:
  1808  04FB  2D2B               	goto	l1582
  1809  04FC                     u1200:
  1810  04FC                     l1566:
  1811  04FC  01F7               	clrf	___awmod@counter
  1812  04FD  0AF7               	incf	___awmod@counter,f
  1813  04FE  2D0A               	goto	l1572
  1814  04FF                     l1568:
  1815  04FF  3001               	movlw	1
  1816  0500                     u1215:
  1817  0500  1003               	clrc
  1818  0501  0DF2               	rlf	___awmod@divisor,f
  1819  0502  0DF3               	rlf	___awmod@divisor+1,f
  1820  0503  3EFF               	addlw	-1
  1821  0504  1D03               	skipz
  1822  0505  2D00               	goto	u1215
  1823  0506                     l1570:
  1824  0506  3001               	movlw	1
  1825  0507  00F6               	movwf	??___awmod
  1826  0508  0876               	movf	??___awmod,w
  1827  0509  07F7               	addwf	___awmod@counter,f
  1828  050A                     l1572:
  1829  050A  1FF3               	btfss	___awmod@divisor+1,7
  1830  050B  2D0D               	goto	u1221
  1831  050C  2D0E               	goto	u1220
  1832  050D                     u1221:
  1833  050D  2CFF               	goto	l1568
  1834  050E                     u1220:
  1835  050E                     l1574:
  1836  050E  0873               	movf	___awmod@divisor+1,w
  1837  050F  0275               	subwf	___awmod@dividend+1,w
  1838  0510  1D03               	skipz
  1839  0511  2D14               	goto	u1235
  1840  0512  0872               	movf	___awmod@divisor,w
  1841  0513  0274               	subwf	___awmod@dividend,w
  1842  0514                     u1235:
  1843  0514  1C03               	skipc
  1844  0515  2D17               	goto	u1231
  1845  0516  2D18               	goto	u1230
  1846  0517                     u1231:
  1847  0517  2D1E               	goto	l1578
  1848  0518                     u1230:
  1849  0518                     l1576:
  1850  0518  0872               	movf	___awmod@divisor,w
  1851  0519  02F4               	subwf	___awmod@dividend,f
  1852  051A  0873               	movf	___awmod@divisor+1,w
  1853  051B  1C03               	skipc
  1854  051C  03F5               	decf	___awmod@dividend+1,f
  1855  051D  02F5               	subwf	___awmod@dividend+1,f
  1856  051E                     l1578:
  1857  051E  3001               	movlw	1
  1858  051F                     u1245:
  1859  051F  1003               	clrc
  1860  0520  0CF3               	rrf	___awmod@divisor+1,f
  1861  0521  0CF2               	rrf	___awmod@divisor,f
  1862  0522  3EFF               	addlw	-1
  1863  0523  1D03               	skipz
  1864  0524  2D1F               	goto	u1245
  1865  0525                     l1580:
  1866  0525  3001               	movlw	1
  1867  0526  02F7               	subwf	___awmod@counter,f
  1868  0527  1D03               	btfss	3,2
  1869  0528  2D2A               	goto	u1251
  1870  0529  2D2B               	goto	u1250
  1871  052A                     u1251:
  1872  052A  2D0E               	goto	l1574
  1873  052B                     u1250:
  1874  052B                     l1582:
  1875  052B  0878               	movf	___awmod@sign,w
  1876  052C  1903               	btfsc	3,2
  1877  052D  2D2F               	goto	u1261
  1878  052E  2D30               	goto	u1260
  1879  052F                     u1261:
  1880  052F  2D35               	goto	l1586
  1881  0530                     u1260:
  1882  0530                     l1584:
  1883  0530  09F4               	comf	___awmod@dividend,f
  1884  0531  09F5               	comf	___awmod@dividend+1,f
  1885  0532  0AF4               	incf	___awmod@dividend,f
  1886  0533  1903               	skipnz
  1887  0534  0AF5               	incf	___awmod@dividend+1,f
  1888  0535                     l1586:
  1889  0535  0875               	movf	___awmod@dividend+1,w
  1890  0536  00F3               	movwf	?___awmod+1
  1891  0537  0874               	movf	___awmod@dividend,w
  1892  0538  00F2               	movwf	?___awmod
  1893  0539                     l409:
  1894  0539  0008               	return
  1895  053A                     __end_of___awmod:
  1896                           
  1897                           	psect	text6
  1898  0478                     __ptext6:	
  1899 ;; *************** function ___awdiv *****************
  1900 ;; Defined at:
  1901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  divisor         2    2[COMMON] int 
  1904 ;;  dividend        2    4[COMMON] int 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  quotient        2    2[BANK0 ] int 
  1907 ;;  sign            1    1[BANK0 ] unsigned char 
  1908 ;;  counter         1    0[BANK0 ] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  2    2[COMMON] int 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         4       0       0       0       0
  1919 ;;      Locals:         0       4       0       0       0
  1920 ;;      Temps:          1       0       0       0       0
  1921 ;;      Totals:         5       4       0       0       0
  1922 ;;Total ram usage:        9 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    1
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_division
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function ___awdiv
  1934  0478                     ___awdiv:
  1935  0478                     l1908:	
  1936                           ;incstack = 0
  1937                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1938                           
  1939  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1941  047A  01A1               	clrf	___awdiv@sign
  1942  047B                     l1910:
  1943  047B  1FF3               	btfss	___awdiv@divisor+1,7
  1944  047C  2C7E               	goto	u1611
  1945  047D  2C7F               	goto	u1610
  1946  047E                     u1611:
  1947  047E  2C86               	goto	l1916
  1948  047F                     u1610:
  1949  047F                     l1912:
  1950  047F  09F2               	comf	___awdiv@divisor,f
  1951  0480  09F3               	comf	___awdiv@divisor+1,f
  1952  0481  0AF2               	incf	___awdiv@divisor,f
  1953  0482  1903               	skipnz
  1954  0483  0AF3               	incf	___awdiv@divisor+1,f
  1955  0484                     l1914:
  1956  0484  01A1               	clrf	___awdiv@sign
  1957  0485  0AA1               	incf	___awdiv@sign,f
  1958  0486                     l1916:
  1959  0486  1FF5               	btfss	___awdiv@dividend+1,7
  1960  0487  2C89               	goto	u1621
  1961  0488  2C8A               	goto	u1620
  1962  0489                     u1621:
  1963  0489  2C93               	goto	l1922
  1964  048A                     u1620:
  1965  048A                     l1918:
  1966  048A  09F4               	comf	___awdiv@dividend,f
  1967  048B  09F5               	comf	___awdiv@dividend+1,f
  1968  048C  0AF4               	incf	___awdiv@dividend,f
  1969  048D  1903               	skipnz
  1970  048E  0AF5               	incf	___awdiv@dividend+1,f
  1971  048F                     l1920:
  1972  048F  3001               	movlw	1
  1973  0490  00F6               	movwf	??___awdiv
  1974  0491  0876               	movf	??___awdiv,w
  1975  0492  06A1               	xorwf	___awdiv@sign,f
  1976  0493                     l1922:
  1977  0493  01A2               	clrf	___awdiv@quotient
  1978  0494  01A3               	clrf	___awdiv@quotient+1
  1979  0495                     l1924:
  1980  0495  0872               	movf	___awdiv@divisor,w
  1981  0496  0473               	iorwf	___awdiv@divisor+1,w
  1982  0497  1903               	btfsc	3,2
  1983  0498  2C9A               	goto	u1631
  1984  0499  2C9B               	goto	u1630
  1985  049A                     u1631:
  1986  049A  2CD2               	goto	l1944
  1987  049B                     u1630:
  1988  049B                     l1926:
  1989  049B  01A0               	clrf	___awdiv@counter
  1990  049C  0AA0               	incf	___awdiv@counter,f
  1991  049D  2CA9               	goto	l1932
  1992  049E                     l1928:
  1993  049E  3001               	movlw	1
  1994  049F                     u1645:
  1995  049F  1003               	clrc
  1996  04A0  0DF2               	rlf	___awdiv@divisor,f
  1997  04A1  0DF3               	rlf	___awdiv@divisor+1,f
  1998  04A2  3EFF               	addlw	-1
  1999  04A3  1D03               	skipz
  2000  04A4  2C9F               	goto	u1645
  2001  04A5                     l1930:
  2002  04A5  3001               	movlw	1
  2003  04A6  00F6               	movwf	??___awdiv
  2004  04A7  0876               	movf	??___awdiv,w
  2005  04A8  07A0               	addwf	___awdiv@counter,f
  2006  04A9                     l1932:
  2007  04A9  1FF3               	btfss	___awdiv@divisor+1,7
  2008  04AA  2CAC               	goto	u1651
  2009  04AB  2CAD               	goto	u1650
  2010  04AC                     u1651:
  2011  04AC  2C9E               	goto	l1928
  2012  04AD                     u1650:
  2013  04AD                     l1934:
  2014  04AD  3001               	movlw	1
  2015  04AE                     u1665:
  2016  04AE  1003               	clrc
  2017  04AF  0DA2               	rlf	___awdiv@quotient,f
  2018  04B0  0DA3               	rlf	___awdiv@quotient+1,f
  2019  04B1  3EFF               	addlw	-1
  2020  04B2  1D03               	skipz
  2021  04B3  2CAE               	goto	u1665
  2022  04B4  0873               	movf	___awdiv@divisor+1,w
  2023  04B5  0275               	subwf	___awdiv@dividend+1,w
  2024  04B6  1D03               	skipz
  2025  04B7  2CBA               	goto	u1675
  2026  04B8  0872               	movf	___awdiv@divisor,w
  2027  04B9  0274               	subwf	___awdiv@dividend,w
  2028  04BA                     u1675:
  2029  04BA  1C03               	skipc
  2030  04BB  2CBD               	goto	u1671
  2031  04BC  2CBE               	goto	u1670
  2032  04BD                     u1671:
  2033  04BD  2CC5               	goto	l1940
  2034  04BE                     u1670:
  2035  04BE                     l1936:
  2036  04BE  0872               	movf	___awdiv@divisor,w
  2037  04BF  02F4               	subwf	___awdiv@dividend,f
  2038  04C0  0873               	movf	___awdiv@divisor+1,w
  2039  04C1  1C03               	skipc
  2040  04C2  03F5               	decf	___awdiv@dividend+1,f
  2041  04C3  02F5               	subwf	___awdiv@dividend+1,f
  2042  04C4                     l1938:
  2043  04C4  1422               	bsf	___awdiv@quotient,0
  2044  04C5                     l1940:
  2045  04C5  3001               	movlw	1
  2046  04C6                     u1685:
  2047  04C6  1003               	clrc
  2048  04C7  0CF3               	rrf	___awdiv@divisor+1,f
  2049  04C8  0CF2               	rrf	___awdiv@divisor,f
  2050  04C9  3EFF               	addlw	-1
  2051  04CA  1D03               	skipz
  2052  04CB  2CC6               	goto	u1685
  2053  04CC                     l1942:
  2054  04CC  3001               	movlw	1
  2055  04CD  02A0               	subwf	___awdiv@counter,f
  2056  04CE  1D03               	btfss	3,2
  2057  04CF  2CD1               	goto	u1691
  2058  04D0  2CD2               	goto	u1690
  2059  04D1                     u1691:
  2060  04D1  2CAD               	goto	l1934
  2061  04D2                     u1690:
  2062  04D2                     l1944:
  2063  04D2  0821               	movf	___awdiv@sign,w
  2064  04D3  1903               	btfsc	3,2
  2065  04D4  2CD6               	goto	u1701
  2066  04D5  2CD7               	goto	u1700
  2067  04D6                     u1701:
  2068  04D6  2CDC               	goto	l1948
  2069  04D7                     u1700:
  2070  04D7                     l1946:
  2071  04D7  09A2               	comf	___awdiv@quotient,f
  2072  04D8  09A3               	comf	___awdiv@quotient+1,f
  2073  04D9  0AA2               	incf	___awdiv@quotient,f
  2074  04DA  1903               	skipnz
  2075  04DB  0AA3               	incf	___awdiv@quotient+1,f
  2076  04DC                     l1948:
  2077  04DC  0823               	movf	___awdiv@quotient+1,w
  2078  04DD  00F3               	movwf	?___awdiv+1
  2079  04DE  0822               	movf	___awdiv@quotient,w
  2080  04DF  00F2               	movwf	?___awdiv
  2081  04E0                     l396:
  2082  04E0  0008               	return
  2083  04E1                     __end_of___awdiv:
  2084                           
  2085                           	psect	text7
  2086  05BB                     __ptext7:	
  2087 ;; *************** function _concat *****************
  2088 ;; Defined at:
  2089 ;;		line 237 in file "Lab05.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  a               2   26[BANK0 ] int 
  2092 ;;  b               2   28[BANK0 ] int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  s1             20   51[BANK0 ] unsigned char [20]
  2095 ;;  s2             20   31[BANK0 ] unsigned char [20]
  2096 ;;  c               2   71[BANK0 ] int 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2   26[BANK0 ] int 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       4       0       0       0
  2107 ;;      Locals:         0      42       0       0       0
  2108 ;;      Temps:          0       1       0       0       0
  2109 ;;      Totals:         0      47       0       0       0
  2110 ;;Total ram usage:       47 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    4
  2113 ;; This function calls:
  2114 ;;		_atoi
  2115 ;;		_sprintf
  2116 ;;		_strcat
  2117 ;; This function is called by:
  2118 ;;		_Text
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function _concat
  2124  05BB                     _concat:
  2125  05BB                     l1970:	
  2126                           ;incstack = 0
  2127                           ; Regs used in _concat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2128                           
  2129                           
  2130                           ;Lab05.c: 237: int concat(int a, int b);Lab05.c: 238: {;Lab05.c: 240:     char s1[20];;L
      +                          ab05.c: 241:     char s2[20];;Lab05.c: 245:     sprintf(s1, "%d", a);
  2131  05BB  3082               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2132  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  2133  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  2134  05BE  00BE               	movwf	??_concat
  2135  05BF  083E               	movf	??_concat,w
  2136  05C0  00B1               	movwf	sprintf@f
  2137  05C1  083B               	movf	concat@a+1,w
  2138  05C2  00B3               	movwf	?_sprintf+2
  2139  05C3  083A               	movf	concat@a,w
  2140  05C4  00B2               	movwf	?_sprintf+1
  2141  05C5  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2142  05C6  120A  118A  26AD  120A  118A  	fcall	_sprintf
  2143                           
  2144                           ;Lab05.c: 246:     sprintf(s2, "%d", b);
  2145  05CB  3082               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2146  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2147  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2148  05CE  00BE               	movwf	??_concat
  2149  05CF  083E               	movf	??_concat,w
  2150  05D0  00B1               	movwf	sprintf@f
  2151  05D1  083D               	movf	concat@b+1,w
  2152  05D2  00B3               	movwf	?_sprintf+2
  2153  05D3  083C               	movf	concat@b,w
  2154  05D4  00B2               	movwf	?_sprintf+1
  2155  05D5  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2156  05D6  120A  118A  26AD  120A  118A  	fcall	_sprintf
  2157  05DB                     l1972:
  2158                           
  2159                           ;Lab05.c: 250:     strcat(s1, s2);
  2160  05DB  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2161  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2162  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2163  05DE  00BE               	movwf	??_concat
  2164  05DF  083E               	movf	??_concat,w
  2165  05E0  00F2               	movwf	strcat@from
  2166  05E1  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2167  05E2  120A  118A  265F  120A  118A  	fcall	_strcat
  2168  05E7                     l1974:
  2169                           
  2170                           ;Lab05.c: 254:     int c = atoi(s1);
  2171  05E7  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2172  05E8  120A  118A  238A  120A  118A  	fcall	_atoi
  2173  05ED  0879               	movf	?_atoi+1,w
  2174  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2175  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2176  05F0  00E8               	movwf	concat@c+1
  2177  05F1  0878               	movf	?_atoi,w
  2178  05F2  00E7               	movwf	concat@c
  2179  05F3                     l1976:
  2180                           
  2181                           ;Lab05.c: 257:     return c;
  2182  05F3  0868               	movf	concat@c+1,w
  2183  05F4  00BB               	movwf	?_concat+1
  2184  05F5  0867               	movf	concat@c,w
  2185  05F6  00BA               	movwf	?_concat
  2186  05F7                     l151:
  2187  05F7  0008               	return
  2188  05F8                     __end_of_concat:
  2189                           
  2190                           	psect	text8
  2191  065F                     __ptext8:	
  2192 ;; *************** function _strcat *****************
  2193 ;; Defined at:
  2194 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  to              1    wreg     PTR unsigned char 
  2197 ;;		 -> concat@s1(20), 
  2198 ;;  from            1    2[COMMON] PTR const unsigned char 
  2199 ;;		 -> concat@s2(20), 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  to              1    4[COMMON] PTR unsigned char 
  2202 ;;		 -> concat@s1(20), 
  2203 ;;  cp              1    5[COMMON] PTR unsigned char 
  2204 ;;		 -> concat@s1(20), 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      PTR unsigned char 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         1       0       0       0       0
  2215 ;;      Locals:         2       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0
  2217 ;;      Totals:         4       0       0       0       0
  2218 ;;Total ram usage:        4 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_concat
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _strcat
  2230  065F                     _strcat:
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2234                           ;strcat@to stored from wreg
  2235  065F  00F4               	movwf	strcat@to
  2236  0660                     l1464:
  2237  0660  0874               	movf	strcat@to,w
  2238  0661  00F3               	movwf	??_strcat
  2239  0662  0873               	movf	??_strcat,w
  2240  0663  00F5               	movwf	strcat@cp
  2241  0664  2E69               	goto	l1468
  2242  0665                     l1466:
  2243  0665  3001               	movlw	1
  2244  0666  00F3               	movwf	??_strcat
  2245  0667  0873               	movf	??_strcat,w
  2246  0668  07F5               	addwf	strcat@cp,f
  2247  0669                     l1468:
  2248  0669  0875               	movf	strcat@cp,w
  2249  066A  0084               	movwf	4
  2250  066B  1383               	bcf	3,7	;select IRP bank0
  2251  066C  0800               	movf	0,w
  2252  066D  1D03               	btfss	3,2
  2253  066E  2E70               	goto	u1001
  2254  066F  2E71               	goto	u1000
  2255  0670                     u1001:
  2256  0670  2E65               	goto	l1466
  2257  0671                     u1000:
  2258  0671  2E7A               	goto	l1472
  2259  0672                     l1470:
  2260  0672  3001               	movlw	1
  2261  0673  00F3               	movwf	??_strcat
  2262  0674  0873               	movf	??_strcat,w
  2263  0675  07F5               	addwf	strcat@cp,f
  2264  0676  3001               	movlw	1
  2265  0677  00F3               	movwf	??_strcat
  2266  0678  0873               	movf	??_strcat,w
  2267  0679  07F2               	addwf	strcat@from,f
  2268  067A                     l1472:
  2269  067A  0872               	movf	strcat@from,w
  2270  067B  0084               	movwf	4
  2271  067C  0800               	movf	0,w
  2272  067D  00F3               	movwf	??_strcat
  2273  067E  0875               	movf	strcat@cp,w
  2274  067F  0084               	movwf	4
  2275  0680  0873               	movf	??_strcat,w
  2276  0681  0080               	movwf	0
  2277  0682  0800               	movf	0,w
  2278  0683  1D03               	btfss	3,2
  2279  0684  2E86               	goto	u1011
  2280  0685  2E87               	goto	u1010
  2281  0686                     u1011:
  2282  0686  2E72               	goto	l1470
  2283  0687                     u1010:
  2284  0687                     l774:
  2285  0687  0008               	return
  2286  0688                     __end_of_strcat:
  2287                           
  2288                           	psect	text9
  2289  06AD                     __ptext9:	
  2290 ;; *************** function _sprintf *****************
  2291 ;; Defined at:
  2292 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  wh              1    wreg     PTR unsigned char 
  2295 ;;		 -> concat@s2(20), concat@s1(20), 
  2296 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  2297 ;;		 -> STR_8(3), STR_7(3), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  2300 ;;		 -> concat@s2(20), concat@s1(20), 
  2301 ;;  pb              2   24[BANK0 ] struct __prbuf
  2302 ;;  ap              1   23[BANK0 ] PTR void [1]
  2303 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2   17[BANK0 ] int 
  2306 ;; Registers used:
  2307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         0       3       0       0       0
  2314 ;;      Locals:         0       4       0       0       0
  2315 ;;      Temps:          0       2       0       0       0
  2316 ;;      Totals:         0       9       0       0       0
  2317 ;;Total ram usage:        9 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    3
  2320 ;; This function calls:
  2321 ;;		__doprnt
  2322 ;; This function is called by:
  2323 ;;		_concat
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _sprintf
  2329  06AD                     _sprintf:
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2333                           ;sprintf@wh stored from wreg
  2334  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2335  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2336  06AF  00B6               	movwf	sprintf@wh
  2337  06B0                     l1862:
  2338  06B0  0836               	movf	sprintf@wh,w
  2339  06B1  00B4               	movwf	??_sprintf
  2340  06B2  0834               	movf	??_sprintf,w
  2341  06B3  00B8               	movwf	sprintf@pb
  2342  06B4                     l1864:
  2343  06B4  01B9               	clrf	low ((sprintf@pb| 0+1))
  2344  06B5                     l1866:
  2345  06B5  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2346  06B6  00B4               	movwf	??_sprintf
  2347  06B7  0834               	movf	??_sprintf,w
  2348  06B8  00B7               	movwf	sprintf@ap
  2349  06B9                     l1868:
  2350  06B9  0831               	movf	sprintf@f,w
  2351  06BA  00B4               	movwf	??_sprintf
  2352  06BB  0834               	movf	??_sprintf,w
  2353  06BC  00A6               	movwf	__doprnt@f
  2354  06BD  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  2355  06BE  00B5               	movwf	??_sprintf+1
  2356  06BF  0835               	movf	??_sprintf+1,w
  2357  06C0  00A7               	movwf	__doprnt@ap
  2358  06C1  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  2359  06C2  120A  118A  2178  120A  118A  	fcall	__doprnt
  2360  06C7                     l1870:
  2361  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  2362  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  2363  06C9  0838               	movf	sprintf@pb,w
  2364  06CA  0084               	movwf	4
  2365  06CB  1383               	bcf	3,7	;select IRP bank0
  2366  06CC  0180               	clrf	0
  2367  06CD                     l765:
  2368  06CD  0008               	return
  2369  06CE                     __end_of_sprintf:
  2370                           
  2371                           	psect	text10
  2372  0178                     __ptext10:	
  2373 ;; *************** function __doprnt *****************
  2374 ;; Defined at:
  2375 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  pb              1    wreg     PTR struct __prbuf
  2378 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2379 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2380 ;;		 -> STR_8(3), STR_7(3), STR_6(27), STR_5(21), 
  2381 ;;		 -> STR_4(20), STR_3(30), STR_2(2), STR_1(21), 
  2382 ;;  ap              1    7[BANK0 ] PTR PTR void 
  2383 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  2386 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2387 ;;  tmpval          4    0        struct .
  2388 ;;  val             2   13[BANK0 ] unsigned int 
  2389 ;;  cp              2    0        PTR const unsigned char 
  2390 ;;  len             2    0        unsigned int 
  2391 ;;  c               1   15[BANK0 ] unsigned char 
  2392 ;;  prec            1   12[BANK0 ] char 
  2393 ;;  flag            1   11[BANK0 ] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2    6[BANK0 ] int 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       2       0       0       0
  2404 ;;      Locals:         0       6       0       0       0
  2405 ;;      Temps:          0       3       0       0       0
  2406 ;;      Totals:         0      11       0       0       0
  2407 ;;Total ram usage:       11 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    2
  2410 ;; This function calls:
  2411 ;;		Absolute function
  2412 ;;		___lwdiv
  2413 ;;		___lwmod
  2414 ;;		_putch
  2415 ;; This function is called by:
  2416 ;;		_printf
  2417 ;;		_sprintf
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           
  2422                           ;psect for function __doprnt
  2423  0178                     __doprnt:
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2427                           ;__doprnt@pb stored from wreg
  2428  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2430  017A  00B0               	movwf	__doprnt@pb
  2431  017B                     l1790:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2434  017B  2A97               	goto	l1852
  2435  017C                     l1792:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2438  017C  3025               	movlw	37
  2439  017D  062F               	xorwf	__doprnt@c,w
  2440  017E  1903               	btfsc	3,2
  2441  017F  2981               	goto	u1451
  2442  0180  2982               	goto	u1450
  2443  0181                     u1451:
  2444  0181  29A8               	goto	l1802
  2445  0182                     u1450:
  2446  0182                     l1794:
  2447  0182  0A30               	incf	__doprnt@pb,w
  2448  0183  0084               	movwf	4
  2449  0184  1383               	bcf	3,7	;select IRP bank0
  2450  0185  0800               	movf	0,w
  2451  0186  1903               	btfsc	3,2
  2452  0187  2989               	goto	u1461
  2453  0188  298A               	goto	u1460
  2454  0189                     u1461:
  2455  0189  2999               	goto	l1798
  2456  018A                     u1460:
  2457  018A                     l1796:
  2458  018A  082F               	movf	__doprnt@c,w
  2459  018B  00A8               	movwf	??__doprnt
  2460  018C  0828               	movf	??__doprnt,w
  2461  018D  00F2               	movwf	putch@data
  2462  018E  0A30               	incf	__doprnt@pb,w
  2463  018F  0084               	movwf	4
  2464  0190  0800               	movf	0,w
  2465  0191  120A  118A  2027  120A  118A  	fcall	fptable
  2466  0196  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0197  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0198  297B               	goto	l1790
  2469  0199                     l1798:
  2470  0199  082F               	movf	__doprnt@c,w
  2471  019A  00A8               	movwf	??__doprnt
  2472  019B  0830               	movf	__doprnt@pb,w
  2473  019C  0084               	movwf	4
  2474  019D  0800               	movf	0,w
  2475  019E  0084               	movwf	4
  2476  019F  0828               	movf	??__doprnt,w
  2477  01A0  0080               	movwf	0
  2478  01A1                     l1800:
  2479  01A1  3001               	movlw	1
  2480  01A2  00A8               	movwf	??__doprnt
  2481  01A3  0830               	movf	__doprnt@pb,w
  2482  01A4  0084               	movwf	4
  2483  01A5  0828               	movf	??__doprnt,w
  2484  01A6  0780               	addwf	0,f
  2485  01A7  297B               	goto	l1790
  2486  01A8                     l1802:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2489  01A8  01AB               	clrf	__doprnt@flag
  2490  01A9                     l1806:	
  2491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2492                           
  2493  01A9  3001               	movlw	1
  2494  01AA  07A6               	addwf	__doprnt@f,f
  2495  01AB  30FF               	movlw	-1
  2496  01AC  0726               	addwf	__doprnt@f,w
  2497  01AD  0084               	movwf	4
  2498  01AE  120A  118A  2300  120A  118A  	fcall	stringdir
  2499  01B3  00AF               	movwf	__doprnt@c
  2500  01B4  00A8               	movwf	??__doprnt
  2501  01B5  01A9               	clrf	??__doprnt+1
  2502                           
  2503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2504                           ; Switch size 1, requested type "simple"
  2505                           ; Number of cases is 1, Range of values is 0 to 0
  2506                           ; switch strategies available:
  2507                           ; Name         Instructions Cycles
  2508                           ; simple_byte            4     3 (average)
  2509                           ; direct_byte           11     8 (fixed)
  2510                           ; jumptable            260     6 (fixed)
  2511                           ;	Chosen strategy is simple_byte
  2512  01B6  0829               	movf	??__doprnt+1,w
  2513  01B7  3A00               	xorlw	0	; case 0
  2514  01B8  1903               	skipnz
  2515  01B9  29BB               	goto	l2060
  2516  01BA  2A97               	goto	l1852
  2517  01BB                     l2060:
  2518                           
  2519                           ; Switch size 1, requested type "simple"
  2520                           ; Number of cases is 3, Range of values is 0 to 105
  2521                           ; switch strategies available:
  2522                           ; Name         Instructions Cycles
  2523                           ; simple_byte           10     6 (average)
  2524                           ; jumptable            260     6 (fixed)
  2525                           ;	Chosen strategy is simple_byte
  2526  01BB  0828               	movf	??__doprnt,w
  2527  01BC  3A00               	xorlw	0	; case 0
  2528  01BD  1903               	skipnz
  2529  01BE  2AAB               	goto	l1854
  2530  01BF  3A64               	xorlw	100	; case 100
  2531  01C0  1903               	skipnz
  2532  01C1  29C6               	goto	l1808
  2533  01C2  3A0D               	xorlw	13	; case 105
  2534  01C3  1903               	skipnz
  2535  01C4  29C6               	goto	l1808
  2536  01C5  2A97               	goto	l1852
  2537  01C6                     l1808:
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2540  01C6  0827               	movf	__doprnt@ap,w
  2541  01C7  0084               	movwf	4
  2542  01C8  1383               	bcf	3,7	;select IRP bank0
  2543  01C9  0800               	movf	0,w
  2544  01CA  00A8               	movwf	??__doprnt
  2545  01CB  3002               	movlw	2
  2546  01CC  0780               	addwf	0,f
  2547  01CD  0828               	movf	??__doprnt,w
  2548  01CE  0084               	movwf	4
  2549  01CF  0800               	movf	0,w
  2550  01D0  00AD               	movwf	__doprnt@val
  2551  01D1  0A84               	incf	4,f
  2552  01D2  0800               	movf	0,w
  2553  01D3  00AE               	movwf	__doprnt@val+1
  2554  01D4                     l1810:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2557  01D4  1FAE               	btfss	__doprnt@val+1,7
  2558  01D5  29D7               	goto	u1471
  2559  01D6  29D8               	goto	u1470
  2560  01D7                     u1471:
  2561  01D7  29E1               	goto	l1816
  2562  01D8                     u1470:
  2563  01D8                     l1812:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2566  01D8  3003               	movlw	3
  2567  01D9  00A8               	movwf	??__doprnt
  2568  01DA  0828               	movf	??__doprnt,w
  2569  01DB  04AB               	iorwf	__doprnt@flag,f
  2570  01DC                     l1814:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2573  01DC  09AD               	comf	__doprnt@val,f
  2574  01DD  09AE               	comf	__doprnt@val+1,f
  2575  01DE  0AAD               	incf	__doprnt@val,f
  2576  01DF  1903               	skipnz
  2577  01E0  0AAE               	incf	__doprnt@val+1,f
  2578  01E1                     l1816:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2581  01E1  01AF               	clrf	__doprnt@c
  2582  01E2  0AAF               	incf	__doprnt@c,f
  2583  01E3                     l1822:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2586  01E3  082F               	movf	__doprnt@c,w
  2587  01E4  00A8               	movwf	??__doprnt
  2588  01E5  0728               	addwf	??__doprnt,w
  2589  01E6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2590  01E7  0084               	movwf	4
  2591  01E8  120A  118A  2300  120A  118A  	fcall	stringdir
  2592  01ED  00A9               	movwf	??__doprnt+1
  2593  01EE  120A  118A  2300  120A  118A  	fcall	stringdir
  2594  01F3  00AA               	movwf	??__doprnt+2
  2595  01F4  082A               	movf	??__doprnt+2,w
  2596  01F5  022E               	subwf	__doprnt@val+1,w
  2597  01F6  1D03               	skipz
  2598  01F7  29FA               	goto	u1485
  2599  01F8  0829               	movf	??__doprnt+1,w
  2600  01F9  022D               	subwf	__doprnt@val,w
  2601  01FA                     u1485:
  2602  01FA  1803               	skipnc
  2603  01FB  29FD               	goto	u1481
  2604  01FC  29FE               	goto	u1480
  2605  01FD                     u1481:
  2606  01FD  29FF               	goto	l1826
  2607  01FE                     u1480:
  2608  01FE  2A09               	goto	l1828
  2609  01FF                     l1826:
  2610  01FF  3001               	movlw	1
  2611  0200  00A8               	movwf	??__doprnt
  2612  0201  0828               	movf	??__doprnt,w
  2613  0202  07AF               	addwf	__doprnt@c,f
  2614  0203  3005               	movlw	5
  2615  0204  062F               	xorwf	__doprnt@c,w
  2616  0205  1D03               	btfss	3,2
  2617  0206  2A08               	goto	u1491
  2618  0207  2A09               	goto	u1490
  2619  0208                     u1491:
  2620  0208  29E3               	goto	l1822
  2621  0209                     u1490:
  2622  0209                     l1828:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2625  0209  082B               	movf	__doprnt@flag,w
  2626  020A  3903               	andlw	3
  2627  020B  1903               	btfsc	3,2
  2628  020C  2A0E               	goto	u1501
  2629  020D  2A0F               	goto	u1500
  2630  020E                     u1501:
  2631  020E  2A32               	goto	l1838
  2632  020F                     u1500:
  2633  020F                     l1830:
  2634  020F  0A30               	incf	__doprnt@pb,w
  2635  0210  0084               	movwf	4
  2636  0211  1383               	bcf	3,7	;select IRP bank0
  2637  0212  0800               	movf	0,w
  2638  0213  1903               	btfsc	3,2
  2639  0214  2A16               	goto	u1511
  2640  0215  2A17               	goto	u1510
  2641  0216                     u1511:
  2642  0216  2A24               	goto	l1834
  2643  0217                     u1510:
  2644  0217                     l1832:
  2645  0217  302D               	movlw	45
  2646  0218  00A8               	movwf	??__doprnt
  2647  0219  0828               	movf	??__doprnt,w
  2648  021A  00F2               	movwf	putch@data
  2649  021B  0A30               	incf	__doprnt@pb,w
  2650  021C  0084               	movwf	4
  2651  021D  0800               	movf	0,w
  2652  021E  120A  118A  2027  120A  118A  	fcall	fptable
  2653  0223  2A32               	goto	l1838
  2654  0224                     l1834:
  2655  0224  302D               	movlw	45
  2656  0225  00A8               	movwf	??__doprnt
  2657  0226  0830               	movf	__doprnt@pb,w
  2658  0227  0084               	movwf	4
  2659  0228  0800               	movf	0,w
  2660  0229  0084               	movwf	4
  2661  022A  0828               	movf	??__doprnt,w
  2662  022B  0080               	movwf	0
  2663  022C                     l1836:
  2664  022C  3001               	movlw	1
  2665  022D  00A8               	movwf	??__doprnt
  2666  022E  0830               	movf	__doprnt@pb,w
  2667  022F  0084               	movwf	4
  2668  0230  0828               	movf	??__doprnt,w
  2669  0231  0780               	addwf	0,f
  2670  0232                     l1838:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2673  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0234  082F               	movf	__doprnt@c,w
  2676  0235  00A8               	movwf	??__doprnt
  2677  0236  0828               	movf	??__doprnt,w
  2678  0237  00AC               	movwf	__doprnt@prec
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2681  0238  2A8C               	goto	l1850
  2682  0239                     l1840:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2685  0239  300A               	movlw	10
  2686  023A  00A0               	movwf	___lwmod@divisor
  2687  023B  3000               	movlw	0
  2688  023C  00A1               	movwf	___lwmod@divisor+1
  2689  023D  082C               	movf	__doprnt@prec,w
  2690  023E  00A8               	movwf	??__doprnt
  2691  023F  0728               	addwf	??__doprnt,w
  2692  0240  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2693  0241  0084               	movwf	4
  2694  0242  120A  118A  2300  120A  118A  	fcall	stringdir
  2695  0247  00F2               	movwf	___lwdiv@divisor
  2696  0248  120A  118A  2300  120A  118A  	fcall	stringdir
  2697  024D  00F3               	movwf	___lwdiv@divisor+1
  2698  024E  082E               	movf	__doprnt@val+1,w
  2699  024F  00F5               	movwf	___lwdiv@dividend+1
  2700  0250  082D               	movf	__doprnt@val,w
  2701  0251  00F4               	movwf	___lwdiv@dividend
  2702  0252  120A  118A  253A  120A  118A  	fcall	___lwdiv
  2703  0257  0873               	movf	?___lwdiv+1,w
  2704  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2706  025A  00A3               	movwf	___lwmod@dividend+1
  2707  025B  0872               	movf	?___lwdiv,w
  2708  025C  00A2               	movwf	___lwmod@dividend
  2709  025D  120A  118A  25F8  120A  118A  	fcall	___lwmod
  2710  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0264  0820               	movf	?___lwmod,w
  2713  0265  3E30               	addlw	48
  2714  0266  00A9               	movwf	??__doprnt+1
  2715  0267  0829               	movf	??__doprnt+1,w
  2716  0268  00AF               	movwf	__doprnt@c
  2717  0269                     l1842:
  2718  0269  0A30               	incf	__doprnt@pb,w
  2719  026A  0084               	movwf	4
  2720  026B  1383               	bcf	3,7	;select IRP bank0
  2721  026C  0800               	movf	0,w
  2722  026D  1903               	btfsc	3,2
  2723  026E  2A70               	goto	u1521
  2724  026F  2A71               	goto	u1520
  2725  0270                     u1521:
  2726  0270  2A7E               	goto	l1846
  2727  0271                     u1520:
  2728  0271                     l1844:
  2729  0271  082F               	movf	__doprnt@c,w
  2730  0272  00A8               	movwf	??__doprnt
  2731  0273  0828               	movf	??__doprnt,w
  2732  0274  00F2               	movwf	putch@data
  2733  0275  0A30               	incf	__doprnt@pb,w
  2734  0276  0084               	movwf	4
  2735  0277  0800               	movf	0,w
  2736  0278  120A  118A  2027  120A  118A  	fcall	fptable
  2737  027D  2A8C               	goto	l1850
  2738  027E                     l1846:
  2739  027E  082F               	movf	__doprnt@c,w
  2740  027F  00A8               	movwf	??__doprnt
  2741  0280  0830               	movf	__doprnt@pb,w
  2742  0281  0084               	movwf	4
  2743  0282  0800               	movf	0,w
  2744  0283  0084               	movwf	4
  2745  0284  0828               	movf	??__doprnt,w
  2746  0285  0080               	movwf	0
  2747  0286                     l1848:
  2748  0286  3001               	movlw	1
  2749  0287  00A8               	movwf	??__doprnt
  2750  0288  0830               	movf	__doprnt@pb,w
  2751  0289  0084               	movwf	4
  2752  028A  0828               	movf	??__doprnt,w
  2753  028B  0780               	addwf	0,f
  2754  028C                     l1850:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2757  028C  30FF               	movlw	255
  2758  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2759  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2760  028F  00A8               	movwf	??__doprnt
  2761  0290  0828               	movf	??__doprnt,w
  2762  0291  07AC               	addwf	__doprnt@prec,f
  2763  0292  0A2C               	incf	__doprnt@prec,w
  2764  0293  1D03               	btfss	3,2
  2765  0294  2A96               	goto	u1531
  2766  0295  2A97               	goto	u1530
  2767  0296                     u1531:
  2768  0296  2A39               	goto	l1840
  2769  0297                     u1530:
  2770  0297                     l1852:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2773  0297  3001               	movlw	1
  2774  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2776  029A  07A6               	addwf	__doprnt@f,f
  2777  029B  30FF               	movlw	-1
  2778  029C  0726               	addwf	__doprnt@f,w
  2779  029D  0084               	movwf	4
  2780  029E  120A  118A  2300  120A  118A  	fcall	stringdir
  2781  02A3  00A8               	movwf	??__doprnt
  2782  02A4  0828               	movf	??__doprnt,w
  2783  02A5  00AF               	movwf	__doprnt@c
  2784  02A6  082F               	movf	__doprnt@c,w
  2785  02A7  1D03               	btfss	3,2
  2786  02A8  2AAA               	goto	u1541
  2787  02A9  2AAB               	goto	u1540
  2788  02AA                     u1541:
  2789  02AA  297C               	goto	l1792
  2790  02AB                     u1540:
  2791  02AB                     l1854:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2794  02AB  01A6               	clrf	?__doprnt
  2795  02AC  01A7               	clrf	?__doprnt+1
  2796  02AD                     l758:
  2797  02AD  0008               	return
  2798  02AE                     __end_of__doprnt:
  2799                           
  2800                           	psect	text11
  2801  0715                     __ptext11:	
  2802 ;; *************** function _putch *****************
  2803 ;; Defined at:
  2804 ;;		line 260 in file "Lab05.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  data            1    2[COMMON] unsigned char 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         1       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         1       0       0       0       0
  2822 ;;Total ram usage:        1 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_printf
  2829 ;;		__doprnt
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _putch
  2835  0715                     _putch:
  2836  0715                     l1300:	
  2837                           ;incstack = 0
  2838                           ; Regs used in _putch: [wreg]
  2839                           
  2840  0715                     l154:	
  2841                           ;Lab05.c: 261:     while(TXIF == 0);
  2842                           
  2843  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2844  0716  1303               	bcf	3,6	;RP1=0, select bank0
  2845  0717  1E0C               	btfss	12,4	;volatile
  2846  0718  2F1A               	goto	u701
  2847  0719  2F1B               	goto	u700
  2848  071A                     u701:
  2849  071A  2F15               	goto	l154
  2850  071B                     u700:
  2851  071B                     l1302:
  2852                           
  2853                           ;Lab05.c: 262:     TXREG = data;
  2854  071B  0872               	movf	putch@data,w
  2855  071C  0099               	movwf	25	;volatile
  2856  071D                     l157:
  2857  071D  0008               	return
  2858  071E                     __end_of_putch:
  2859                           
  2860                           	psect	text12
  2861  05F8                     __ptext12:	
  2862 ;; *************** function ___lwmod *****************
  2863 ;; Defined at:
  2864 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  divisor         2    0[BANK0 ] unsigned int 
  2867 ;;  dividend        2    2[BANK0 ] unsigned int 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  counter         1    5[BANK0 ] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  2    0[BANK0 ] unsigned int 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       4       0       0       0
  2880 ;;      Locals:         0       1       0       0       0
  2881 ;;      Temps:          0       1       0       0       0
  2882 ;;      Totals:         0       6       0       0       0
  2883 ;;Total ram usage:        6 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		__doprnt
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function ___lwmod
  2895  05F8                     ___lwmod:
  2896  05F8                     l1768:	
  2897                           ;incstack = 0
  2898                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2899                           
  2900  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  2901  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  2902  05FA  0820               	movf	___lwmod@divisor,w
  2903  05FB  0421               	iorwf	___lwmod@divisor+1,w
  2904  05FC  1903               	btfsc	3,2
  2905  05FD  2DFF               	goto	u1391
  2906  05FE  2E00               	goto	u1390
  2907  05FF                     u1391:
  2908  05FF  2E2F               	goto	l1786
  2909  0600                     u1390:
  2910  0600                     l1770:
  2911  0600  01A5               	clrf	___lwmod@counter
  2912  0601  0AA5               	incf	___lwmod@counter,f
  2913  0602  2E0E               	goto	l1776
  2914  0603                     l1772:
  2915  0603  3001               	movlw	1
  2916  0604                     u1405:
  2917  0604  1003               	clrc
  2918  0605  0DA0               	rlf	___lwmod@divisor,f
  2919  0606  0DA1               	rlf	___lwmod@divisor+1,f
  2920  0607  3EFF               	addlw	-1
  2921  0608  1D03               	skipz
  2922  0609  2E04               	goto	u1405
  2923  060A                     l1774:
  2924  060A  3001               	movlw	1
  2925  060B  00A4               	movwf	??___lwmod
  2926  060C  0824               	movf	??___lwmod,w
  2927  060D  07A5               	addwf	___lwmod@counter,f
  2928  060E                     l1776:
  2929  060E  1FA1               	btfss	___lwmod@divisor+1,7
  2930  060F  2E11               	goto	u1411
  2931  0610  2E12               	goto	u1410
  2932  0611                     u1411:
  2933  0611  2E03               	goto	l1772
  2934  0612                     u1410:
  2935  0612                     l1778:
  2936  0612  0821               	movf	___lwmod@divisor+1,w
  2937  0613  0223               	subwf	___lwmod@dividend+1,w
  2938  0614  1D03               	skipz
  2939  0615  2E18               	goto	u1425
  2940  0616  0820               	movf	___lwmod@divisor,w
  2941  0617  0222               	subwf	___lwmod@dividend,w
  2942  0618                     u1425:
  2943  0618  1C03               	skipc
  2944  0619  2E1B               	goto	u1421
  2945  061A  2E1C               	goto	u1420
  2946  061B                     u1421:
  2947  061B  2E22               	goto	l1782
  2948  061C                     u1420:
  2949  061C                     l1780:
  2950  061C  0820               	movf	___lwmod@divisor,w
  2951  061D  02A2               	subwf	___lwmod@dividend,f
  2952  061E  0821               	movf	___lwmod@divisor+1,w
  2953  061F  1C03               	skipc
  2954  0620  03A3               	decf	___lwmod@dividend+1,f
  2955  0621  02A3               	subwf	___lwmod@dividend+1,f
  2956  0622                     l1782:
  2957  0622  3001               	movlw	1
  2958  0623                     u1435:
  2959  0623  1003               	clrc
  2960  0624  0CA1               	rrf	___lwmod@divisor+1,f
  2961  0625  0CA0               	rrf	___lwmod@divisor,f
  2962  0626  3EFF               	addlw	-1
  2963  0627  1D03               	skipz
  2964  0628  2E23               	goto	u1435
  2965  0629                     l1784:
  2966  0629  3001               	movlw	1
  2967  062A  02A5               	subwf	___lwmod@counter,f
  2968  062B  1D03               	btfss	3,2
  2969  062C  2E2E               	goto	u1441
  2970  062D  2E2F               	goto	u1440
  2971  062E                     u1441:
  2972  062E  2E12               	goto	l1778
  2973  062F                     u1440:
  2974  062F                     l1786:
  2975  062F  0823               	movf	___lwmod@dividend+1,w
  2976  0630  00A1               	movwf	?___lwmod+1
  2977  0631  0822               	movf	___lwmod@dividend,w
  2978  0632  00A0               	movwf	?___lwmod
  2979  0633                     l525:
  2980  0633  0008               	return
  2981  0634                     __end_of___lwmod:
  2982                           
  2983                           	psect	text13
  2984  053A                     __ptext13:	
  2985 ;; *************** function ___lwdiv *****************
  2986 ;; Defined at:
  2987 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  divisor         2    2[COMMON] unsigned int 
  2990 ;;  dividend        2    4[COMMON] unsigned int 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  quotient        2    7[COMMON] unsigned int 
  2993 ;;  counter         1    9[COMMON] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  2    2[COMMON] unsigned int 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         4       0       0       0       0
  3004 ;;      Locals:         3       0       0       0       0
  3005 ;;      Temps:          1       0       0       0       0
  3006 ;;      Totals:         8       0       0       0       0
  3007 ;;Total ram usage:        8 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		__doprnt
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           
  3018                           ;psect for function ___lwdiv
  3019  053A                     ___lwdiv:
  3020  053A                     l1306:	
  3021                           ;incstack = 0
  3022                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3023                           
  3024  053A  01F7               	clrf	___lwdiv@quotient
  3025  053B  01F8               	clrf	___lwdiv@quotient+1
  3026  053C                     l1308:
  3027  053C  0872               	movf	___lwdiv@divisor,w
  3028  053D  0473               	iorwf	___lwdiv@divisor+1,w
  3029  053E  1903               	btfsc	3,2
  3030  053F  2D41               	goto	u711
  3031  0540  2D42               	goto	u710
  3032  0541                     u711:
  3033  0541  2D79               	goto	l1328
  3034  0542                     u710:
  3035  0542                     l1310:
  3036  0542  01F9               	clrf	___lwdiv@counter
  3037  0543  0AF9               	incf	___lwdiv@counter,f
  3038  0544  2D50               	goto	l1316
  3039  0545                     l1312:
  3040  0545  3001               	movlw	1
  3041  0546                     u725:
  3042  0546  1003               	clrc
  3043  0547  0DF2               	rlf	___lwdiv@divisor,f
  3044  0548  0DF3               	rlf	___lwdiv@divisor+1,f
  3045  0549  3EFF               	addlw	-1
  3046  054A  1D03               	skipz
  3047  054B  2D46               	goto	u725
  3048  054C                     l1314:
  3049  054C  3001               	movlw	1
  3050  054D  00F6               	movwf	??___lwdiv
  3051  054E  0876               	movf	??___lwdiv,w
  3052  054F  07F9               	addwf	___lwdiv@counter,f
  3053  0550                     l1316:
  3054  0550  1FF3               	btfss	___lwdiv@divisor+1,7
  3055  0551  2D53               	goto	u731
  3056  0552  2D54               	goto	u730
  3057  0553                     u731:
  3058  0553  2D45               	goto	l1312
  3059  0554                     u730:
  3060  0554                     l1318:
  3061  0554  3001               	movlw	1
  3062  0555                     u745:
  3063  0555  1003               	clrc
  3064  0556  0DF7               	rlf	___lwdiv@quotient,f
  3065  0557  0DF8               	rlf	___lwdiv@quotient+1,f
  3066  0558  3EFF               	addlw	-1
  3067  0559  1D03               	skipz
  3068  055A  2D55               	goto	u745
  3069  055B  0873               	movf	___lwdiv@divisor+1,w
  3070  055C  0275               	subwf	___lwdiv@dividend+1,w
  3071  055D  1D03               	skipz
  3072  055E  2D61               	goto	u755
  3073  055F  0872               	movf	___lwdiv@divisor,w
  3074  0560  0274               	subwf	___lwdiv@dividend,w
  3075  0561                     u755:
  3076  0561  1C03               	skipc
  3077  0562  2D64               	goto	u751
  3078  0563  2D65               	goto	u750
  3079  0564                     u751:
  3080  0564  2D6C               	goto	l1324
  3081  0565                     u750:
  3082  0565                     l1320:
  3083  0565  0872               	movf	___lwdiv@divisor,w
  3084  0566  02F4               	subwf	___lwdiv@dividend,f
  3085  0567  0873               	movf	___lwdiv@divisor+1,w
  3086  0568  1C03               	skipc
  3087  0569  03F5               	decf	___lwdiv@dividend+1,f
  3088  056A  02F5               	subwf	___lwdiv@dividend+1,f
  3089  056B                     l1322:
  3090  056B  1477               	bsf	___lwdiv@quotient,0
  3091  056C                     l1324:
  3092  056C  3001               	movlw	1
  3093  056D                     u765:
  3094  056D  1003               	clrc
  3095  056E  0CF3               	rrf	___lwdiv@divisor+1,f
  3096  056F  0CF2               	rrf	___lwdiv@divisor,f
  3097  0570  3EFF               	addlw	-1
  3098  0571  1D03               	skipz
  3099  0572  2D6D               	goto	u765
  3100  0573                     l1326:
  3101  0573  3001               	movlw	1
  3102  0574  02F9               	subwf	___lwdiv@counter,f
  3103  0575  1D03               	btfss	3,2
  3104  0576  2D78               	goto	u771
  3105  0577  2D79               	goto	u770
  3106  0578                     u771:
  3107  0578  2D54               	goto	l1318
  3108  0579                     u770:
  3109  0579                     l1328:
  3110  0579  0878               	movf	___lwdiv@quotient+1,w
  3111  057A  00F3               	movwf	?___lwdiv+1
  3112  057B  0877               	movf	___lwdiv@quotient,w
  3113  057C  00F2               	movwf	?___lwdiv
  3114  057D                     l515:
  3115  057D  0008               	return
  3116  057E                     __end_of___lwdiv:
  3117                           
  3118                           	psect	text14
  3119  038A                     __ptext14:	
  3120 ;; *************** function _atoi *****************
  3121 ;; Defined at:
  3122 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  s               1    wreg     PTR const unsigned char 
  3125 ;;		 -> concat@s1(20), 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3128 ;;		 -> concat@s1(20), 
  3129 ;;  a               2    3[BANK0 ] int 
  3130 ;;  sign            1    2[BANK0 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2    8[COMMON] int 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         2       0       0       0       0
  3141 ;;      Locals:         0       4       0       0       0
  3142 ;;      Temps:          0       2       0       0       0
  3143 ;;      Totals:         2       6       0       0       0
  3144 ;;Total ram usage:        8 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    2
  3147 ;; This function calls:
  3148 ;;		___wmul
  3149 ;;		_isdigit
  3150 ;; This function is called by:
  3151 ;;		_concat
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _atoi
  3157  038A                     _atoi:
  3158                           
  3159                           ;incstack = 0
  3160                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3161                           ;atoi@s stored from wreg
  3162  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3163  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3164  038C  00A5               	movwf	atoi@s
  3165  038D                     l1874:
  3166  038D  2B92               	goto	l1878
  3167  038E                     l1876:
  3168  038E  3001               	movlw	1
  3169  038F  00A0               	movwf	??_atoi
  3170  0390  0820               	movf	??_atoi,w
  3171  0391  07A5               	addwf	atoi@s,f
  3172  0392                     l1878:
  3173  0392  0825               	movf	atoi@s,w
  3174  0393  0084               	movwf	4
  3175  0394  3020               	movlw	32
  3176  0395  1383               	bcf	3,7	;select IRP bank0
  3177  0396  0600               	xorwf	0,w
  3178  0397  1903               	btfsc	3,2
  3179  0398  2B9A               	goto	u1551
  3180  0399  2B9B               	goto	u1550
  3181  039A                     u1551:
  3182  039A  2B8E               	goto	l1876
  3183  039B                     u1550:
  3184  039B                     l1880:
  3185  039B  0825               	movf	atoi@s,w
  3186  039C  0084               	movwf	4
  3187  039D  3009               	movlw	9
  3188  039E  0600               	xorwf	0,w
  3189  039F  1903               	btfsc	3,2
  3190  03A0  2BA2               	goto	u1561
  3191  03A1  2BA3               	goto	u1560
  3192  03A2                     u1561:
  3193  03A2  2B8E               	goto	l1876
  3194  03A3                     u1560:
  3195  03A3                     l1882:
  3196  03A3  01A3               	clrf	atoi@a
  3197  03A4  01A4               	clrf	atoi@a+1
  3198  03A5  01A2               	clrf	atoi@sign
  3199  03A6                     l1884:
  3200  03A6  0825               	movf	atoi@s,w
  3201  03A7  0084               	movwf	4
  3202  03A8  302D               	movlw	45
  3203  03A9  0600               	xorwf	0,w
  3204  03AA  1D03               	btfss	3,2
  3205  03AB  2BAD               	goto	u1571
  3206  03AC  2BAE               	goto	u1570
  3207  03AD                     u1571:
  3208  03AD  2BB7               	goto	l1888
  3209  03AE                     u1570:
  3210  03AE                     l1886:
  3211  03AE  3001               	movlw	1
  3212  03AF  00A0               	movwf	??_atoi
  3213  03B0  0820               	movf	??_atoi,w
  3214  03B1  07A2               	addwf	atoi@sign,f
  3215  03B2  3001               	movlw	1
  3216  03B3  00A0               	movwf	??_atoi
  3217  03B4  0820               	movf	??_atoi,w
  3218  03B5  07A5               	addwf	atoi@s,f
  3219  03B6  2BE9               	goto	l1896
  3220  03B7                     l1888:
  3221  03B7  0825               	movf	atoi@s,w
  3222  03B8  0084               	movwf	4
  3223  03B9  302B               	movlw	43
  3224  03BA  0600               	xorwf	0,w
  3225  03BB  1D03               	btfss	3,2
  3226  03BC  2BBE               	goto	u1581
  3227  03BD  2BBF               	goto	u1580
  3228  03BE                     u1581:
  3229  03BE  2BE9               	goto	l1896
  3230  03BF                     u1580:
  3231  03BF                     l1890:
  3232  03BF  3001               	movlw	1
  3233  03C0  00A0               	movwf	??_atoi
  3234  03C1  0820               	movf	??_atoi,w
  3235  03C2  07A5               	addwf	atoi@s,f
  3236  03C3  2BE9               	goto	l1896
  3237  03C4                     l1892:
  3238  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3239  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3240  03C6  0825               	movf	atoi@s,w
  3241  03C7  0084               	movwf	4
  3242  03C8  0824               	movf	atoi@a+1,w
  3243  03C9  00F3               	movwf	___wmul@multiplier+1
  3244  03CA  0823               	movf	atoi@a,w
  3245  03CB  00F2               	movwf	___wmul@multiplier
  3246  03CC  300A               	movlw	10
  3247  03CD  00F4               	movwf	___wmul@multiplicand
  3248  03CE  3000               	movlw	0
  3249  03CF  00F5               	movwf	___wmul@multiplicand+1
  3250  03D0  120A  118A  2688  120A  118A  	fcall	___wmul
  3251  03D5  1383               	bcf	3,7	;select IRP bank0
  3252  03D6  0800               	movf	0,w
  3253  03D7  0772               	addwf	?___wmul,w
  3254  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3255  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3256  03DA  00A0               	movwf	??_atoi
  3257  03DB  3000               	movlw	0
  3258  03DC  1803               	skipnc
  3259  03DD  3001               	movlw	1
  3260  03DE  0773               	addwf	?___wmul+1,w
  3261  03DF  00A1               	movwf	??_atoi+1
  3262  03E0  0820               	movf	??_atoi,w
  3263  03E1  3ED0               	addlw	208
  3264  03E2  00A3               	movwf	atoi@a
  3265  03E3  0821               	movf	??_atoi+1,w
  3266  03E4  1803               	skipnc
  3267  03E5  3E01               	addlw	1
  3268  03E6  3EFF               	addlw	255
  3269  03E7  00A4               	movwf	atoi@a+1
  3270  03E8  2BBF               	goto	l1890
  3271  03E9                     l1896:
  3272  03E9  0825               	movf	atoi@s,w
  3273  03EA  0084               	movwf	4
  3274  03EB  0800               	movf	0,w
  3275  03EC  120A  118A  2703  120A  118A  	fcall	_isdigit
  3276  03F1  1803               	btfsc	3,0
  3277  03F2  2BF4               	goto	u1591
  3278  03F3  2BF5               	goto	u1590
  3279  03F4                     u1591:
  3280  03F4  2BC4               	goto	l1892
  3281  03F5                     u1590:
  3282  03F5                     l1898:
  3283  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3284  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  3285  03F7  0822               	movf	atoi@sign,w
  3286  03F8  1903               	btfsc	3,2
  3287  03F9  2BFB               	goto	u1601
  3288  03FA  2BFC               	goto	u1600
  3289  03FB                     u1601:
  3290  03FB  2C08               	goto	l1904
  3291  03FC                     u1600:
  3292  03FC                     l1900:
  3293  03FC  0923               	comf	atoi@a,w
  3294  03FD  00A0               	movwf	??_atoi
  3295  03FE  0924               	comf	atoi@a+1,w
  3296  03FF  00A1               	movwf	??_atoi+1
  3297  0400  0AA0               	incf	??_atoi,f
  3298  0401  1903               	skipnz
  3299  0402  0AA1               	incf	??_atoi+1,f
  3300  0403  0820               	movf	??_atoi,w
  3301  0404  00F8               	movwf	?_atoi
  3302  0405  0821               	movf	??_atoi+1,w
  3303  0406  00F9               	movwf	?_atoi+1
  3304  0407  2C0C               	goto	l706
  3305  0408                     l1904:
  3306  0408  0824               	movf	atoi@a+1,w
  3307  0409  00F9               	movwf	?_atoi+1
  3308  040A  0823               	movf	atoi@a,w
  3309  040B  00F8               	movwf	?_atoi
  3310  040C                     l706:
  3311  040C  0008               	return
  3312  040D                     __end_of_atoi:
  3313                           
  3314                           	psect	text15
  3315  0703                     __ptext15:	
  3316 ;; *************** function _isdigit *****************
  3317 ;; Defined at:
  3318 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  c               1    wreg     unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  c               1    3[COMMON] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;		None               void
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         0       0       0       0       0
  3333 ;;      Locals:         2       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0
  3335 ;;      Totals:         2       0       0       0       0
  3336 ;;Total ram usage:        2 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_atoi
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _isdigit
  3348  0703                     _isdigit:
  3349                           
  3350                           ;incstack = 0
  3351                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3352                           ;isdigit@c stored from wreg
  3353  0703  00F3               	movwf	isdigit@c
  3354  0704                     l1368:
  3355  0704  01F2               	clrf	_isdigit$934
  3356  0705                     l1370:
  3357  0705  303A               	movlw	58
  3358  0706  0273               	subwf	isdigit@c,w
  3359  0707  1803               	skipnc
  3360  0708  2F0A               	goto	u881
  3361  0709  2F0B               	goto	u880
  3362  070A                     u881:
  3363  070A  2F13               	goto	l1376
  3364  070B                     u880:
  3365  070B                     l1372:
  3366  070B  3030               	movlw	48
  3367  070C  0273               	subwf	isdigit@c,w
  3368  070D  1C03               	skipc
  3369  070E  2F10               	goto	u891
  3370  070F  2F11               	goto	u890
  3371  0710                     u891:
  3372  0710  2F13               	goto	l1376
  3373  0711                     u890:
  3374  0711                     l1374:
  3375  0711  01F2               	clrf	_isdigit$934
  3376  0712  0AF2               	incf	_isdigit$934,f
  3377  0713                     l1376:
  3378  0713  0C72               	rrf	_isdigit$934,w
  3379  0714                     l711:
  3380  0714  0008               	return
  3381  0715                     __end_of_isdigit:
  3382                           
  3383                           	psect	text16
  3384  0688                     __ptext16:	
  3385 ;; *************** function ___wmul *****************
  3386 ;; Defined at:
  3387 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  multiplier      2    2[COMMON] unsigned int 
  3390 ;;  multiplicand    2    4[COMMON] unsigned int 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  product         2    6[COMMON] unsigned int 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2    2[COMMON] unsigned int 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         4       0       0       0       0
  3403 ;;      Locals:         2       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0
  3405 ;;      Totals:         6       0       0       0       0
  3406 ;;Total ram usage:        6 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_atoi
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function ___wmul
  3418  0688                     ___wmul:
  3419  0688                     l1354:	
  3420                           ;incstack = 0
  3421                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3422                           
  3423  0688  01F6               	clrf	___wmul@product
  3424  0689  01F7               	clrf	___wmul@product+1
  3425  068A                     l1356:
  3426  068A  1C72               	btfss	___wmul@multiplier,0
  3427  068B  2E8D               	goto	u841
  3428  068C  2E8E               	goto	u840
  3429  068D                     u841:
  3430  068D  2E94               	goto	l243
  3431  068E                     u840:
  3432  068E                     l1358:
  3433  068E  0874               	movf	___wmul@multiplicand,w
  3434  068F  07F6               	addwf	___wmul@product,f
  3435  0690  1803               	skipnc
  3436  0691  0AF7               	incf	___wmul@product+1,f
  3437  0692  0875               	movf	___wmul@multiplicand+1,w
  3438  0693  07F7               	addwf	___wmul@product+1,f
  3439  0694                     l243:
  3440  0694  3001               	movlw	1
  3441  0695                     u855:
  3442  0695  1003               	clrc
  3443  0696  0DF4               	rlf	___wmul@multiplicand,f
  3444  0697  0DF5               	rlf	___wmul@multiplicand+1,f
  3445  0698  3EFF               	addlw	-1
  3446  0699  1D03               	skipz
  3447  069A  2E95               	goto	u855
  3448  069B                     l1360:
  3449  069B  3001               	movlw	1
  3450  069C                     u865:
  3451  069C  1003               	clrc
  3452  069D  0CF3               	rrf	___wmul@multiplier+1,f
  3453  069E  0CF2               	rrf	___wmul@multiplier,f
  3454  069F  3EFF               	addlw	-1
  3455  06A0  1D03               	skipz
  3456  06A1  2E9C               	goto	u865
  3457  06A2                     l1362:
  3458  06A2  0872               	movf	___wmul@multiplier,w
  3459  06A3  0473               	iorwf	___wmul@multiplier+1,w
  3460  06A4  1D03               	btfss	3,2
  3461  06A5  2EA7               	goto	u871
  3462  06A6  2EA8               	goto	u870
  3463  06A7                     u871:
  3464  06A7  2E8A               	goto	l1356
  3465  06A8                     u870:
  3466  06A8                     l1364:
  3467  06A8  0877               	movf	___wmul@product+1,w
  3468  06A9  00F3               	movwf	?___wmul+1
  3469  06AA  0876               	movf	___wmul@product,w
  3470  06AB  00F2               	movwf	?___wmul
  3471  06AC                     l245:
  3472  06AC  0008               	return
  3473  06AD                     __end_of___wmul:
  3474                           
  3475                           	psect	text17
  3476  0634                     __ptext17:	
  3477 ;; *************** function _isr *****************
  3478 ;; Defined at:
  3479 ;;		line 66 in file "Lab05.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0
  3495 ;;      Temps:          2       0       0       0       0
  3496 ;;      Totals:         2       0       0       0       0
  3497 ;;Total ram usage:        2 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		Interrupt level 1
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function _isr
  3508  0634                     _isr:
  3509  0634                     i1l1728:
  3510                           
  3511                           ;Lab05.c: 70:     if (RBIF == 1)
  3512  0634  1C0B               	btfss	11,0	;volatile
  3513  0635  2E37               	goto	u136_21
  3514  0636  2E38               	goto	u136_20
  3515  0637                     u136_21:
  3516  0637  2E58               	goto	i1l108
  3517  0638                     u136_20:
  3518  0638                     i1l1730:
  3519                           
  3520                           ;Lab05.c: 71:     {;Lab05.c: 72:         if (PORTBbits.RB0 == 0)
  3521  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3523  063A  1806               	btfsc	6,0	;volatile
  3524  063B  2E3D               	goto	u137_21
  3525  063C  2E3E               	goto	u137_20
  3526  063D                     u137_21:
  3527  063D  2E48               	goto	i1l1734
  3528  063E                     u137_20:
  3529  063E                     i1l1732:
  3530                           
  3531                           ;Lab05.c: 73:         {;Lab05.c: 74:             count = count + 1;
  3532  063E  1683               	bsf	3,5	;RP0=1, select bank1
  3533  063F  1303               	bcf	3,6	;RP1=0, select bank1
  3534  0640  0824               	movf	_count^(0+128),w
  3535  0641  3E01               	addlw	1
  3536  0642  00A4               	movwf	_count^(0+128)
  3537  0643  0825               	movf	(_count+1)^(0+128),w
  3538  0644  1803               	skipnc
  3539  0645  3E01               	addlw	1
  3540  0646  3E00               	addlw	0
  3541  0647  00A5               	movwf	(_count+1)^(0+128)
  3542  0648                     i1l1734:
  3543                           
  3544                           ;Lab05.c: 76:         if (PORTBbits.RB1 == 0)
  3545  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0649  1886               	btfsc	6,1	;volatile
  3547  064A  2E4C               	goto	u138_21
  3548  064B  2E4D               	goto	u138_20
  3549  064C                     u138_21:
  3550  064C  2E57               	goto	i1l1738
  3551  064D                     u138_20:
  3552  064D                     i1l1736:
  3553                           
  3554                           ;Lab05.c: 77:         {;Lab05.c: 78:             count = count - 1;
  3555  064D  1683               	bsf	3,5	;RP0=1, select bank1
  3556  064E  1303               	bcf	3,6	;RP1=0, select bank1
  3557  064F  0824               	movf	_count^(0+128),w
  3558  0650  3EFF               	addlw	255
  3559  0651  00A4               	movwf	_count^(0+128)
  3560  0652  0825               	movf	(_count+1)^(0+128),w
  3561  0653  1803               	skipnc
  3562  0654  3E01               	addlw	1
  3563  0655  3EFF               	addlw	255
  3564  0656  00A5               	movwf	(_count+1)^(0+128)
  3565  0657                     i1l1738:
  3566                           
  3567                           ;Lab05.c: 80:         INTCONbits.RBIF = 0;
  3568  0657  100B               	bcf	11,0	;volatile
  3569  0658                     i1l108:
  3570  0658  0871               	movf	??_isr+1,w
  3571  0659  008A               	movwf	10
  3572  065A  0E70               	swapf	??_isr,w
  3573  065B  0083               	movwf	3
  3574  065C  0EFE               	swapf	btemp,f
  3575  065D  0E7E               	swapf	btemp,w
  3576  065E  0009               	retfie
  3577  065F                     __end_of_isr:
  3578  0002                     
  3579                           	psect	intentry
  3580  0004                     __pintentry:	
  3581                           ;incstack = 0
  3582                           ; Regs used in _isr: [wreg+status,2+status,0]
  3583                           
  3584  0004                     interrupt_function:
  3585  007E                     saved_w	set	btemp
  3586  0004  00FE               	movwf	btemp
  3587  0005  0E03               	swapf	3,w
  3588  0006  00F0               	movwf	??_isr
  3589  0007  080A               	movf	10,w
  3590  0008  00F1               	movwf	??_isr+1
  3591  0009  120A  118A  2E34   	ljmp	_isr
  3592                           
  3593                           	psect	functab
  3594  0027                     __pfunctab:
  3595  0027                     __fptable:
  3596  0027                     fptable:
  3597  0027  00FF               	movwf	(btemp+1)& (0+127)
  3598  0028  3000               	movlw	high fptable
  3599  0029  008A               	movwf	10
  3600  002A  087F               	movf	(btemp+1)& (0+127),w
  3601  002B  0782               	addwf	2,f
  3602  002C                     fpbase:
  3603  002C  282C               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3604  002D                     fp__putch:
  3605  002D  120A  118A  2F15   	ljmp	_putch
  3606  0030                     __end_of__fptable:
  3607  007E                     btemp	set	126	;btemp
  3608  007E                     wtemp0	set	126
  3609                           
  3610                           	psect	config
  3611                           
  3612                           ;Config register CONFIG1 @ 0x2007
  3613                           ;	Oscillator Selection bits
  3614                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3615                           ;	Watchdog Timer Enable bit
  3616                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3617                           ;	Power-up Timer Enable bit
  3618                           ;	PWRTE = OFF, PWRT disabled
  3619                           ;	RE3/MCLR pin function select bit
  3620                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3621                           ;	Code Protection bit
  3622                           ;	CP = OFF, Program memory code protection is disabled
  3623                           ;	Data Code Protection bit
  3624                           ;	CPD = OFF, Data memory code protection is disabled
  3625                           ;	Brown Out Reset Selection bits
  3626                           ;	BOREN = OFF, BOR disabled
  3627                           ;	Internal External Switchover bit
  3628                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3629                           ;	Fail-Safe Clock Monitor Enabled bit
  3630                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3631                           ;	Low Voltage Programming Enable bit
  3632                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3633                           ;	In-Circuit Debugger Mode bit
  3634                           ;	DEBUG = 0x1, unprogrammed default
  3635  2007                     	org	8199
  3636  2007  20D4               	dw	8404
  3637                           
  3638                           ;Config register CONFIG2 @ 0x2008
  3639                           ;	Brown-out Reset Selection bit
  3640                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3641                           ;	Flash Program Memory Self Write Enable bits
  3642                           ;	WRT = OFF, Write protection off
  3643  2008                     	org	8200
  3644  2008  3FFF               	dw	16383

Data Sizes:
    Strings     122
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     73      77
    BANK1            80      5      15
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[27]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[30]), STR_2(CODE[2]), STR_1(CODE[21]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_6(CODE[27]), STR_5(CODE[21]), STR_4(CODE[20]), STR_3(CODE[30]), 
		 -> STR_2(CODE[2]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S936__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S936__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _Text->_division
    _division->___awmod
    _concat->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _Text->_concat
    _printf->__doprnt
    _division->___awdiv
    _concat->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Text

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8623
                               _Text
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Text                                                 5     5      0    8623
                                              0 BANK1      5     5      0
                             _concat
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2733
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concat                                              47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Text
     _concat
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      68       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       F       7       18.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      68      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Aug 13 12:48:55 2021

                      pc 0002             ___awdiv@sign 0021                       fsr 0004  
    ___wmul@multiplicand 0074                      l130 00B7                      l123 009C  
                    l151 05F7                      l119 05BA                      l145 0177  
                    l154 0715                      l138 00D8                      l243 0694  
                    l148 0477                      l245 06AC                      l157 071D  
                    l409 0539                      l515 057D                      l525 0633  
                    l711 0714                      l720 06E8                      l706 040C  
                    l396 04E0                      l765 06CD                      l758 02AD  
                    l774 0687                      u700 071B                      u701 071A  
                    u710 0542                      u711 0541                      u730 0554  
                    u731 0553                      u725 0546                      u750 0565  
                    u751 0564                      u840 068E                      u841 068D  
                    u745 0555                      u770 0579                      u771 0578  
                    u755 0561                      u765 056D                      u870 06A8  
                    u871 06A7                      u855 0695                      u880 070B  
                    u865 069C                      u881 070A                      u890 0711  
                    u891 0710                      _dec 007A                      _cen 0069  
                    _con 00A6                      _isr 0634                      _var 00A7  
                    fsr0 0004                      _uni 00A8                      indf 0000  
           ___awmod@sign 0078                     l2000 0090                     l2010 00BD  
                   l2002 0096                     l1300 0715                     l2020 00ED  
                   l2004 00A2                     l1310 0542                     l1302 071B  
                   l2030 015F                     l2014 00CC                     l2006 00AB  
                   l1320 0565                     l1312 0545                     l2024 00F3  
                   l2016 00D2                     l2008 00B1                     l2032 06E9  
                   l1322 056B                     l1314 054C                     l1306 053A  
                   l2026 00F9                     l2018 00DE                     l2034 06EE  
                   l1324 056C                     l1316 0550                     l1308 053C  
                   l2060 01BB                     l2028 0151                     l2036 06F4  
                   l1326 0573                     l1318 0554                     l2038 06FA  
                   l1360 069B                     l1328 0579                     l1362 06A2  
                   l1354 0688                     l1370 0705                     l1364 06A8  
                   l1356 068A                     l1372 070B                     l1620 0585  
                   l1358 068E                     l1374 0711                     l1470 0672  
                   l1630 0594                     l1622 0586                     l1376 0713  
                   l1368 0704                     l1800 01A1                     l1472 067A  
                   l1464 0660                     l1560 04ED                     l1552 04E1  
                   l1640 059A                     l1632 0595                     l1624 058F  
                   l1810 01D4                     l1802 01A8                     l1466 0665  
                   l1570 0506                     l1562 04F1                     l1554 04E2  
                   l1650 05A5                     l1642 059B                     l1634 0596  
                   l1626 0592                     l1618 057E                     l1900 03FC  
                   l1812 01D8                     l1468 0669                     l1580 0525  
                   l1572 050A                     l1564 04F6                     l1556 04E6  
                   l1660 05AE                     l1652 05A8                     l1644 059C  
                   l1636 0598                     l1628 0593                     l1830 020F  
                   l1822 01E3                     l1814 01DC                     l1806 01A9  
                   l1910 047B                     l1574 050E                     l1566 04FC  
                   l1582 052B                     l1558 04EB                     l1670 05B7  
                   l1662 05B1                     l1654 05A9                     l1646 059F  
                   l1638 0599                     l1904 0408                     l1840 0239  
                   l1832 0217                     l1816 01E1                     l1808 01C6  
                   l1920 048F                     l1912 047F                     l1584 0530  
                   l1576 0518                     l1568 04FF                     l1672 05B8  
                   l1664 05B2                     l1656 05AA                     l1648 05A3  
                   l1770 0600                     l1842 0269                     l1850 028C  
                   l1834 0224                     l1826 01FF                     l1930 04A5  
                   l1922 0493                     l1914 0484                     l1586 0535  
                   l1578 051E                     l1674 05B9                     l1666 05B3  
                   l1658 05AD                     l1780 061C                     l1772 0603  
                   l1844 0271                     l1836 022C                     l1828 0209  
                   l1852 0297                     l1940 04C5                     l1932 04A9  
                   l1924 0495                     l1916 0486                     l1908 0478  
                   l1668 05B4                     l1782 0622                     l1774 060A  
                   l1846 027E                     l1838 0232                     l1854 02AB  
                   l1790 017B                     l1870 06C7                     l1862 06B0  
                   l1942 04CC                     l1934 04AD                     l1926 049B  
                   l1918 048A                     l1880 039B                     l1784 0629  
                   l1776 060E                     l1768 05F8                     l1848 0286  
                   l1792 017C                     l1864 06B4                     l1936 04BE  
                   l1928 049E                     l1944 04D2                     l1952 040E  
                   l1960 06D1                     l1890 03BF                     l1882 03A3  
                   l1874 038D                     l1778 0612                     l1786 062F  
                   l1794 0182                     l1866 06B5                     l1970 05BB  
                   l1946 04D7                     l1938 04C4                     l1954 0468  
                   l1962 06D2                     l1892 03C4                     l1884 03A6  
                   l1876 038E                     l1796 018A                     l1868 06B9  
                   l1972 05DB                     l1948 04DC                     l1956 046D  
                   l1964 06D6                     l1980 0030                     l1886 03AE  
                   l1878 0392                     l1798 0199                     l1974 05E7  
                   l1958 0472                     l1966 06DA                     l1990 005E  
                   l1982 003E                     l1896 03E9                     l1888 03B7  
                   l1976 05F3                     l1992 006C                     l1984 0046  
                   l1898 03F5                     l1994 0070                     l1986 004C  
                   l1996 007E                     l1988 005A                     l1998 0082  
                   ?_isr 0070                     STR_1 035E                     STR_2 0385  
                   STR_3 0310                     STR_4 0373                     STR_5 0349  
                   STR_6 032E                     STR_7 0387                     STR_8 0387  
                   u1000 0671                     u1001 0670                     u1010 0687  
                   u1011 0686                     u1200 04FC                     u1201 04FB  
                   u1220 050E                     u1221 050D                     u1230 0518  
                   u1231 0517                     u1215 0500                     u1410 0612  
                   u1250 052B                     u1411 0611                     u1251 052A  
                   u1235 0514                     u1420 061C                     u1500 020F  
                   u1260 0530                     u1180 04E6                     u1421 061B  
                   u1405 0604                     u1501 020E                     u1261 052F  
                   u1245 051F                     u1181 04E5                     u1510 0217  
                   u1190 04F1                     u1511 0216                     u1191 04F0  
                   u1600 03FC                     u1440 062F                     u1520 0271  
                   u1601 03FB                     u1441 062E                     u1425 0618  
                   u1521 0270                     u1530 0297                     u1450 0182  
                   u1610 047F                     u1435 0623                     u1531 0296  
                   u1451 0181                     u1611 047E                     u1540 02AB  
                   u1460 018A                     u1700 04D7                     u1620 048A  
                   u1541 02AA                     u1461 0189                     u1701 04D6  
                   u1621 0489                     u1550 039B                     u1390 0600  
                   u1470 01D8                     u1630 049B                     u1710 00A2  
                   u1551 039A                     u1391 05FF                     u1471 01D7  
                   u1631 049A                     u1711 00A1                     u1560 03A3  
                   u1480 01FE                     u1720 00B1                     u1561 03A2  
                   u1481 01FD                     u1721 00B0                     u1570 03AE  
                   u1490 0209                     u1650 04AD                     u1730 00BD  
                   u1571 03AD                     u1491 0208                     u1651 04AC  
                   u1731 00BC                     u1580 03BF                     u1740 00CC  
                   u1581 03BE                     u1485 01FA                     u1645 049F  
                   u1741 00CB                     u1590 03F5                     u1670 04BE  
                   u1750 00D2                     u1591 03F4                     u1671 04BD  
                   u1751 00D1                     u1807 0038                     u1760 00DE  
                   u1665 04AE                     u1761 00DD                     u1817 0054  
                   u1690 04D2                     u1770 00ED                     u1691 04D1  
                   u1675 04BA                     u1771 00EC                     u1827 0066  
                   u1780 00F3                     u1685 04C6                     u1781 00F2  
                   u1837 0078                     u1790 00F9                     u1791 00F8  
                   u1847 008A                     u1857 0159                     _RBIF 0058  
                   _RCIF 0065                     _TXIF 0064                     _WPUB 0095  
                   _Text 0030                     _atoi 038A                     _main 06E9  
                   _full 00A0                     _tens 006B                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_Text 0070  
                  ?_atoi 0078                    ?_main 0070          __end_of___awdiv 04E1  
        __end_of___awmod 053A                    _ANSEL 0188          ___awdiv@divisor 0072  
        __end_of___lwdiv 057E                    i1l108 0658          __end_of___lwmod 0634  
        ___awdiv@counter 0020                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009          __end_of__doprnt 02AE  
                  _TRISA 0085                    _TRISD 0088                    _TXREG 0019  
        __end_of_dpowers 0310                    _count 00A4          __end_of_isdigit 0715  
                  _valor 00A9                    atoi@a 0023                    _setup 057E  
                  atoi@s 0025                    _putch 0715                    fpbase 002C  
                  _units 006A                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 06CE          __initialization 000F  
           __end_of_Text 0178             __end_of_atoi 040D             __end_of_main 0703  
                 ??_Text 00AA                   ??_atoi 0020                   ??_main 007A  
       ___awdiv@dividend 0074                   ?_setup 0070                   ?_putch 0072  
                 _ANSELH 0189                   i1l1730 0638                   i1l1732 063E  
                 i1l1734 0648                   i1l1736 064D                   i1l1728 0634  
                 i1l1738 0657                   u136_20 0638                   u136_21 0637  
                 u137_20 063E                   u137_21 063D                   u138_20 064D  
                 u138_21 064C                   _SPBRGH 009A         __end_of__fptable 0030  
       __end_of_division 0478                   ___wmul 0688                ??___awdiv 0076  
              ??___awmod 0076                ??___lwdiv 0076                ??___lwmod 0024  
                 _concat 05BB                ??__doprnt 0028         ___awdiv@quotient 0022  
        ___awmod@divisor 0072                   _select 00A2             __doprnt@flag 002B  
        ___awmod@counter 0077                   _printf 06CE             __doprnt@prec 002C  
                 _strcat 065F                   fptable 0027                   fptotal 0002  
              ??_isdigit 0072                   saved_w 007E                ??_sprintf 0034  
__end_of__initialization 0023           __pcstackCOMMON 0070            __end_of_setup 05BB  
          __end_of_putch 071E            division@valor 0079           _OPTION_REGbits 0081  
             __doprnt@ap 0027               __doprnt@pb 0030                  ??_setup 0072  
                ??_putch 0073               __pbssBANK0 0069               __pbssBANK1 00A0  
             __pmaintext 06E9                  ?___wmul 0072               __pintentry 0004  
                ?_concat 003A                  ?_printf 0031                  ?_strcat 0072  
             __stringtab 0300                ?_division 0070                  ___awdiv 0478  
                ___awmod 04E1          __size_of___wmul 0025                  ___lwdiv 053A  
                ___lwmod 05F8          __size_of_concat 003D                  __doprnt 0178  
                __ptext1 057E                  __ptext2 0030                  __ptext3 06CE  
                __ptext4 040D                  __ptext5 04E1                  __ptext6 0478  
                __ptext7 05BB                  __ptext8 065F                  __ptext9 06AD  
        __size_of_printf 001B          __size_of_strcat 0029                  _dpowers 0306  
                _isdigit 0703             __size_of_isr 002B         ___awmod@dividend 0074  
                _residuo 007B                  concat@a 003A                  concat@b 003C  
                concat@c 0067                  _sprintf 06AD     end_of_initialization 0023  
             ??_division 0024                _RCSTAbits 0018                  printf@f 0036  
              _PORTBbits 0006                _TRISBbits 0086                _TXSTAbits 0098  
         __end_of___wmul 06AD              _BAUDCTLbits 0187           __end_of_concat 05F8  
         __end_of_printf 06E9           __end_of_strcat 0688      start_initialization 000F  
            __end_of_isr 065F                 ??___wmul 0076              __doprnt@val 002D  
               ??_concat 003E                 ??_printf 0033                 ??_strcat 0073  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00AA        __size_of__fptable 0009                __doprnt@c 002F  
              __doprnt@f 0026        __size_of_division 006B         ___lwdiv@dividend 0074  
              __pfunctab 0027                 ?___awdiv 0072                 ?___awmod 0072  
               ?___lwdiv 0072                 ?___lwmod 0020                 ?__doprnt 0026  
              __pstrings 0300                 ?_isdigit 0070         ___lwdiv@quotient 0077  
               ?_sprintf 0031           __size_of_setup 003D           __size_of_putch 0009  
      interrupt_function 0004           ___wmul@product 0076                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C              __stringbase 0305  
      ___wmul@multiplier 0072         __size_of___awdiv 0069         __size_of___awmod 0059  
       __size_of___lwdiv 0044         __size_of___lwmod 003C         __size_of__doprnt 0136  
     __end_of__stringtab 0306              _isdigit$934 0072                 __fptable 0027  
             strcat@from 0072         __size_of_isdigit 0012          ___lwdiv@divisor 0072  
        ___lwdiv@counter 0079                 __ptext10 0178                 __ptext11 0715  
               __ptext12 05F8                 __ptext13 053A                 __ptext14 038A  
               __ptext15 0703                 __ptext16 0688                 __ptext17 0634  
               _division 040D         __size_of_sprintf 0021            __size_of_Text 0148  
          __size_of_atoi 0083            __size_of_main 001A                 _hundreds 006C  
               concat@s1 0053                 concat@s2 003F                 atoi@sign 0022  
               fp__putch 002D                putch@data 0072               _INTCONbits 000B  
               isdigit@c 0073                 intlevel1 0027                sprintf@ap 0037  
              sprintf@pb 0038                sprintf@wh 0036         ___lwmod@dividend 0022  
              stringcode 0300               _OSCCONbits 008F                 printf@ap 0035  
               printf@pb 0037                 sprintf@f 0031                 strcat@cp 0075  
               strcat@to 0074          ___lwmod@divisor 0020          ___lwmod@counter 0025  
               stringdir 0300                 stringtab 0300  
