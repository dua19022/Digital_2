

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 19 21:20:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0122                     __pidataBANK0:
   215                           
   216                           ;initializer for _tabla
   217  0122  343F               	retlw	63
   218  0123  3406               	retlw	6
   219  0124  345B               	retlw	91
   220  0125  344F               	retlw	79
   221  0126  3466               	retlw	102
   222  0127  346D               	retlw	109
   223  0128  347D               	retlw	125
   224  0129  3407               	retlw	7
   225  012A  347F               	retlw	127
   226  012B  346F               	retlw	111
   227  012C  3477               	retlw	119
   228  012D  347C               	retlw	124
   229  012E  3439               	retlw	57
   230  012F  345E               	retlw	94
   231  0130  3479               	retlw	121
   232  0131  3471               	retlw	113
   233                           
   234                           	psect	nvBANK0
   235  0033                     __pnvBANK0:
   236  0033                     _flag:
   237  0033                     	ds	2
   238  0006                     _PORTB	set	6
   239  0005                     _PORTA	set	5
   240  0007                     _PORTC	set	7
   241  0006                     _PORTBbits	set	6
   242  0001                     _TMR0	set	1
   243  000B                     _INTCONbits	set	11
   244  0008                     _PORTD	set	8
   245  0005                     _PORTAbits	set	5
   246  001E                     _ADRESH	set	30
   247  001F                     _ADCON0bits	set	31
   248  000C                     _PIR1bits	set	12
   249  002C                     _RA4	set	44
   250  00F9                     _GO	set	249
   251  0058                     _RBIF	set	88
   252  002E                     _RA6	set	46
   253  002D                     _RA5	set	45
   254  005A                     _T0IF	set	90
   255  009F                     _ADCON1bits	set	159
   256  008C                     _PIE1bits	set	140
   257  0096                     _IOCBbits	set	150
   258  0095                     _WPUB	set	149
   259  0081                     _OPTION_REGbits	set	129
   260  008F                     _OSCCONbits	set	143
   261  0088                     _TRISD	set	136
   262  0087                     _TRISC	set	135
   263  0086                     _TRISBbits	set	134
   264  0085                     _TRISAbits	set	133
   265  0189                     _ANSELH	set	393
   266  0188                     _ANSEL	set	392
   267                           
   268                           	psect	cinit
   269  0011                     start_initialization:	
   270                           ; #config settings
   271                           
   272  0011                     __initialization:
   273                           
   274                           ; Initialize objects allocated to BANK0
   275  0011  1383               	bcf	3,7	;select IRP bank0
   276  0012  3030               	movlw	low (__pdataBANK0+16)
   277  0013  00FD               	movwf	btemp+-1
   278  0014  3001               	movlw	high __pidataBANK0
   279  0015  00FE               	movwf	btemp
   280  0016  3022               	movlw	low __pidataBANK0
   281  0017  00FF               	movwf	btemp+1
   282  0018  3020               	movlw	low __pdataBANK0
   283  0019  0084               	movwf	4
   284  001A  120A  118A  2113  120A  118A  	fcall	init_ram0
   285                           
   286                           ; Clear objects allocated to BANK0
   287  001F  01B5               	clrf	__pbssBANK0& (0+127)
   288  0020  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   289                           
   290                           ; Clear objects allocated to COMMON
   291  0021  01F0               	clrf	__pbssCOMMON& (0+127)
   292  0022  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   293  0023  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   294  0024  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   295  0025  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   296  0026                     end_of_initialization:	
   297                           ;End of C runtime variable initialization code
   298                           
   299  0026                     __end_of__initialization:
   300  0026  0183               	clrf	3
   301  0027  120A  118A  28C2   	ljmp	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMMON
   304  0070                     __pbssCOMMON:
   305  0070                     _ADC:
   306  0070                     	ds	2
   307  0072                     _nib_do:
   308  0072                     	ds	1
   309  0073                     _nib_up:
   310  0073                     	ds	1
   311  0074                     _display:
   312  0074                     	ds	1
   313                           
   314                           	psect	bssBANK0
   315  0035                     __pbssBANK0:
   316  0035                     _multi:
   317  0035                     	ds	2
   318                           
   319                           	psect	dataBANK0
   320  0020                     __pdataBANK0:
   321  0020                     _tabla:
   322  0020                     	ds	16
   323                           
   324                           	psect	inittext
   325  010F                     init_fetch0:	
   326                           ;	Called with low address in FSR and high address in W
   327                           
   328  010F  087E               	movf	btemp,w
   329  0110  008A               	movwf	10
   330  0111  087F               	movf	btemp+1,w
   331  0112  0082               	movwf	2
   332  0113                     init_ram0:	
   333                           ;Called with:
   334                           ;	high address of idata address in btemp 
   335                           ;	low address of idata address in btemp+1 
   336                           ;	low address of data in FSR
   337                           ;	high address + 1 of data in btemp-1
   338                           
   339  0113  120A  118A  210F  120A  118A  	fcall	init_fetch0
   340  0118  0080               	movwf	0
   341  0119  0A84               	incf	4,f
   342  011A  0804               	movf	4,w
   343  011B  067D               	xorwf	btemp+-1,w
   344  011C  1903               	btfsc	3,2
   345  011D  3400               	retlw	0
   346  011E  0AFF               	incf	btemp+1,f
   347  011F  1903               	btfsc	3,2
   348  0120  0AFE               	incf	btemp,f
   349  0121  2913               	goto	init_ram0
   350                           
   351                           	psect	cstackCOMMON
   352  0075                     __pcstackCOMMON:
   353  0075                     ?_setup:
   354  0075                     ?_nibbles_setup:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0075                     ?_alarma:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0075                     ?_isr:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0075                     ??_isr:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0075                     ?_main:	
   367                           ; 1 bytes @ 0x0
   368                           
   369                           
   370                           ; 1 bytes @ 0x0
   371  0075                     	ds	5
   372                           
   373                           	psect	cstackBANK0
   374  0030                     __pcstackBANK0:
   375  0030                     ??_setup:
   376  0030                     ??_nibbles_setup:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0030                     ??_alarma:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0030                     	ds	2
   385  0032                     nibbles_setup@display:
   386                           
   387                           ; 1 bytes @ 0x2
   388  0032                     	ds	1
   389  0033                     ??_main:
   390                           
   391                           	psect	maintext
   392  00C2                     __pmaintext:	
   393                           ; 1 bytes @ 0x3
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 109 in file "Lab01.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, pclath, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : B00/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels required when called:    2
   419 ;; This function calls:
   420 ;;		_alarma
   421 ;;		_nibbles_setup
   422 ;;		_setup
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _main
   430  00C2                     _main:
   431  00C2                     l1075:	
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   434                           
   435                           
   436                           ;Lab01.c: 111:     setup();
   437  00C2  120A  118A  2081  120A  118A  	fcall	_setup
   438  00C7                     l98:	
   439                           ;Lab01.c: 114:     while(1)
   440                           
   441                           
   442                           ;Lab01.c: 115:     {;Lab01.c: 117:         nibbles_setup(ADC);
   443  00C7  0870               	movf	_ADC,w
   444  00C8  120A  118A  20F9  120A  118A  	fcall	_nibbles_setup
   445  00CD                     l1077:
   446                           
   447                           ;Lab01.c: 118:         if (GO == 0){
   448  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   449  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   450  00CF  189F               	btfsc	31,1	;volatile
   451  00D0  28D2               	goto	u211
   452  00D1  28D3               	goto	u210
   453  00D2                     u211:
   454  00D2  28D9               	goto	l1081
   455  00D3                     u210:
   456  00D3                     l1079:
   457                           
   458                           ;Lab01.c: 119:             _delay((unsigned long)((100)*(250000/4000000.0)));
   459  00D3  28D4               	nop2	;2 cycle nop
   460  00D4  28D5               	nop2	;2 cycle nop
   461  00D5  28D6               	nop2	;2 cycle nop
   462                           
   463                           ;Lab01.c: 120:             GO = 1;
   464  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   465  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   466  00D8  149F               	bsf	31,1	;volatile
   467  00D9                     l1081:
   468                           
   469                           ;Lab01.c: 122:         alarma();
   470  00D9  120A  118A  20E2  120A  118A  	fcall	_alarma
   471  00DE  28C7               	goto	l98
   472  00DF  120A  118A  280E   	ljmp	start
   473  00E2                     __end_of_main:
   474                           
   475                           	psect	text1
   476  0081                     __ptext1:	
   477 ;; *************** function _setup *****************
   478 ;; Defined at:
   479 ;;		line 130 in file "Lab01.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _setup
   509  0081                     _setup:
   510  0081                     l981:	
   511                           ;incstack = 0
   512                           ; Regs used in _setup: [wreg+status,2+status,0]
   513                           
   514                           
   515                           ;Lab01.c: 132:     flag = 1;
   516  0081  3001               	movlw	1
   517  0082  1283               	bcf	3,5	;RP0=0, select bank0
   518  0083  1303               	bcf	3,6	;RP1=0, select bank0
   519  0084  00B3               	movwf	_flag
   520  0085  3000               	movlw	0
   521  0086  00B4               	movwf	_flag+1
   522                           
   523                           ;Lab01.c: 135:     ANSEL = 0b00000001;
   524  0087  3001               	movlw	1
   525  0088  1683               	bsf	3,5	;RP0=1, select bank3
   526  0089  1703               	bsf	3,6	;RP1=1, select bank3
   527  008A  0088               	movwf	8	;volatile
   528  008B                     l983:
   529                           
   530                           ;Lab01.c: 136:     ANSELH = 0x00;
   531  008B  0189               	clrf	9	;volatile
   532  008C                     l985:
   533                           
   534                           ;Lab01.c: 139:     TRISAbits.TRISA0 = 1;
   535  008C  1683               	bsf	3,5	;RP0=1, select bank1
   536  008D  1303               	bcf	3,6	;RP1=0, select bank1
   537  008E  1405               	bsf	5,0	;volatile
   538  008F                     l987:
   539                           
   540                           ;Lab01.c: 140:     TRISAbits.TRISA4 = 0;
   541  008F  1205               	bcf	5,4	;volatile
   542  0090                     l989:
   543                           
   544                           ;Lab01.c: 141:     TRISAbits.TRISA5 = 0;
   545  0090  1285               	bcf	5,5	;volatile
   546  0091                     l991:
   547                           
   548                           ;Lab01.c: 142:     TRISAbits.TRISA6 = 0;
   549  0091  1305               	bcf	5,6	;volatile
   550  0092                     l993:
   551                           
   552                           ;Lab01.c: 143:     TRISBbits.TRISB0 = 1;
   553  0092  1406               	bsf	6,0	;volatile
   554  0093                     l995:
   555                           
   556                           ;Lab01.c: 144:     TRISBbits.TRISB1 = 1;
   557  0093  1486               	bsf	6,1	;volatile
   558  0094                     l997:
   559                           
   560                           ;Lab01.c: 145:     TRISC = 0x00;
   561  0094  0187               	clrf	7	;volatile
   562  0095                     l999:
   563                           
   564                           ;Lab01.c: 146:     TRISD = 0x00;
   565  0095  0188               	clrf	8	;volatile
   566  0096                     l1001:
   567                           
   568                           ;Lab01.c: 149:     PORTA = 0x00;
   569  0096  1283               	bcf	3,5	;RP0=0, select bank0
   570  0097  1303               	bcf	3,6	;RP1=0, select bank0
   571  0098  0185               	clrf	5	;volatile
   572  0099                     l1003:
   573                           
   574                           ;Lab01.c: 150:     PORTB = 0x00;
   575  0099  0186               	clrf	6	;volatile
   576  009A                     l1005:
   577                           
   578                           ;Lab01.c: 151:     PORTC = 0x00;
   579  009A  0187               	clrf	7	;volatile
   580  009B                     l1007:
   581                           
   582                           ;Lab01.c: 152:     PORTD = 0x00;
   583  009B  0188               	clrf	8	;volatile
   584  009C                     l1009:
   585                           
   586                           ;Lab01.c: 155:     OSCCONbits.IRCF2 = 0;
   587  009C  1683               	bsf	3,5	;RP0=1, select bank1
   588  009D  1303               	bcf	3,6	;RP1=0, select bank1
   589  009E  130F               	bcf	15,6	;volatile
   590  009F                     l1011:
   591                           
   592                           ;Lab01.c: 156:     OSCCONbits.IRCF1 = 1;
   593  009F  168F               	bsf	15,5	;volatile
   594  00A0                     l1013:
   595                           
   596                           ;Lab01.c: 157:     OSCCONbits.IRCF0 = 0;
   597  00A0  120F               	bcf	15,4	;volatile
   598  00A1                     l1015:
   599                           
   600                           ;Lab01.c: 158:     OSCCONbits.SCS = 1;
   601  00A1  140F               	bsf	15,0	;volatile
   602  00A2                     l1017:
   603                           
   604                           ;Lab01.c: 161:     OPTION_REGbits.T0CS = 0;
   605  00A2  1281               	bcf	1,5	;volatile
   606  00A3                     l1019:
   607                           
   608                           ;Lab01.c: 162:     OPTION_REGbits.PSA = 0;
   609  00A3  1181               	bcf	1,3	;volatile
   610  00A4                     l1021:
   611                           
   612                           ;Lab01.c: 163:     OPTION_REGbits.PS2 = 1;
   613  00A4  1501               	bsf	1,2	;volatile
   614  00A5                     l1023:
   615                           
   616                           ;Lab01.c: 164:     OPTION_REGbits.PS1 = 1;
   617  00A5  1481               	bsf	1,1	;volatile
   618  00A6                     l1025:
   619                           
   620                           ;Lab01.c: 165:     OPTION_REGbits.PS0 = 1;
   621  00A6  1401               	bsf	1,0	;volatile
   622  00A7                     l1027:
   623                           
   624                           ;Lab01.c: 168:     OPTION_REGbits.nRBPU = 0;
   625  00A7  1381               	bcf	1,7	;volatile
   626  00A8                     l1029:
   627                           
   628                           ;Lab01.c: 169:     WPUB = 0b00000011;
   629  00A8  3003               	movlw	3
   630  00A9  0095               	movwf	21	;volatile
   631  00AA                     l1031:
   632                           
   633                           ;Lab01.c: 170:     IOCBbits.IOCB0 = 1;
   634  00AA  1416               	bsf	22,0	;volatile
   635  00AB                     l1033:
   636                           
   637                           ;Lab01.c: 171:     IOCBbits.IOCB1 = 1;
   638  00AB  1496               	bsf	22,1	;volatile
   639  00AC                     l1035:
   640                           
   641                           ;Lab01.c: 174:     INTCONbits.GIE = 1;
   642  00AC  178B               	bsf	11,7	;volatile
   643  00AD                     l1037:
   644                           
   645                           ;Lab01.c: 175:     INTCONbits.RBIF = 1;
   646  00AD  140B               	bsf	11,0	;volatile
   647  00AE                     l1039:
   648                           
   649                           ;Lab01.c: 176:     INTCONbits.RBIE = 1;
   650  00AE  158B               	bsf	11,3	;volatile
   651  00AF                     l1041:
   652                           
   653                           ;Lab01.c: 177:     INTCONbits.PEIE = 1;
   654  00AF  170B               	bsf	11,6	;volatile
   655  00B0                     l1043:
   656                           
   657                           ;Lab01.c: 178:     INTCONbits.T0IF = 0;
   658  00B0  110B               	bcf	11,2	;volatile
   659  00B1                     l1045:
   660                           
   661                           ;Lab01.c: 179:     PIE1bits.ADIE = 1;
   662  00B1  170C               	bsf	12,6	;volatile
   663  00B2                     l1047:
   664                           
   665                           ;Lab01.c: 180:     PIR1bits.ADIF = 0;
   666  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   667  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   668  00B4  130C               	bcf	12,6	;volatile
   669  00B5                     l1049:
   670                           
   671                           ;Lab01.c: 183:     ADCON0bits.ADCS0 = 0;
   672  00B5  131F               	bcf	31,6	;volatile
   673  00B6                     l1051:
   674                           
   675                           ;Lab01.c: 184:     ADCON0bits.ADCS1 = 1;
   676  00B6  179F               	bsf	31,7	;volatile
   677  00B7                     l1053:
   678                           
   679                           ;Lab01.c: 185:     ADCON0bits.ADON = 1;
   680  00B7  141F               	bsf	31,0	;volatile
   681  00B8                     l1055:
   682                           
   683                           ;Lab01.c: 186:     ADCON0bits.CHS = 0;
   684  00B8  30C3               	movlw	-61
   685  00B9  059F               	andwf	31,f	;volatile
   686  00BA                     l1057:
   687                           
   688                           ;Lab01.c: 187:     _delay((unsigned long)((50)*(250000/4000000.0)));
   689  00BA  28BB               	nop2	;2 cycle nop
   690  00BB  0000               	nop
   691  00BC                     l1059:
   692                           
   693                           ;Lab01.c: 189:     ADCON1bits.ADFM = 0;
   694  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   695  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   696  00BE  139F               	bcf	31,7	;volatile
   697  00BF                     l1061:
   698                           
   699                           ;Lab01.c: 190:     ADCON1bits.VCFG0 = 0;
   700  00BF  121F               	bcf	31,4	;volatile
   701  00C0                     l1063:
   702                           
   703                           ;Lab01.c: 191:     ADCON1bits.VCFG1 = 0;
   704  00C0  129F               	bcf	31,5	;volatile
   705  00C1                     l105:
   706  00C1  0008               	return
   707  00C2                     __end_of_setup:
   708                           
   709                           	psect	text2
   710  00F9                     __ptext2:	
   711 ;; *************** function _nibbles_setup *****************
   712 ;; Defined at:
   713 ;;		line 195 in file "Lab01.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  display         1    wreg     unsigned char 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  display         1    2[BANK0 ] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      unsigned char 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         0       1       0       0       0
   729 ;;      Temps:          0       2       0       0       0
   730 ;;      Totals:         0       3       0       0       0
   731 ;;Total ram usage:        3 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; Hardware stack levels required when called:    1
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_main
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           
   742                           ;psect for function _nibbles_setup
   743  00F9                     _nibbles_setup:
   744                           
   745                           ;incstack = 0
   746                           ; Regs used in _nibbles_setup: [wreg+status,2+status,0]
   747                           ;nibbles_setup@display stored from wreg
   748  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   749  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   750  00FB  00B2               	movwf	nibbles_setup@display
   751  00FC                     l1065:
   752                           
   753                           ;Lab01.c: 196:     nib_do = display&0x0F;
   754  00FC  0832               	movf	nibbles_setup@display,w
   755  00FD  390F               	andlw	15
   756  00FE  00B0               	movwf	??_nibbles_setup
   757  00FF  0830               	movf	??_nibbles_setup,w
   758  0100  00F2               	movwf	_nib_do
   759  0101                     l1067:
   760                           
   761                           ;Lab01.c: 197:     nib_up = (display>>4)&0x0F;
   762  0101  0832               	movf	nibbles_setup@display,w
   763  0102  00B0               	movwf	??_nibbles_setup
   764  0103  3004               	movlw	4
   765  0104                     u195:
   766  0104  1003               	clrc
   767  0105  0CB0               	rrf	??_nibbles_setup,f
   768  0106  3EFF               	addlw	-1
   769  0107  1D03               	skipz
   770  0108  2904               	goto	u195
   771  0109  0830               	movf	??_nibbles_setup,w
   772  010A  390F               	andlw	15
   773  010B  00B1               	movwf	??_nibbles_setup+1
   774  010C  0831               	movf	??_nibbles_setup+1,w
   775  010D  00F3               	movwf	_nib_up
   776  010E                     l108:
   777  010E  0008               	return
   778  010F                     __end_of_nibbles_setup:
   779                           
   780                           	psect	text3
   781  00E2                     __ptext3:	
   782 ;; *************** function _alarma *****************
   783 ;; Defined at:
   784 ;;		line 201 in file "Lab01.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       1       0       0       0
   801 ;;      Totals:         0       1       0       0       0
   802 ;;Total ram usage:        1 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _alarma
   814  00E2                     _alarma:
   815  00E2                     l1071:	
   816                           ;incstack = 0
   817                           ; Regs used in _alarma: [wreg]
   818                           
   819                           
   820                           ;Lab01.c: 202:     if (ADC < PORTC){
   821  00E2  0871               	movf	_ADC+1,w
   822  00E3  3A80               	xorlw	128
   823  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   824  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   825  00E6  00B0               	movwf	??_alarma
   826  00E7  3080               	movlw	128
   827  00E8  0230               	subwf	??_alarma,w
   828  00E9  1D03               	skipz
   829  00EA  28ED               	goto	u205
   830  00EB  0807               	movf	7,w	;volatile
   831  00EC  0270               	subwf	_ADC,w
   832  00ED                     u205:
   833  00ED  1803               	skipnc
   834  00EE  28F0               	goto	u201
   835  00EF  28F1               	goto	u200
   836  00F0                     u201:
   837  00F0  28F5               	goto	l111
   838  00F1                     u200:
   839  00F1                     l1073:
   840                           
   841                           ;Lab01.c: 203:         RA4 = 1;
   842  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   843  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   844  00F3  1605               	bsf	5,4	;volatile
   845                           
   846                           ;Lab01.c: 204:     }
   847  00F4  28F8               	goto	l113
   848  00F5                     l111:	
   849                           ;Lab01.c: 205:     else {
   850                           
   851                           
   852                           ;Lab01.c: 206:         RA4 = 0;
   853  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   854  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   855  00F7  1205               	bcf	5,4	;volatile
   856  00F8                     l113:
   857  00F8  0008               	return
   858  00F9                     __end_of_alarma:
   859                           
   860                           	psect	text4
   861  002A                     __ptext4:	
   862 ;; *************** function _isr *****************
   863 ;; Defined at:
   864 ;;		line 61 in file "Lab01.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          5       0       0       0       0
   881 ;;      Totals:         5       0       0       0       0
   882 ;;Total ram usage:        5 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		Interrupt level 1
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _isr
   893  002A                     _isr:
   894  002A                     i1l933:
   895                           
   896                           ;Lab01.c: 64:        if(PIR1bits.ADIF == 1)
   897  002A  1283               	bcf	3,5	;RP0=0, select bank0
   898  002B  1303               	bcf	3,6	;RP1=0, select bank0
   899  002C  1F0C               	btfss	12,6	;volatile
   900  002D  282F               	goto	u11_21
   901  002E  2830               	goto	u11_20
   902  002F                     u11_21:
   903  002F  2841               	goto	i1l941
   904  0030                     u11_20:
   905  0030                     i1l935:
   906                           
   907                           ;Lab01.c: 65:        {;Lab01.c: 66:            if(ADCON0bits.CHS == 0) {
   908  0030  0C1F               	rrf	31,w	;volatile
   909  0031  00F5               	movwf	??_isr
   910  0032  0C75               	rrf	??_isr,w
   911  0033  390F               	andlw	15
   912  0034  3A00               	xorlw	0
   913  0035  1D03               	skipz
   914  0036  2838               	goto	u12_21
   915  0037  2839               	goto	u12_20
   916  0038                     u12_21:
   917  0038  2840               	goto	i1l939
   918  0039                     u12_20:
   919  0039                     i1l937:
   920                           
   921                           ;Lab01.c: 67:                ADC = ADRESH;
   922  0039  081E               	movf	30,w	;volatile
   923  003A  00F5               	movwf	??_isr
   924  003B  01F6               	clrf	??_isr+1
   925  003C  0875               	movf	??_isr,w
   926  003D  00F0               	movwf	_ADC
   927  003E  0876               	movf	??_isr+1,w
   928  003F  00F1               	movwf	_ADC+1
   929  0040                     i1l939:
   930                           
   931                           ;Lab01.c: 69:            PIR1bits.ADIF = 0;
   932  0040  130C               	bcf	12,6	;volatile
   933  0041                     i1l941:
   934                           
   935                           ;Lab01.c: 71:     if(T0IF == 1)
   936  0041  1D0B               	btfss	11,2	;volatile
   937  0042  2844               	goto	u13_21
   938  0043  2845               	goto	u13_20
   939  0044                     u13_21:
   940  0044  2865               	goto	i1l961
   941  0045                     u13_20:
   942  0045                     i1l943:
   943                           
   944                           ;Lab01.c: 72:     {;Lab01.c: 73:         RA5 = 0;
   945  0045  1285               	bcf	5,5	;volatile
   946                           
   947                           ;Lab01.c: 74:         RA6 = 0;
   948  0046  1305               	bcf	5,6	;volatile
   949  0047                     i1l945:
   950                           
   951                           ;Lab01.c: 75:         if (flag == 1){
   952  0047  0333               	decf	_flag,w
   953  0048  0434               	iorwf	_flag+1,w
   954  0049  1D03               	btfss	3,2
   955  004A  284C               	goto	u14_21
   956  004B  284D               	goto	u14_20
   957  004C                     u14_21:
   958  004C  2857               	goto	i1l88
   959  004D                     u14_20:
   960  004D                     i1l947:
   961                           
   962                           ;Lab01.c: 76:             PORTAbits.RA5 = 1;
   963  004D  1685               	bsf	5,5	;volatile
   964  004E                     i1l949:
   965                           
   966                           ;Lab01.c: 78:             PORTD = tabla[nib_up];
   967  004E  0873               	movf	_nib_up,w
   968  004F  3E20               	addlw	(low (_tabla| 0))& (0+255)
   969  0050  0084               	movwf	4
   970  0051  1383               	bcf	3,7	;select IRP bank0
   971  0052  0800               	movf	0,w
   972  0053  0088               	movwf	8	;volatile
   973  0054                     i1l951:
   974                           
   975                           ;Lab01.c: 79:             flag = 0;
   976  0054  01B3               	clrf	_flag
   977  0055  01B4               	clrf	_flag+1
   978                           
   979                           ;Lab01.c: 80:         }
   980  0056  2862               	goto	i1l957
   981  0057                     i1l88:	
   982                           ;Lab01.c: 81:         else {
   983                           
   984                           
   985                           ;Lab01.c: 82:             PORTAbits.RA6 = 1;
   986  0057  1705               	bsf	5,6	;volatile
   987  0058                     i1l953:
   988                           
   989                           ;Lab01.c: 84:             PORTD = tabla[nib_do];
   990  0058  0872               	movf	_nib_do,w
   991  0059  3E20               	addlw	(low (_tabla| 0))& (0+255)
   992  005A  0084               	movwf	4
   993  005B  1383               	bcf	3,7	;select IRP bank0
   994  005C  0800               	movf	0,w
   995  005D  0088               	movwf	8	;volatile
   996  005E                     i1l955:
   997                           
   998                           ;Lab01.c: 85:             flag = 1;
   999  005E  3001               	movlw	1
  1000  005F  00B3               	movwf	_flag
  1001  0060  3000               	movlw	0
  1002  0061  00B4               	movwf	_flag+1
  1003  0062                     i1l957:
  1004                           
  1005                           ;Lab01.c: 88:         INTCONbits.T0IF = 0;
  1006  0062  110B               	bcf	11,2	;volatile
  1007  0063                     i1l959:
  1008                           
  1009                           ;Lab01.c: 89:         TMR0 = 255;
  1010  0063  30FF               	movlw	255
  1011  0064  0081               	movwf	1	;volatile
  1012  0065                     i1l961:
  1013                           
  1014                           ;Lab01.c: 92:     if (RBIF == 1)
  1015  0065  1C0B               	btfss	11,0	;volatile
  1016  0066  2868               	goto	u15_21
  1017  0067  2869               	goto	u15_20
  1018  0068                     u15_21:
  1019  0068  2878               	goto	i1l93
  1020  0069                     u15_20:
  1021  0069                     i1l963:
  1022                           
  1023                           ;Lab01.c: 93:     {;Lab01.c: 94:         if (PORTBbits.RB0 == 0)
  1024  0069  1806               	btfsc	6,0	;volatile
  1025  006A  286C               	goto	u16_21
  1026  006B  286D               	goto	u16_20
  1027  006C                     u16_21:
  1028  006C  2870               	goto	i1l967
  1029  006D                     u16_20:
  1030  006D                     i1l965:
  1031                           
  1032                           ;Lab01.c: 95:         {;Lab01.c: 96:             PORTC = PORTC + 1;
  1033  006D  0807               	movf	7,w	;volatile
  1034  006E  3E01               	addlw	1
  1035  006F  0087               	movwf	7	;volatile
  1036  0070                     i1l967:
  1037                           
  1038                           ;Lab01.c: 98:         if (PORTBbits.RB1 == 0)
  1039  0070  1886               	btfsc	6,1	;volatile
  1040  0071  2873               	goto	u17_21
  1041  0072  2874               	goto	u17_20
  1042  0073                     u17_21:
  1043  0073  2877               	goto	i1l971
  1044  0074                     u17_20:
  1045  0074                     i1l969:
  1046                           
  1047                           ;Lab01.c: 99:         {;Lab01.c: 100:             PORTC = PORTC - 1;
  1048  0074  0807               	movf	7,w	;volatile
  1049  0075  3EFF               	addlw	255
  1050  0076  0087               	movwf	7	;volatile
  1051  0077                     i1l971:
  1052                           
  1053                           ;Lab01.c: 102:         INTCONbits.RBIF = 0;
  1054  0077  100B               	bcf	11,0	;volatile
  1055  0078                     i1l93:
  1056  0078  0879               	movf	??_isr+4,w
  1057  0079  008A               	movwf	10
  1058  007A  0878               	movf	??_isr+3,w
  1059  007B  0084               	movwf	4
  1060  007C  0E77               	swapf	??_isr+2,w
  1061  007D  0083               	movwf	3
  1062  007E  0EFE               	swapf	btemp,f
  1063  007F  0E7E               	swapf	btemp,w
  1064  0080  0009               	retfie
  1065  0081                     __end_of_isr:
  1066  007E                     btemp	set	126	;btemp
  1067  007E                     wtemp0	set	126
  1068                           
  1069                           	psect	intentry
  1070  0004                     __pintentry:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1073                           
  1074  0004                     interrupt_function:
  1075  007E                     saved_w	set	btemp
  1076  0004  00FE               	movwf	btemp
  1077  0005  0E03               	swapf	3,w
  1078  0006  00F7               	movwf	??_isr+2
  1079  0007  0804               	movf	4,w
  1080  0008  00F8               	movwf	??_isr+3
  1081  0009  080A               	movf	10,w
  1082  000A  00F9               	movwf	??_isr+4
  1083  000B  120A  118A  282A   	ljmp	_isr
  1084                           
  1085                           	psect	config
  1086                           
  1087                           ;Config register CONFIG1 @ 0x2007
  1088                           ;	Oscillator Selection bits
  1089                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1090                           ;	Watchdog Timer Enable bit
  1091                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1092                           ;	Power-up Timer Enable bit
  1093                           ;	PWRTE = OFF, PWRT disabled
  1094                           ;	RE3/MCLR pin function select bit
  1095                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1096                           ;	Code Protection bit
  1097                           ;	CP = OFF, Program memory code protection is disabled
  1098                           ;	Data Code Protection bit
  1099                           ;	CPD = OFF, Data memory code protection is disabled
  1100                           ;	Brown Out Reset Selection bits
  1101                           ;	BOREN = OFF, BOR disabled
  1102                           ;	Internal External Switchover bit
  1103                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1104                           ;	Fail-Safe Clock Monitor Enabled bit
  1105                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1106                           ;	Low Voltage Programming Enable bit
  1107                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1108                           ;	In-Circuit Debugger Mode bit
  1109                           ;	DEBUG = 0x1, unprogrammed default
  1110  2007                     	org	8199
  1111  2007  20D4               	dw	8404
  1112                           
  1113                           ;Config register CONFIG2 @ 0x2008
  1114                           ;	Brown-out Reset Selection bit
  1115                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1116                           ;	Flash Program Memory Self Write Enable bits
  1117                           ;	WRT = OFF, Write protection off
  1118  2008                     	org	8200
  1119  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         7
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      3      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_nibbles_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      44
                             _alarma
                      _nibbles_setup
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nibbles_setup                                        3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _alarma                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _alarma
   _nibbles_setup
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 19 21:20:53 2021

                      pc 0002                       _GO 00F9                       l98 00C7  
                     fsr 0004                      l111 00F5                      l113 00F8  
                    l105 00C1                      l108 010E                      _ADC 0070  
                    l981 0081                      l991 0091                      l983 008B  
                    l993 0092                      l985 008C                      l995 0093  
                    l987 008F                      l997 0094                      l989 0090  
                    l999 0095                      _RA4 002C                      _RA5 002D  
                    _RA6 002E                      u200 00F1                      u201 00F0  
                    u210 00D3                      u211 00D2                      u205 00ED  
                    u195 0104                      _isr 002A                      fsr0 0004  
                    indf 0000                     l1001 0096                     l1011 009F  
                   l1003 0099                     l1021 00A4                     l1013 00A0  
                   l1005 009A                     l1031 00AA                     l1023 00A5  
                   l1015 00A1                     l1007 009B                     l1041 00AF  
                   l1033 00AB                     l1025 00A6                     l1017 00A2  
                   l1009 009C                     l1051 00B6                     l1043 00B0  
                   l1035 00AC                     l1027 00A7                     l1019 00A3  
                   l1061 00BF                     l1053 00B7                     l1045 00B1  
                   l1037 00AD                     l1029 00A8                     l1071 00E2  
                   l1063 00C0                     l1055 00B8                     l1047 00B2  
                   l1039 00AE                     l1073 00F1                     l1065 00FC  
                   l1057 00BA                     l1049 00B5                     l1081 00D9  
                   l1067 0101                     l1059 00BC                     l1075 00C2  
                   l1077 00CD                     l1079 00D3                     ?_isr 0075  
                   _T0IF 005A                     _RBIF 0058                     i1l93 0078  
                   i1l88 0057                     _TMR0 0001                     _WPUB 0095  
                   _flag 0033                     _main 00C2                     btemp 007E  
                   start 000E                    ??_isr 0075                    ?_main 0075  
                  _ANSEL 0188                    i1l941 0041                    i1l933 002A  
                  i1l951 0054                    i1l943 0045                    i1l935 0030  
                  i1l953 0058                    i1l945 0047                    i1l961 0065  
                  i1l937 0039                    i1l971 0077                    i1l963 0069  
                  i1l955 005E                    i1l947 004D                    i1l939 0040  
                  i1l965 006D                    i1l957 0062                    i1l949 004E  
                  i1l967 0070                    i1l959 0063                    i1l969 0074  
                  u11_20 0030                    u11_21 002F                    u12_20 0039  
                  u12_21 0038                    u13_20 0045                    u13_21 0044  
                  u14_20 004D                    u14_21 004C                    u15_20 0069  
                  u15_21 0068                    u16_20 006D                    u16_21 006C  
                  u17_20 0074                    u17_21 0073                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    _tabla 0020  
                  _multi 0035                    _setup 0081                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00E2                   ??_main 0033   __size_of_nibbles_setup 0016  
                 _ADRESH 001E                   ?_setup 0075                   _ANSELH 0189  
                 _alarma 00E2                   _nib_do 0072                   _nib_up 0073  
                 saved_w 007E  __end_of__initialization 0026            _nibbles_setup 00F9  
         __pcstackCOMMON 0075             __pidataBANK0 0122            __end_of_setup 00C2  
         _OPTION_REGbits 0081                  ??_setup 0030               __pbssBANK0 0035  
         ?_nibbles_setup 0075               __pmaintext 00C2                  ?_alarma 0075  
             __pintentry 0004          __size_of_alarma 0017                  __ptext1 0081  
                __ptext2 00F9                  __ptext3 00E2                  __ptext4 002A  
                _display 0074             __size_of_isr 0057     end_of_initialization 0026  
        ??_nibbles_setup 0030     nibbles_setup@display 0032                _PORTAbits 0005  
              _PORTBbits 0006                _TRISAbits 0085                _TRISBbits 0086  
         __end_of_alarma 00F9      start_initialization 0011              __end_of_isr 0081  
             init_fetch0 010F                 ??_alarma 0030              __pdataBANK0 0020  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0030  
              __pnvBANK0 0033           __size_of_setup 0041        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F    __end_of_nibbles_setup 010F  
          __size_of_main 0020               _INTCONbits 000B                 init_ram0 0113  
               intlevel1 0000               _OSCCONbits 008F  
