

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 02:11:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0009                     _PORTE	set	9
   293  0008                     _PORTD	set	8
   294  0007                     _PORTC	set	7
   295  0005                     _PORTA	set	5
   296  0001                     _TMR0	set	1
   297  000B                     _INTCONbits	set	11
   298  001E                     _ADRESH	set	30
   299  001F                     _ADCON0bits	set	31
   300  000C                     _PIR1bits	set	12
   301  0049                     _RE1	set	73
   302  0048                     _RE0	set	72
   303  008C                     _PIE1bits	set	140
   304  0081                     _OPTION_REGbits	set	129
   305  008F                     _OSCCONbits	set	143
   306  0089                     _TRISE	set	137
   307  0088                     _TRISD	set	136
   308  0087                     _TRISCbits	set	135
   309  0085                     _TRISAbits	set	133
   310  0189                     _ANSELH	set	393
   311  0188                     _ANSEL	set	392
   312                           
   313                           	psect	strings
   314  01BB                     __pstrings:
   315  01BB                     stringtab:
   316  01BB                     __stringtab:
   317  01BB                     stringcode:	
   318                           ;	String table - string pointers are 1 byte each
   319                           
   320  01BB                     stringdir:
   321  01BB  3001               	movlw	high stringdir
   322  01BC  008A               	movwf	10
   323  01BD  0804               	movf	4,w
   324  01BE  0A84               	incf	4,f
   325  01BF  0782               	addwf	2,f
   326  01C0                     __stringbase:
   327  01C0  3400               	retlw	0
   328  01C1                     __end_of__stringtab:
   329  01C1                     STR_1:
   330  01C1  3453               	retlw	83	;'S'
   331  01C2  345F               	retlw	95	;'_'
   332  01C3  3431               	retlw	49	;'1'
   333  01C4  343A               	retlw	58	;':'
   334  01C5  3420               	retlw	32	;' '
   335  01C6  3453               	retlw	83	;'S'
   336  01C7  345F               	retlw	95	;'_'
   337  01C8  3432               	retlw	50	;'2'
   338  01C9  3420               	retlw	32	;' '
   339  01CA  3453               	retlw	83	;'S'
   340  01CB  345F               	retlw	95	;'_'
   341  01CC  3433               	retlw	51	;'3'
   342  01CD  343A               	retlw	58	;':'
   343  01CE  3400               	retlw	0
   344  01CF                     STR_2:
   345  01CF  3430               	retlw	48	;'0'
   346  01D0  342E               	retlw	46	;'.'
   347  01D1  3430               	retlw	48	;'0'
   348  01D2  3430               	retlw	48	;'0'
   349  01D3  3400               	retlw	0
   350                           
   351                           	psect	cinit
   352  000F                     start_initialization:	
   353                           ; #config settings
   354                           
   355  000F                     __initialization:
   356                           
   357                           ; Clear objects allocated to COMMON
   358  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   359  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   360  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   361  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   362                           
   363                           ; Clear objects allocated to BANK0
   364  0013  1283               	bcf	3,5	;RP0=0, select bank0
   365  0014  1303               	bcf	3,6	;RP1=0, select bank0
   366  0015  01A9               	clrf	__pbssBANK0& (0+127)
   367  0016                     end_of_initialization:	
   368                           ;End of C runtime variable initialization code
   369                           
   370  0016                     __end_of__initialization:
   371  0016  0183               	clrf	3
   372  0017  120A  118A  28C8   	ljmp	_main	;jump to C main() function
   373                           
   374                           	psect	bssCOMMON
   375  0077                     __pbssCOMMON:
   376  0077                     _display:
   377  0077                     	ds	1
   378  0078                     _div:
   379  0078                     	ds	1
   380  0079                     _volt02:
   381  0079                     	ds	1
   382  007A                     _volt01:
   383  007A                     	ds	1
   384                           
   385                           	psect	bssBANK0
   386  0029                     __pbssBANK0:
   387  0029                     _ADC:
   388  0029                     	ds	1
   389                           
   390                           	psect	cstackCOMMON
   391  0070                     __pcstackCOMMON:
   392  0070                     ?_setup:
   393  0070                     ?_Lcd_Init:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_Lcd_Clear:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_Lcd_Write_String:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_isr:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ??_isr:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_Lcd_Port:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_Lcd_Cmd:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_Lcd_Write_Char:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     Lcd_Port@a:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0070                     	ds	3
   426  0073                     ??_setup:
   427  0073                     ??_Lcd_Port:	
   428                           ; 1 bytes @ 0x3
   429                           
   430  0073                     ??_Lcd_Cmd:	
   431                           ; 1 bytes @ 0x3
   432                           
   433  0073                     ??_Lcd_Write_Char:	
   434                           ; 1 bytes @ 0x3
   435                           
   436                           
   437                           ; 1 bytes @ 0x3
   438  0073                     	ds	1
   439  0074                     Lcd_Write_Char@a:
   440                           
   441                           ; 1 bytes @ 0x4
   442  0074                     	ds	1
   443  0075                     Lcd_Cmd@a:
   444  0075                     Lcd_Write_Char@temp:	
   445                           ; 1 bytes @ 0x5
   446                           
   447                           
   448                           ; 1 bytes @ 0x5
   449  0075                     	ds	1
   450  0076                     ??_Lcd_Clear:
   451  0076                     ?_Lcd_Set_Cursor:	
   452                           ; 1 bytes @ 0x6
   453                           
   454  0076                     Lcd_Set_Cursor@b:	
   455                           ; 1 bytes @ 0x6
   456                           
   457  0076                     Lcd_Write_Char@y:	
   458                           ; 1 bytes @ 0x6
   459                           
   460                           
   461                           ; 1 bytes @ 0x6
   462  0076                     	ds	1
   463  0077                     ??_Lcd_Write_String:
   464                           
   465                           	psect	cstackBANK0
   466  0020                     __pcstackBANK0:	
   467                           ; 1 bytes @ 0x7
   468                           
   469  0020                     ??_Lcd_Init:
   470  0020                     ??_Lcd_Set_Cursor:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0020                     Lcd_Write_String@i:	
   474                           ; 1 bytes @ 0x0
   475                           
   476                           
   477                           ; 2 bytes @ 0x0
   478  0020                     	ds	2
   479  0022                     Lcd_Set_Cursor@a:
   480  0022                     Lcd_Write_String@a:	
   481                           ; 1 bytes @ 0x2
   482                           
   483                           
   484                           ; 1 bytes @ 0x2
   485  0022                     	ds	1
   486  0023                     Lcd_Set_Cursor@z:
   487                           
   488                           ; 1 bytes @ 0x3
   489  0023                     	ds	1
   490  0024                     Lcd_Set_Cursor@y:
   491                           
   492                           ; 1 bytes @ 0x4
   493  0024                     	ds	1
   494  0025                     Lcd_Set_Cursor@temp:
   495                           
   496                           ; 1 bytes @ 0x5
   497  0025                     	ds	1
   498  0026                     ??_main:
   499                           
   500                           ; 1 bytes @ 0x6
   501  0026                     	ds	3
   502                           
   503                           	psect	maintext
   504  00C8                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 89 in file "Lab02.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  a               1    0        unsigned char 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       3       0       0       0
   527 ;;      Totals:         0       3       0       0       0
   528 ;;Total ram usage:        3 bytes
   529 ;; Hardware stack levels required when called:    4
   530 ;; This function calls:
   531 ;;		_Lcd_Clear
   532 ;;		_Lcd_Init
   533 ;;		_Lcd_Set_Cursor
   534 ;;		_Lcd_Write_String
   535 ;;		_setup
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _main
   543  00C8                     _main:
   544  00C8                     l1014:	
   545                           ;incstack = 0
   546                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   547                           
   548                           
   549                           ;Lab02.c: 91: 
   550  00C8  120A  118A  213E  120A  118A  	fcall	_setup
   551                           
   552                           ;Lab02.c: 92:     OSCCONbits.IRCF2 = 1;;Lab02.c: 94:     OSCCONbits.IRCF0 = 0;
   553  00CD  120A  118A  2072  120A  118A  	fcall	_Lcd_Init
   554                           
   555                           ;Lab02.c: 95:     OSCCONbits.SCS = 1;
   556  00D2  120A  118A  21D4  120A  118A  	fcall	_Lcd_Clear
   557  00D7                     l70:	
   558                           ;Lab02.c: 97: 
   559                           
   560                           
   561                           ;Lab02.c: 98:     OPTION_REGbits.T0CS = 0;;Lab02.c: 99:     OPTION_REGbits.PSA = 0;
   562  00D7  01F6               	clrf	Lcd_Set_Cursor@b
   563  00D8  0AF6               	incf	Lcd_Set_Cursor@b,f
   564  00D9  3001               	movlw	1
   565  00DA  120A  118A  201A  120A  118A  	fcall	_Lcd_Set_Cursor
   566  00DF                     l1016:
   567                           
   568                           ;Lab02.c: 100:     OPTION_REGbits.PS2 = 1;
   569  00DF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   570  00E0  120A  118A  2115  120A  118A  	fcall	_Lcd_Write_String
   571  00E5                     l1018:
   572                           
   573                           ;Lab02.c: 101:     OPTION_REGbits.PS1 = 1;
   574  00E5  01F6               	clrf	Lcd_Set_Cursor@b
   575  00E6  0AF6               	incf	Lcd_Set_Cursor@b,f
   576  00E7  3002               	movlw	2
   577  00E8  120A  118A  201A  120A  118A  	fcall	_Lcd_Set_Cursor
   578                           
   579                           ;Lab02.c: 102:     OPTION_REGbits.PS0 = 1;
   580  00ED  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   581  00EE  120A  118A  2115  120A  118A  	fcall	_Lcd_Write_String
   582  00F3                     l1020:
   583                           
   584                           ;Lab02.c: 103: 
   585  00F3  300B               	movlw	11
   586  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   587  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   588  00F6  00A8               	movwf	??_main+2
   589  00F7  3026               	movlw	38
   590  00F8  00A7               	movwf	??_main+1
   591  00F9  305D               	movlw	93
   592  00FA  00A6               	movwf	??_main
   593  00FB                     u237:
   594  00FB  0BA6               	decfsz	??_main,f
   595  00FC  28FB               	goto	u237
   596  00FD  0BA7               	decfsz	??_main+1,f
   597  00FE  28FB               	goto	u237
   598  00FF  0BA8               	decfsz	??_main+2,f
   599  0100  28FB               	goto	u237
   600  0101                     l1022:
   601                           
   602                           ;Lab02.c: 105: 
   603  0101  1283               	bcf	3,5	;RP0=0, select bank0
   604  0102  1303               	bcf	3,6	;RP1=0, select bank0
   605  0103  189F               	btfsc	31,1	;volatile
   606  0104  2906               	goto	u221
   607  0105  2907               	goto	u220
   608  0106                     u221:
   609  0106  28D7               	goto	l70
   610  0107                     u220:
   611  0107                     l1024:
   612                           
   613                           ;Lab02.c: 106:     INTCONbits.GIE = 1;
   614  0107  3020               	movlw	32
   615  0108  1283               	bcf	3,5	;RP0=0, select bank0
   616  0109  1303               	bcf	3,6	;RP1=0, select bank0
   617  010A  00A6               	movwf	??_main
   618  010B                     u247:
   619  010B  0BA6               	decfsz	??_main,f
   620  010C  290B               	goto	u247
   621  010D  0000               	nop
   622  010E                     l1026:
   623                           
   624                           ;Lab02.c: 107:     INTCONbits.RBIF = 1;
   625  010E  1283               	bcf	3,5	;RP0=0, select bank0
   626  010F  1303               	bcf	3,6	;RP1=0, select bank0
   627  0110  149F               	bsf	31,1	;volatile
   628  0111  28D7               	goto	l70
   629  0112  120A  118A  280C   	ljmp	start
   630  0115                     __end_of_main:
   631                           
   632                           	psect	text1
   633  013E                     __ptext1:	
   634 ;; *************** function _setup *****************
   635 ;; Defined at:
   636 ;;		line 116 in file "Lab02.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _setup
   666  013E                     _setup:
   667  013E                     l734:	
   668                           ;incstack = 0
   669                           ; Regs used in _setup: [wreg+status,2]
   670                           
   671  013E  3003               	movlw	3
   672  013F  1683               	bsf	3,5	;RP0=1, select bank3
   673  0140  1703               	bsf	3,6	;RP1=1, select bank3
   674  0141  0088               	movwf	8	;volatile
   675  0142                     l736:
   676  0142  0189               	clrf	9	;volatile
   677  0143                     l738:
   678  0143  1683               	bsf	3,5	;RP0=1, select bank1
   679  0144  1303               	bcf	3,6	;RP1=0, select bank1
   680  0145  1405               	bsf	5,0	;volatile
   681  0146                     l740:
   682  0146  1485               	bsf	5,1	;volatile
   683  0147                     l742:
   684  0147  1307               	bcf	7,6	;volatile
   685  0148                     l744:
   686  0148  1387               	bcf	7,7	;volatile
   687  0149                     l746:
   688  0149  0188               	clrf	8	;volatile
   689  014A                     l748:
   690  014A  0189               	clrf	9	;volatile
   691  014B                     l750:
   692  014B  1283               	bcf	3,5	;RP0=0, select bank0
   693  014C  1303               	bcf	3,6	;RP1=0, select bank0
   694  014D  0185               	clrf	5	;volatile
   695  014E                     l752:
   696  014E  0187               	clrf	7	;volatile
   697  014F                     l754:
   698  014F  0188               	clrf	8	;volatile
   699  0150                     l756:
   700  0150  0189               	clrf	9	;volatile
   701  0151                     l758:
   702  0151  1683               	bsf	3,5	;RP0=1, select bank1
   703  0152  1303               	bcf	3,6	;RP1=0, select bank1
   704  0153  170F               	bsf	15,6	;volatile
   705  0154                     l760:
   706  0154  168F               	bsf	15,5	;volatile
   707  0155                     l762:
   708  0155  120F               	bcf	15,4	;volatile
   709  0156                     l764:
   710  0156  140F               	bsf	15,0	;volatile
   711  0157                     l766:
   712  0157  1281               	bcf	1,5	;volatile
   713  0158                     l768:
   714  0158  1181               	bcf	1,3	;volatile
   715  0159                     l770:
   716  0159  1501               	bsf	1,2	;volatile
   717  015A                     l772:
   718  015A  1481               	bsf	1,1	;volatile
   719  015B                     l774:
   720  015B  1401               	bsf	1,0	;volatile
   721  015C                     l776:
   722  015C  178B               	bsf	11,7	;volatile
   723  015D                     l778:
   724  015D  140B               	bsf	11,0	;volatile
   725  015E                     l780:
   726  015E  158B               	bsf	11,3	;volatile
   727  015F                     l782:
   728  015F  170B               	bsf	11,6	;volatile
   729  0160                     l784:
   730  0160  110B               	bcf	11,2	;volatile
   731  0161                     l786:
   732  0161  170C               	bsf	12,6	;volatile
   733  0162                     l788:
   734  0162  1283               	bcf	3,5	;RP0=0, select bank0
   735  0163  1303               	bcf	3,6	;RP1=0, select bank0
   736  0164  130C               	bcf	12,6	;volatile
   737  0165                     l77:
   738  0165  0008               	return
   739  0166                     __end_of_setup:
   740                           
   741                           	psect	text2
   742  0115                     __ptext2:	
   743 ;; *************** function _Lcd_Write_String *****************
   744 ;; Defined at:
   745 ;;		line 100 in file "Lib_LCD.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  a               1    wreg     PTR unsigned char 
   748 ;;		 -> STR_2(5), STR_1(14), 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  a               1    2[BANK0 ] PTR unsigned char 
   751 ;;		 -> STR_2(5), STR_1(14), 
   752 ;;  i               2    0[BANK0 ] int 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         0       3       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         0       3       0       0       0
   766 ;;Total ram usage:        3 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    3
   769 ;; This function calls:
   770 ;;		_Lcd_Write_Char
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _Lcd_Write_String
   778  0115                     _Lcd_Write_String:
   779                           
   780                           ;incstack = 0
   781                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   782                           ;Lcd_Write_String@a stored from wreg
   783  0115  1283               	bcf	3,5	;RP0=0, select bank0
   784  0116  1303               	bcf	3,6	;RP1=0, select bank0
   785  0117  00A2               	movwf	Lcd_Write_String@a
   786  0118                     l1006:
   787                           
   788                           ;Lib_LCD.c: 101:     int i;;Lib_LCD.c: 102:     for (i = 0; a[i] != '\0'; i++)
   789  0118  01A0               	clrf	Lcd_Write_String@i
   790  0119  01A1               	clrf	Lcd_Write_String@i+1
   791  011A  2930               	goto	l1012
   792  011B                     l1008:
   793                           
   794                           ;Lib_LCD.c: 103:         Lcd_Write_Char(a[i]);
   795  011B  0820               	movf	Lcd_Write_String@i,w
   796  011C  0722               	addwf	Lcd_Write_String@a,w
   797  011D  0084               	movwf	4
   798  011E  120A  118A  21BB  120A  118A  	fcall	stringdir
   799  0123  120A  118A  2184  120A  118A  	fcall	_Lcd_Write_Char
   800  0128                     l1010:
   801  0128  3001               	movlw	1
   802  0129  1283               	bcf	3,5	;RP0=0, select bank0
   803  012A  1303               	bcf	3,6	;RP1=0, select bank0
   804  012B  07A0               	addwf	Lcd_Write_String@i,f
   805  012C  1803               	skipnc
   806  012D  0AA1               	incf	Lcd_Write_String@i+1,f
   807  012E  3000               	movlw	0
   808  012F  07A1               	addwf	Lcd_Write_String@i+1,f
   809  0130                     l1012:
   810  0130  0820               	movf	Lcd_Write_String@i,w
   811  0131  0722               	addwf	Lcd_Write_String@a,w
   812  0132  0084               	movwf	4
   813  0133  120A  118A  21BB  120A  118A  	fcall	stringdir
   814  0138  3A00               	xorlw	0
   815  0139  1D03               	skipz
   816  013A  293C               	goto	u211
   817  013B  293D               	goto	u210
   818  013C                     u211:
   819  013C  291B               	goto	l1008
   820  013D                     u210:
   821  013D                     l112:
   822  013D  0008               	return
   823  013E                     __end_of_Lcd_Write_String:
   824                           
   825                           	psect	text3
   826  0184                     __ptext3:	
   827 ;; *************** function _Lcd_Write_Char *****************
   828 ;; Defined at:
   829 ;;		line 84 in file "Lib_LCD.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  a               1    wreg     unsigned char 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  a               1    4[COMMON] unsigned char 
   834 ;;  y               1    6[COMMON] unsigned char 
   835 ;;  temp            1    5[COMMON] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         3       0       0       0       0
   847 ;;      Temps:          1       0       0       0       0
   848 ;;      Totals:         4       0       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    2
   852 ;; This function calls:
   853 ;;		_Lcd_Port
   854 ;; This function is called by:
   855 ;;		_Lcd_Write_String
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _Lcd_Write_Char
   861  0184                     _Lcd_Write_Char:
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   865                           ;Lcd_Write_Char@a stored from wreg
   866  0184  00F4               	movwf	Lcd_Write_Char@a
   867  0185                     l962:
   868                           
   869                           ;Lib_LCD.c: 85:     char temp, y;;Lib_LCD.c: 86:     temp = a;
   870  0185  0874               	movf	Lcd_Write_Char@a,w
   871  0186  00F3               	movwf	??_Lcd_Write_Char
   872  0187  0873               	movf	??_Lcd_Write_Char,w
   873  0188  00F5               	movwf	Lcd_Write_Char@temp
   874                           
   875                           ;Lib_LCD.c: 87:     y = temp;
   876  0189  0875               	movf	Lcd_Write_Char@temp,w
   877  018A  00F3               	movwf	??_Lcd_Write_Char
   878  018B  0873               	movf	??_Lcd_Write_Char,w
   879  018C  00F6               	movwf	Lcd_Write_Char@y
   880  018D                     l964:
   881                           
   882                           ;Lib_LCD.c: 88:     RE0 = 1;
   883  018D  1283               	bcf	3,5	;RP0=0, select bank0
   884  018E  1303               	bcf	3,6	;RP1=0, select bank0
   885  018F  1409               	bsf	9,0	;volatile
   886  0190                     l966:
   887                           
   888                           ;Lib_LCD.c: 89:     Lcd_Port(y);
   889  0190  0876               	movf	Lcd_Write_Char@y,w
   890  0191  120A  118A  21E1  120A  118A  	fcall	_Lcd_Port
   891  0196                     l968:
   892                           
   893                           ;Lib_LCD.c: 90:     RE1 = 1;
   894  0196  1283               	bcf	3,5	;RP0=0, select bank0
   895  0197  1303               	bcf	3,6	;RP1=0, select bank0
   896  0198  1489               	bsf	9,1	;volatile
   897  0199                     l970:
   898                           
   899                           ;Lib_LCD.c: 91:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   900  0199  300D               	movlw	13
   901  019A  00F3               	movwf	??_Lcd_Write_Char
   902  019B                     u257:
   903  019B  0BF3               	decfsz	??_Lcd_Write_Char,f
   904  019C  299B               	goto	u257
   905  019D                     l972:
   906                           
   907                           ;Lib_LCD.c: 92:     RE1 = 0;
   908  019D  1283               	bcf	3,5	;RP0=0, select bank0
   909  019E  1303               	bcf	3,6	;RP1=0, select bank0
   910  019F  1089               	bcf	9,1	;volatile
   911  01A0                     l106:
   912  01A0  0008               	return
   913  01A1                     __end_of_Lcd_Write_Char:
   914                           
   915                           	psect	text4
   916  001A                     __ptext4:	
   917 ;; *************** function _Lcd_Set_Cursor *****************
   918 ;; Defined at:
   919 ;;		line 49 in file "Lib_LCD.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  a               1    wreg     unsigned char 
   922 ;;  b               1    6[COMMON] unsigned char 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  a               1    2[BANK0 ] unsigned char 
   925 ;;  temp            1    5[BANK0 ] unsigned char 
   926 ;;  y               1    4[BANK0 ] unsigned char 
   927 ;;  z               1    3[BANK0 ] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         1       0       0       0       0
   938 ;;      Locals:         0       4       0       0       0
   939 ;;      Temps:          0       2       0       0       0
   940 ;;      Totals:         1       6       0       0       0
   941 ;;Total ram usage:        7 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    3
   944 ;; This function calls:
   945 ;;		_Lcd_Cmd
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _Lcd_Set_Cursor
   953  001A                     _Lcd_Set_Cursor:
   954                           
   955                           ;incstack = 0
   956                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   957                           ;Lcd_Set_Cursor@a stored from wreg
   958  001A  1283               	bcf	3,5	;RP0=0, select bank0
   959  001B  1303               	bcf	3,6	;RP1=0, select bank0
   960  001C  00A2               	movwf	Lcd_Set_Cursor@a
   961  001D                     l986:
   962                           
   963                           ;Lib_LCD.c: 50:     char temp, z, y;;Lib_LCD.c: 51:     if (a == 1) {
   964  001D  0322               	decf	Lcd_Set_Cursor@a,w
   965  001E  1D03               	btfss	3,2
   966  001F  2821               	goto	u171
   967  0020  2822               	goto	u170
   968  0021                     u171:
   969  0021  2847               	goto	l996
   970  0022                     u170:
   971  0022                     l988:
   972                           
   973                           ;Lib_LCD.c: 52:         temp = 0x80 + b - 1;
   974  0022  0876               	movf	Lcd_Set_Cursor@b,w
   975  0023  3E7F               	addlw	127
   976  0024  00A0               	movwf	??_Lcd_Set_Cursor
   977  0025  0820               	movf	??_Lcd_Set_Cursor,w
   978  0026  00A5               	movwf	Lcd_Set_Cursor@temp
   979                           
   980                           ;Lib_LCD.c: 53:         z = temp >> 4;
   981  0027  0825               	movf	Lcd_Set_Cursor@temp,w
   982  0028  00A0               	movwf	??_Lcd_Set_Cursor
   983  0029  3004               	movlw	4
   984  002A                     u185:
   985  002A  1003               	clrc
   986  002B  0CA0               	rrf	??_Lcd_Set_Cursor,f
   987  002C  3EFF               	addlw	-1
   988  002D  1D03               	skipz
   989  002E  282A               	goto	u185
   990  002F  0820               	movf	??_Lcd_Set_Cursor,w
   991  0030  00A1               	movwf	??_Lcd_Set_Cursor+1
   992  0031  0821               	movf	??_Lcd_Set_Cursor+1,w
   993  0032  00A3               	movwf	Lcd_Set_Cursor@z
   994  0033                     l990:
   995                           
   996                           ;Lib_LCD.c: 54:         y = temp & 0x0F;
   997  0033  0825               	movf	Lcd_Set_Cursor@temp,w
   998  0034  390F               	andlw	15
   999  0035  00A0               	movwf	??_Lcd_Set_Cursor
  1000  0036  0820               	movf	??_Lcd_Set_Cursor,w
  1001  0037  00A4               	movwf	Lcd_Set_Cursor@y
  1002  0038                     l992:
  1003                           
  1004                           ;Lib_LCD.c: 55:         Lcd_Cmd(z);
  1005  0038  0823               	movf	Lcd_Set_Cursor@z,w
  1006  0039  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1007  003E                     l994:
  1008                           
  1009                           ;Lib_LCD.c: 56:         Lcd_Cmd(y);
  1010  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1011  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0040  0824               	movf	Lcd_Set_Cursor@y,w
  1013  0041  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1014                           
  1015                           ;Lib_LCD.c: 57:     } else if (a == 2) {
  1016  0046  2871               	goto	l100
  1017  0047                     l996:
  1018  0047  3002               	movlw	2
  1019  0048  0622               	xorwf	Lcd_Set_Cursor@a,w
  1020  0049  1D03               	btfss	3,2
  1021  004A  284C               	goto	u191
  1022  004B  284D               	goto	u190
  1023  004C                     u191:
  1024  004C  2871               	goto	l100
  1025  004D                     u190:
  1026  004D                     l998:
  1027                           
  1028                           ;Lib_LCD.c: 58:         temp = 0xC0 + b - 1;
  1029  004D  0876               	movf	Lcd_Set_Cursor@b,w
  1030  004E  3EBF               	addlw	191
  1031  004F  00A0               	movwf	??_Lcd_Set_Cursor
  1032  0050  0820               	movf	??_Lcd_Set_Cursor,w
  1033  0051  00A5               	movwf	Lcd_Set_Cursor@temp
  1034                           
  1035                           ;Lib_LCD.c: 59:         z = temp >> 4;
  1036  0052  0825               	movf	Lcd_Set_Cursor@temp,w
  1037  0053  00A0               	movwf	??_Lcd_Set_Cursor
  1038  0054  3004               	movlw	4
  1039  0055                     u205:
  1040  0055  1003               	clrc
  1041  0056  0CA0               	rrf	??_Lcd_Set_Cursor,f
  1042  0057  3EFF               	addlw	-1
  1043  0058  1D03               	skipz
  1044  0059  2855               	goto	u205
  1045  005A  0820               	movf	??_Lcd_Set_Cursor,w
  1046  005B  00A1               	movwf	??_Lcd_Set_Cursor+1
  1047  005C  0821               	movf	??_Lcd_Set_Cursor+1,w
  1048  005D  00A3               	movwf	Lcd_Set_Cursor@z
  1049  005E                     l1000:
  1050                           
  1051                           ;Lib_LCD.c: 60:         y = temp & 0xF0;
  1052  005E  0825               	movf	Lcd_Set_Cursor@temp,w
  1053  005F  39F0               	andlw	240
  1054  0060  00A0               	movwf	??_Lcd_Set_Cursor
  1055  0061  0820               	movf	??_Lcd_Set_Cursor,w
  1056  0062  00A4               	movwf	Lcd_Set_Cursor@y
  1057  0063                     l1002:
  1058                           
  1059                           ;Lib_LCD.c: 61:         Lcd_Cmd(z);
  1060  0063  0823               	movf	Lcd_Set_Cursor@z,w
  1061  0064  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1062  0069                     l1004:
  1063                           
  1064                           ;Lib_LCD.c: 62:         Lcd_Cmd(y);
  1065  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1066  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1067  006B  0824               	movf	Lcd_Set_Cursor@y,w
  1068  006C  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1069  0071                     l100:
  1070  0071  0008               	return
  1071  0072                     __end_of_Lcd_Set_Cursor:
  1072                           
  1073                           	psect	text5
  1074  0072                     __ptext5:	
  1075 ;; *************** function _Lcd_Init *****************
  1076 ;; Defined at:
  1077 ;;		line 66 in file "Lib_LCD.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0
  1093 ;;      Temps:          0       3       0       0       0
  1094 ;;      Totals:         0       3       0       0       0
  1095 ;;Total ram usage:        3 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    3
  1098 ;; This function calls:
  1099 ;;		_Lcd_Cmd
  1100 ;;		_Lcd_Port
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _Lcd_Init
  1108  0072                     _Lcd_Init:
  1109  0072                     l974:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1112                           
  1113                           
  1114                           ;Lib_LCD.c: 67:     Lcd_Port(0x00);
  1115  0072  3000               	movlw	0
  1116  0073  120A  118A  21E1  120A  118A  	fcall	_Lcd_Port
  1117  0078                     l976:
  1118                           
  1119                           ;Lib_LCD.c: 68:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1120  0078  301A               	movlw	26
  1121  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1122  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1123  007B  00A1               	movwf	??_Lcd_Init+1
  1124  007C  30F7               	movlw	247
  1125  007D  00A0               	movwf	??_Lcd_Init
  1126  007E                     u267:
  1127  007E  0BA0               	decfsz	??_Lcd_Init,f
  1128  007F  287E               	goto	u267
  1129  0080  0BA1               	decfsz	??_Lcd_Init+1,f
  1130  0081  287E               	goto	u267
  1131  0082  2883               	nop2
  1132  0083                     l978:
  1133                           
  1134                           ;Lib_LCD.c: 69:     Lcd_Cmd(0x30);
  1135  0083  3030               	movlw	48
  1136  0084  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1137                           
  1138                           ;Lib_LCD.c: 70:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1139  0089  3007               	movlw	7
  1140  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1141  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1142  008C  00A1               	movwf	??_Lcd_Init+1
  1143  008D  307C               	movlw	124
  1144  008E  00A0               	movwf	??_Lcd_Init
  1145  008F                     u277:
  1146  008F  0BA0               	decfsz	??_Lcd_Init,f
  1147  0090  288F               	goto	u277
  1148  0091  0BA1               	decfsz	??_Lcd_Init+1,f
  1149  0092  288F               	goto	u277
  1150  0093  0000               	nop
  1151  0094                     l980:
  1152                           
  1153                           ;Lib_LCD.c: 71:     Lcd_Cmd(0x30);
  1154  0094  3030               	movlw	48
  1155  0095  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1156  009A                     l982:
  1157                           
  1158                           ;Lib_LCD.c: 72:     _delay((unsigned long)((200)*(4000000/4000.0)));
  1159  009A  3002               	movlw	2
  1160  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1161  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1162  009D  00A2               	movwf	??_Lcd_Init+2
  1163  009E  3004               	movlw	4
  1164  009F  00A1               	movwf	??_Lcd_Init+1
  1165  00A0  30B9               	movlw	185
  1166  00A1  00A0               	movwf	??_Lcd_Init
  1167  00A2                     u287:
  1168  00A2  0BA0               	decfsz	??_Lcd_Init,f
  1169  00A3  28A2               	goto	u287
  1170  00A4  0BA1               	decfsz	??_Lcd_Init+1,f
  1171  00A5  28A2               	goto	u287
  1172  00A6  0BA2               	decfsz	??_Lcd_Init+2,f
  1173  00A7  28A2               	goto	u287
  1174  00A8  28A9               	nop2
  1175                           
  1176                           ;Lib_LCD.c: 73:     Lcd_Cmd(0x30);
  1177  00A9  3030               	movlw	48
  1178  00AA  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1179                           
  1180                           ;Lib_LCD.c: 75:     Lcd_Cmd(0x3C);
  1181  00AF  303C               	movlw	60
  1182  00B0  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1183                           
  1184                           ;Lib_LCD.c: 77:     Lcd_Cmd(0x08);
  1185  00B5  3008               	movlw	8
  1186  00B6  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1187                           
  1188                           ;Lib_LCD.c: 79:     Lcd_Cmd(0x01);
  1189  00BB  3001               	movlw	1
  1190  00BC  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1191                           
  1192                           ;Lib_LCD.c: 81:     Lcd_Cmd(0x06);
  1193  00C1  3006               	movlw	6
  1194  00C2  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1195  00C7                     l103:
  1196  00C7  0008               	return
  1197  00C8                     __end_of_Lcd_Init:
  1198                           
  1199                           	psect	text6
  1200  01D4                     __ptext6:	
  1201 ;; *************** function _Lcd_Clear *****************
  1202 ;; Defined at:
  1203 ;;		line 44 in file "Lib_LCD.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    3
  1224 ;; This function calls:
  1225 ;;		_Lcd_Cmd
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _Lcd_Clear
  1233  01D4                     _Lcd_Clear:
  1234  01D4                     l984:	
  1235                           ;incstack = 0
  1236                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1237                           
  1238                           
  1239                           ;Lib_LCD.c: 45:     Lcd_Cmd(0);
  1240  01D4  3000               	movlw	0
  1241  01D5  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1242                           
  1243                           ;Lib_LCD.c: 46:     Lcd_Cmd(1);
  1244  01DA  3001               	movlw	1
  1245  01DB  120A  118A  21A1  120A  118A  	fcall	_Lcd_Cmd
  1246  01E0                     l94:
  1247  01E0  0008               	return
  1248  01E1                     __end_of_Lcd_Clear:
  1249                           
  1250                           	psect	text7
  1251  01A1                     __ptext7:	
  1252 ;; *************** function _Lcd_Cmd *****************
  1253 ;; Defined at:
  1254 ;;		line 36 in file "Lib_LCD.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  a               1    wreg     unsigned char 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  a               1    5[COMMON] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         1       0       0       0       0
  1270 ;;      Temps:          2       0       0       0       0
  1271 ;;      Totals:         3       0       0       0       0
  1272 ;;Total ram usage:        3 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    2
  1275 ;; This function calls:
  1276 ;;		_Lcd_Port
  1277 ;; This function is called by:
  1278 ;;		_Lcd_Clear
  1279 ;;		_Lcd_Set_Cursor
  1280 ;;		_Lcd_Init
  1281 ;;		_Lcd_Shift_Right
  1282 ;;		_Lcd_Shift_Left
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _Lcd_Cmd
  1288  01A1                     _Lcd_Cmd:
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1292                           ;Lcd_Cmd@a stored from wreg
  1293  01A1  00F5               	movwf	Lcd_Cmd@a
  1294  01A2                     l952:
  1295                           
  1296                           ;Lib_LCD.c: 37:     RE0 = 0;
  1297  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1298  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1299  01A4  1009               	bcf	9,0	;volatile
  1300  01A5                     l954:
  1301                           
  1302                           ;Lib_LCD.c: 38:     Lcd_Port(a);
  1303  01A5  0875               	movf	Lcd_Cmd@a,w
  1304  01A6  120A  118A  21E1  120A  118A  	fcall	_Lcd_Port
  1305  01AB                     l956:
  1306                           
  1307                           ;Lib_LCD.c: 39:     RE1 = 1;
  1308  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1309  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1310  01AD  1489               	bsf	9,1	;volatile
  1311  01AE                     l958:
  1312                           
  1313                           ;Lib_LCD.c: 40:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1314  01AE  3006               	movlw	6
  1315  01AF  00F4               	movwf	??_Lcd_Cmd+1
  1316  01B0  3030               	movlw	48
  1317  01B1  00F3               	movwf	??_Lcd_Cmd
  1318  01B2                     u297:
  1319  01B2  0BF3               	decfsz	??_Lcd_Cmd,f
  1320  01B3  29B2               	goto	u297
  1321  01B4  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1322  01B5  29B2               	goto	u297
  1323  01B6  0000               	nop
  1324  01B7                     l960:
  1325                           
  1326                           ;Lib_LCD.c: 41:     RE1 = 0;
  1327  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1328  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1329  01B9  1089               	bcf	9,1	;volatile
  1330  01BA                     l91:
  1331  01BA  0008               	return
  1332  01BB                     __end_of_Lcd_Cmd:
  1333                           
  1334                           	psect	text8
  1335  01E1                     __ptext8:	
  1336 ;; *************** function _Lcd_Port *****************
  1337 ;; Defined at:
  1338 ;;		line 13 in file "Lib_LCD.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  a               1    wreg     unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  a               1    0[COMMON] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0
  1355 ;;      Totals:         0       0       0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_Lcd_Cmd
  1363 ;;		_Lcd_Init
  1364 ;;		_Lcd_Write_Char
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _Lcd_Port
  1370  01E1                     _Lcd_Port:
  1371  01E1                     l950:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _Lcd_Port: [wreg]
  1374                           
  1375                           
  1376                           ;Lib_LCD.c: 14:     PORTD = 4;
  1377  01E1  3004               	movlw	4
  1378  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1379  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1380  01E4  0088               	movwf	8	;volatile
  1381  01E5                     l88:
  1382  01E5  0008               	return
  1383  01E6                     __end_of_Lcd_Port:
  1384                           
  1385                           	psect	text9
  1386  0166                     __ptext9:	
  1387 ;; *************** function _isr *****************
  1388 ;; Defined at:
  1389 ;;		line 69 in file "Lab02.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0
  1405 ;;      Temps:          3       0       0       0       0
  1406 ;;      Totals:         3       0       0       0       0
  1407 ;;Total ram usage:        3 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		Interrupt level 1
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _isr
  1418  0166                     _isr:
  1419  0166                     i1l922:
  1420                           
  1421                           ;Lab02.c: 72: 
  1422  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0168  1F0C               	btfss	12,6	;volatile
  1425  0169  296B               	goto	u14_21
  1426  016A  296C               	goto	u14_20
  1427  016B                     u14_21:
  1428  016B  297A               	goto	i1l930
  1429  016C                     u14_20:
  1430  016C                     i1l924:
  1431                           
  1432                           ;Lab02.c: 73: ;Lab02.c: 74:     ANSEL = 0b00000011;
  1433  016C  0C1F               	rrf	31,w	;volatile
  1434  016D  00F0               	movwf	??_isr
  1435  016E  0C70               	rrf	??_isr,w
  1436  016F  390F               	andlw	15
  1437  0170  3A00               	xorlw	0
  1438  0171  1D03               	skipz
  1439  0172  2974               	goto	u15_21
  1440  0173  2975               	goto	u15_20
  1441  0174                     u15_21:
  1442  0174  2979               	goto	i1l928
  1443  0175                     u15_20:
  1444  0175                     i1l926:
  1445                           
  1446                           ;Lab02.c: 75:     ANSELH = 0x00;
  1447  0175  081E               	movf	30,w	;volatile
  1448  0176  00F0               	movwf	??_isr
  1449  0177  0870               	movf	??_isr,w
  1450  0178  00A9               	movwf	_ADC
  1451  0179                     i1l928:
  1452                           
  1453                           ;Lab02.c: 77: 
  1454  0179  130C               	bcf	12,6	;volatile
  1455  017A                     i1l930:
  1456                           
  1457                           ;Lab02.c: 80:     TRISCbits.TRISC6 = 0;
  1458  017A  110B               	bcf	11,2	;volatile
  1459                           
  1460                           ;Lab02.c: 81:     TRISCbits.TRISC7 = 0;
  1461  017B  30FF               	movlw	255
  1462  017C  0081               	movwf	1	;volatile
  1463  017D                     i1l65:
  1464  017D  0872               	movf	??_isr+2,w
  1465  017E  008A               	movwf	10
  1466  017F  0E71               	swapf	??_isr+1,w
  1467  0180  0083               	movwf	3
  1468  0181  0EFE               	swapf	btemp,f
  1469  0182  0E7E               	swapf	btemp,w
  1470  0183  0009               	retfie
  1471  0184                     __end_of_isr:
  1472  007E                     btemp	set	126	;btemp
  1473  007E                     wtemp0	set	126
  1474                           
  1475                           	psect	intentry
  1476  0004                     __pintentry:	
  1477                           ;incstack = 0
  1478                           ; Regs used in _isr: [wreg+status,2+status,0]
  1479                           
  1480  0004                     interrupt_function:
  1481  007E                     saved_w	set	btemp
  1482  0004  00FE               	movwf	btemp
  1483  0005  0E03               	swapf	3,w
  1484  0006  00F1               	movwf	??_isr+1
  1485  0007  080A               	movf	10,w
  1486  0008  00F2               	movwf	??_isr+2
  1487  0009  120A  118A  2966   	ljmp	_isr
  1488                           
  1489                           	psect	config
  1490                           
  1491                           ;Config register CONFIG1 @ 0x2007
  1492                           ;	Oscillator Selection bits
  1493                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1494                           ;	Watchdog Timer Enable bit
  1495                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1496                           ;	Power-up Timer Enable bit
  1497                           ;	PWRTE = OFF, PWRT disabled
  1498                           ;	RE3/MCLR pin function select bit
  1499                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1500                           ;	Code Protection bit
  1501                           ;	CP = OFF, Program memory code protection is disabled
  1502                           ;	Data Code Protection bit
  1503                           ;	CPD = OFF, Data memory code protection is disabled
  1504                           ;	Brown Out Reset Selection bits
  1505                           ;	BOREN = OFF, BOR disabled
  1506                           ;	Internal External Switchover bit
  1507                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1508                           ;	Fail-Safe Clock Monitor Enabled bit
  1509                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1510                           ;	Low Voltage Programming Enable bit
  1511                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1512                           ;	In-Circuit Debugger Mode bit
  1513                           ;	DEBUG = 0x1, unprogrammed default
  1514  2007                     	org	8199
  1515  2007  20D4               	dw	8404
  1516                           
  1517                           ;Config register CONFIG2 @ 0x2008
  1518                           ;	Brown-out Reset Selection bit
  1519                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1520                           ;	Flash Program Memory Self Write Enable bits
  1521                           ;	WRT = OFF, Write protection off
  1522  2008                     	org	8200
  1523  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      9      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[5]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     964
                                              6 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      99
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     601
                                              6 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0      31
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      31
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      31
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 02:11:36 2021

                        pc 0002                         l70 00D7                         l91 01BA  
                       l77 0165                         l94 01E0                         l88 01E5  
                       fsr 0004                        l100 0071                        l103 00C7  
                      l112 013D                        l106 01A0                        _ADC 0029  
                      l740 0146                        l750 014B                        l742 0147  
                      l734 013E                        l760 0154                        l752 014E  
                      l744 0148                        l736 0142                        l770 0159  
                      l762 0155                        l754 014F                        l746 0149  
                      l738 0143                        l780 015E                        l772 015A  
                      l764 0156                        l756 0150                        l748 014A  
                      l950 01E1                        l782 015F                        l774 015B  
                      l766 0157                        l758 0151                        l960 01B7  
                      l952 01A2                        l784 0160                        l776 015C  
                      l768 0158                        l954 01A5                        l970 0199  
                      l962 0185                        l786 0161                        l778 015D  
                      l956 01AB                        l980 0094                        l972 019D  
                      l964 018D                        l788 0162                        l958 01AE  
                      l982 009A                        l974 0072                        l990 0033  
                      l966 0190                        l984 01D4                        l976 0078  
                      l992 0038                        l968 0196                        l978 0083  
                      l994 003E                        l986 001D                        l988 0022  
                      l996 0047                        l998 004D                        _RE0 0048  
                      _RE1 0049                        u210 013D                        u211 013C  
                      u220 0107                        u205 0055                        u221 0106  
                      u170 0022                        u171 0021                        u237 00FB  
                      u190 004D                        u191 004C                        u247 010B  
                      u185 002A                        u257 019B                        u267 007E  
                      u277 008F                        u287 00A2                        u297 01B2  
                      _div 0078                        _isr 0166                        fsr0 0004  
                     l1000 005E                       l1002 0063                       l1010 0128  
                     l1004 0069                       l1012 0130                       l1020 00F3  
                     l1006 0118                       l1022 0101                       l1014 00C8  
                     l1008 011B                       l1024 0107                       l1016 00DF  
                     l1026 010E                       l1018 00E5                       ?_isr 0070  
                     STR_1 01C1                       STR_2 01CF                       i1l65 017D  
                     _TMR0 0001          ?_Lcd_Write_String 0070                       _main 00C8  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0077  
          __end_of_Lcd_Cmd 01BB                      ??_isr 0070                      ?_main 0070  
                    _ANSEL 0188                      i1l930 017A                      i1l922 0166  
                    i1l924 016C                      i1l926 0175                      i1l928 0179  
                    u14_20 016C                      u14_21 016B                      u15_20 0175  
                    u15_21 0174                      _PORTA 0005                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISD 0088                      _TRISE 0089                      _setup 013E  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 00C8           __end_of_Lcd_Port 01E6            __initialization 000F  
             __end_of_main 0115                     ??_main 0026         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 001D                     _volt01 007A  
                   _volt02 0079                     saved_w 007E            Lcd_Set_Cursor@a 0022  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0024            Lcd_Set_Cursor@z 0023  
  __end_of__initialization 0016          __end_of_Lcd_Clear 01E1             __pcstackCOMMON 0070  
            __end_of_setup 0166             _Lcd_Set_Cursor 001A             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0073  
               __pbssBANK0 0029                 __pmaintext 00C8                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0072                 ??_Lcd_Init 0020  
               ??_Lcd_Port 0073                 __stringtab 01BB             _Lcd_Write_Char 0184  
                  _Lcd_Cmd 01A1            ?_Lcd_Set_Cursor 0076                    __ptext1 013E  
                  __ptext2 0115                    __ptext3 0184                    __ptext4 001A  
                  __ptext5 0072                    __ptext6 01D4                    __ptext7 01A1  
                  __ptext8 01E1                    __ptext9 0166                    _display 0077  
             __size_of_isr 001E     __end_of_Lcd_Write_Char 01A1       end_of_initialization 0016  
                Lcd_Port@a 0070                  _TRISAbits 0085                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022          Lcd_Write_String@i 0020  
                _Lcd_Clear 01D4           _Lcd_Write_String 0115        start_initialization 000F  
              __end_of_isr 0184          __size_of_Lcd_Init 0056          __size_of_Lcd_Port 0005  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0076  
              __pbssCOMMON 0077                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0020                  __pstrings 01BB  
           __size_of_setup 0028          interrupt_function 0004                   _PIE1bits 008C  
                 Lcd_Cmd@a 0075                   _PIR1bits 000C                ??_Lcd_Clear 0076  
               _ADCON0bits 001F                __stringbase 01C0           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 0072                   _Lcd_Port 01E1   __end_of_Lcd_Write_String 013E  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 01C1              __size_of_main 004D  
               _INTCONbits 000B         Lcd_Write_Char@temp 0075                   intlevel1 0000  
                stringcode 01BB                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0025  
                 stringdir 01BB                   stringtab 01BB  
